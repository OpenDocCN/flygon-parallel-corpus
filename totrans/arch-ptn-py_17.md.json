["```py\n[plantuml, apwp_ep01, config=plantuml.cfg]\n@startuml\nhide empty members\nWorkspace *- Folder : contains\nAccount *- Workspace : owns\nAccount *-- Package : has\nUser *-- Account : manages\nWorkspace *-- User : has members\nUser *-- Document : owns\nFolder *-- Document : contains\nDocument *- Version: has\nUser *-- Version: authors\n@enduml\n```", "```py\nuser.account.workspaces[0].documents.versions[1].owner.account.settings[0];\n```", "```py\n# Lock a user's workspaces for nonpayment\n\ndef lock_account(user):\n    for workspace in user.account.workspaces:\n        workspace.archive()\n```", "```py\ndef lock_documents_in_folder(folder):\n\n    for doc in folder.documents:\n         doc.archive()\n\n     for child in folder.children:\n         lock_documents_in_folder(child)\n```", "```py\n[plantuml, apwp_ep02, config=plantuml.cfg]\n@startuml\nhide empty members\n\nclass Document {\n\n  add_version ()\n\n  workspace: Workspace\n  parent: Folder\n\n  versions: List[DocumentVersion]\n\n}\n\nclass DocumentVersion {\n\n  title : str\n  version_number: int\n\n  document: Document\n\n}\n\nclass Account {\n  add_package ()\n\n  owner : User\n  packages : List[BillingPackage]\n  workspaces: List[Workspace]\n}\n\nclass BillingPackage {\n}\n\nclass Workspace {\n\n  add_member(member: User)\n\n  account: Account\n  owner: User\n  members: List[User]\n\n}\n\nclass Folder {\n  parent: Workspace\n  children: List[Folder]\n\n  copy_to(target: Folder)\n  add_document(document: Document)\n}\n\nclass User {\n  account: Account\n}\n\nAccount --> Workspace\nAccount --> BillingPackage\nAccount --> User\nWorkspace --> User\nWorkspace --> Folder\nWorkspace --> Account\nFolder --> Folder\nFolder --> Document\nFolder --> Workspace\nFolder --> User\nDocument --> DocumentVersion\nDocument --> Folder\nDocument --> User\nDocumentVersion --> Document\nDocumentVersion --> User\nUser --> Account\n\n@enduml\n```", "```py\n[plantuml, apwp_ep03, config=plantuml.cfg]\n@startuml\nhide empty members\n\nframe Document {\n\n  class Document {\n\n    add_version ()\n\n    workspace_id: int\n    parent_folder: int\n\n    versions: List[DocumentVersion]\n\n  }\n\n  class DocumentVersion {\n\n    title : str\n    version_number: int\n\n  }\n}\n\nframe Account {\n\n  class Account {\n    add_package ()\n\n    owner : int\n    packages : List[BillingPackage]\n  }\n\n  class BillingPackage {\n  }\n\n}\n\nframe Workspace {\n   class Workspace {\n\n     add_member(member: int)\n\n     account_id: int\n     owner: int\n     members: List[int]\n\n   }\n}\n\nframe Folder {\n\n  class Folder {\n    workspace_id : int\n    children: List[int]\n\n    copy_to(target: int)\n  }\n\n}\n\nDocument o-- DocumentVersion\nAccount o-- BillingPackage\n\n@enduml\n```", "```py\nfor workspace_id in workspaces:\n    bus.handle(LockWorkspace(workspace_id))\n```", "```py\n[plantuml, apwp_ep04, config=plantuml.cfg]\n@startuml E-Commerce Context\n!include images/C4_Context.puml\n\nPerson_Ext(customer, \"Customer\", \"Wants to buy furniture\")\n\nSystem(fulfilment, \"Fulfilment System\", \"Manages order fulfilment and logistics\")\nSystem(ecom, \"E-commerce website\", \"Allows customers to buy furniture\")\n\nRel(customer, ecom, \"Uses\")\nRel(fulfilment, ecom, \"Updates stock and orders\", \"xml-rpc\")\nRel(ecom, fulfilment, \"Sends orders\", \"xml-rpc\")\n\n@enduml\n```", "```py\n[plantuml, apwp_ep05, config=plantuml.cfg]\n@startuml E-Commerce Context\n!include images/C4_Context.puml\n\nPerson_Ext(customer, \"Customer\", \"Wants to buy furniture\")\n\nSystem(av, \"Availability Service\", \"Calculates stock availability\")\nSystem(fulfilment, \"Fulfilment System\", \"Manages order fulfilment and logistics\")\nSystem(ecom, \"E-commerce website\", \"Allows customers to buy furniture\")\n\nRel(customer, ecom, \"Uses\")\nRel(customer, av, \"Uses\")\nRel(fulfilment, av, \"Publishes batch_created\", \"events\")\nRel(av, ecom, \"Publishes out_of_stock\", \"events\")\nRel(ecom, fulfilment, \"Sends orders\", \"xml-rpc\")\n\n@enduml\n```", "```py\n[plantuml, apwp_ep06, config=plantuml.cfg]\n@startuml View Fetcher Component Diagram\n!include images/C4_Component.puml\n\nLAYOUT_LEFT_RIGHT\n\nComponentDb(db, \"Database\", \"RDBMS\")\nComponent(fetch, \"View Fetcher\", \"Reads data from db, returning list of tuples or dicts\")\nComponent(build, \"View Builder\", \"Filters and maps tuples\")\nComponent(api, \"API\", \"Handles HTTP and serialization concerns\")\n\nRel(fetch, db, \"Read data from\")\nRel(build, fetch, \"Invokes\")\nRel(api, build, \"Invokes\")\n\n@enduml\n```"]
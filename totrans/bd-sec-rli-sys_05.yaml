- en: Chapter 2\. Understanding Adversaries
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: By Heather Adkins and David Huska
  prefs: []
  type: TYPE_NORMAL
- en: with Jen Barnason‎
  prefs: []
  type: TYPE_NORMAL
- en: In August 1986, Clifford Stoll, a systems administrator at Lawrence Livermore
    Laboratory, stumbled upon a seemingly benign accounting error that led to a 10-month
    search for someone stealing government secrets from the United States.^([1](ch02.html#ch02fn1))
    Largely considered to be the first public example of its kind, Stoll spearheaded
    an investigation that laid bare the specific tactics, techniques, and procedures
    (TTPs) the adversary used to achieve their goals. Through careful study, the investigation
    team was able to construct a picture of how the attacker targeted and siphoned
    data out of protected systems. Many system designers have incorporated lessons
    that arose from Stoll’s seminal article describing the team’s efforts, “Stalking
    the Wily Hacker.”
  prefs: []
  type: TYPE_NORMAL
- en: In March 2012, Google responded to an unusual power outage at one of its Belgian
    datacenters that ultimately led to local data corruption. Investigation revealed
    that a cat had damaged a nearby external power supply, triggering a series of
    cascading failures in the building’s power systems. By studying how complex systems
    fail in similar ways, Google has been able to adopt resilient design practices
    when suspending, burying, and submerging cables around the world.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding a system’s adversaries is critical to building resilience and
    survivability for a wide variety of catastrophes. In the reliability context,
    adversaries usually operate with benign intent and take abstract form. They might
    exist as routine hardware failures or cases of overwhelming user interest (so-called
    “success disasters”). They could also be configuration changes that cause systems
    to behave in unexpected ways, or fishing vessels that accidentally sever undersea
    fiber-optic cables. By contrast, adversaries in the security context are human;
    their actions are calculated to affect the target system in an undesirable way.
    Despite these contrasting intents and methods, studying reliability and security
    adversaries is important for understanding how to design and implement resilient
    systems. Without this knowledge, anticipating the actions of a Wily Hacker or
    a Curious Cat would be quite challenging.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we deep dive on security adversaries to help specialists in
    diverse fields develop an adversarial mindset. It may be tempting to think of
    security adversaries through the lens of popular stereotypes: attackers in dark
    basements with clever nicknames and potentially shady behaviors. While such colorful
    characters certainly exist, anyone with time, knowledge, or money can undermine
    the security of a system. For a small fee, anyone can purchase software that enables
    them to take over a computer or mobile phone to which they have physical access.
    Governments routinely buy or build software to compromise the systems of their
    targets. Researchers often probe the safety mechanisms of systems to understand
    how they work. Therefore, we encourage you to maintain an objective perspective
    about who is attacking a system.'
  prefs: []
  type: TYPE_NORMAL
- en: No two attacks—or attackers—are the same. We recommend taking a look at [Chapter 21](ch21.html#twoone_building_a_culture_of_security_a)
    for a discussion of the cultural aspects of dealing with adversaries. Predicting
    future security catastrophes is mostly a guessing game, even for knowledgeable
    security experts. In the following sections, we present three frameworks to understand
    attackers that we’ve found helpful over the years, exploring the potential motives
    of people attacking systems, some common attacker profiles, and how to think about
    attackers’ methods. We also provide illustrative (and hopefully entertaining)
    examples within the three frameworks.
  prefs: []
  type: TYPE_NORMAL
- en: Attacker Motivations
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Security adversaries are first and foremost human (at least for the time being).
    Therefore, we can consider the purpose of attacks through the eyes of the people
    who carry them out. Doing so may better equip us to understand how we should respond,
    both proactively (during system design) and reactively (during incidents). Consider
    the following attack motivations:'
  prefs: []
  type: TYPE_NORMAL
- en: Fun
  prefs: []
  type: TYPE_NORMAL
- en: To undermine the security of a system for the sheer joy of knowing it can be
    done.
  prefs: []
  type: TYPE_NORMAL
- en: Fame
  prefs: []
  type: TYPE_NORMAL
- en: To gain notoriety for showing off technical skills.
  prefs: []
  type: TYPE_NORMAL
- en: Activism
  prefs: []
  type: TYPE_NORMAL
- en: To make a point or broadcast a message—typically, a political viewpoint— widely.
  prefs: []
  type: TYPE_NORMAL
- en: Financial gain
  prefs: []
  type: TYPE_NORMAL
- en: To make money.
  prefs: []
  type: TYPE_NORMAL
- en: Coercion
  prefs: []
  type: TYPE_NORMAL
- en: To get a victim to knowingly do something they don’t want to do.
  prefs: []
  type: TYPE_NORMAL
- en: Manipulation
  prefs: []
  type: TYPE_NORMAL
- en: To create an intended outcome or change behavior—for example, by publishing
    false data (misinformation).
  prefs: []
  type: TYPE_NORMAL
- en: Espionage
  prefs: []
  type: TYPE_NORMAL
- en: To gain information that might be valuable (spying, including industrial espionage).
    These attacks are often performed by intelligence agencies.
  prefs: []
  type: TYPE_NORMAL
- en: Destruction
  prefs: []
  type: TYPE_NORMAL
- en: To sabotage a system, destroy its data, or just take it offline.
  prefs: []
  type: TYPE_NORMAL
- en: An attacker might be a financially motivated vulnerability researcher, government
    espionage agent, and criminal actor all at the same time! For example, in June
    2018 the US Department of Justice indicted Park Jin Hyok, a North Korean citizen
    accused of participating in [a wide variety of activities](https://oreil.ly/mVluG)
    on behalf of his government, including creating the infamous 2017 WannaCry Ransomware
    (used for financial gain), the 2014 compromise of Sony Pictures (intended to coerce
    Sony into not releasing a controversial movie, and ultimately harming the company’s
    infrastructure), and the compromise of electric utilities (presumably for espionage
    or destructive purposes). Researchers have also observed government attackers
    using the same malware leveraged in nation-state attacks to [pilfer electronic
    money](https://oreil.ly/0SRdz) in video games for personal gain.
  prefs: []
  type: TYPE_NORMAL
- en: When designing systems, it’s important to keep these diverse motivations in
    mind. Consider an organization that is processing money transfers on behalf of
    its customers. If we understand why an attacker might be interested in this system,
    we can design the system more securely. A good example of possible motivations
    in this case can be seen in the activities of a group of North Korean government
    attackers (including Park) who allegedly [attempted to steal millions of dollars](https://oreil.ly/u4cJV)
    by breaking into banking systems and exploiting the SWIFT transaction system to
    transfer money out of customer accounts.
  prefs: []
  type: TYPE_NORMAL
- en: Attacker Profiles
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We can better understand attacker motivations by taking the people themselves
    into account: who they are, whether they perform attacks for themselves or for
    someone else, and their general interests. In this section, we outline some *profiles*
    of attackers, indicating how they relate to a system designer and including a
    few tips for protecting your systems from these types of attackers. For the sake
    of brevity, we’ve taken some liberties with generalizations, but remember: no
    two attacks or attackers are the same. This information is meant to be illustrative
    rather than definitive.'
  prefs: []
  type: TYPE_NORMAL
- en: Hobbyists
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The first computer hackers were *hobbyists*—curious technologists who wanted
    to understand how systems worked. In the process of taking computers apart or
    debugging their programs, these “hackers” discovered flaws that the original system
    designers hadn’t noticed. Generally speaking, hobbyists are motivated by their
    thirst for knowledge; they hack for fun, and can be allies to developers looking
    to build resilience into a system. More often than not, hobbyists abide by personal
    ethics about not harming systems and don’t cross boundaries into criminal behavior.
    By leveraging insight into how these hackers think about problems, you can make
    your systems more secure.
  prefs: []
  type: TYPE_NORMAL
- en: Vulnerability Researchers
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*Vulnerability researchers* use their security expertise professionally. They
    enjoy finding security flaws as full-time employees, part-time freelancers, or
    even accidentally as average users who stumble across bugs. Many researchers participate
    in Vulnerability Reward Programs, also known as *bug bounties* (see [Chapter 20](ch20.html#twozero_understanding_roles_and_respons)).'
  prefs: []
  type: TYPE_NORMAL
- en: Vulnerability researchers are typically motivated to make systems better, and
    can be important allies to organizations seeking to secure their systems. They
    tend to operate within a set of predictable disclosure norms that set expectations
    between system owners and researchers about how vulnerabilities are discovered,
    reported, fixed, and discussed. Researchers operating under these norms avoid
    inappropriately accessing data, causing harm, or breaking the law. Typically,
    operating outside these norms invalidates the possibility of getting a reward
    and may qualify as criminal behavior.
  prefs: []
  type: TYPE_NORMAL
- en: Relatedly, *Red Teams* and penetration testers attack targets with the permission
    of the system owner, and may be hired explicitly for these exercises. Like researchers,
    they look for ways to defeat system security with a focus on improving security
    and operate within a set of ethical guidelines. For more discussion on Red Teams,
    see [Chapter 20](ch20.html#twozero_understanding_roles_and_respons).
  prefs: []
  type: TYPE_NORMAL
- en: Governments and Law Enforcement
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*Government organizations* (for example, law enforcement agencies and intelligence
    agencies) may hire security experts to gather intelligence, police domestic crime,
    commit economic espionage, or complement military operations. By now, most national
    governments have invested in fostering security expertise for these purposes.
    In some cases, governments may turn to talented students fresh out of school,
    reformed attackers who have spent time in jail, or notable luminaries in the security
    industry. While we can’t cover these types of attackers extensively here, we provide
    a few examples of their most common activities.'
  prefs: []
  type: TYPE_NORMAL
- en: Intelligence gathering
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Intelligence gathering is probably the most publicly discussed government activity
    that employs people who know how to break into systems. In the past few decades,
    traditional spying techniques, including signals intelligence (SIGINT) and human
    intelligence (HUMINT), have modernized with the advent of the internet. In one
    famous example from 2011, [the security company RSA was compromised](https://oreil.ly/Es3PA)
    by an adversary many experts associate with [China’s intelligence apparatus](https://oreil.ly/DuLZV).
    The attackers compromised RSA to steal cryptographic seeds for their popular two-factor
    authentication tokens. Once they had these seeds, the attackers didn’t need physical
    tokens to generate one-time authentication credentials to log in to the systems
    of Lockheed Martin, a defense contractor that builds technology for the US military.
    Once upon a time, breaking into a company like Lockheed would have been performed
    by human operatives onsite—for example, by bribing an employee or having a spy
    hired at the firm. The advent of systems intrusion, however, has enabled attackers
    to use more sophisticated electronic techniques to obtain secrets in new ways.
  prefs: []
  type: TYPE_NORMAL
- en: Military purposes
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Governments may break into systems for military purposes—what specialists often
    refer to as *cyber warfare* or *information warfare*. Imagine that a government
    wants to invade another country. Could they somehow attack the target’s air defense
    systems and trick them into not recognizing an inbound air force? Could they shut
    down their power, water, or banking systems?^([2](ch02.html#ch02fn2)) Alternatively,
    imagine that a government wants to prevent another country from building or obtaining
    a weapon. Could they remotely and stealthily disrupt their progress? This scenario
    supposedly happened in Iran in the late 2000s, when attackers illicitly introduced
    a modularized piece of software onto the control systems of centrifuges used to
    enrich uranium. Dubbed [*Stuxnet*](https://oreil.ly/WNu9A) by researchers, this
    operation reportedly intended to destroy the centrifuges and halt Iran’s nuclear
    program.
  prefs: []
  type: TYPE_NORMAL
- en: Policing domestic activity
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Governments may also break into systems to police domestic activity. In a recent
    example, NSO Group, a cybersecurity contractor, sold software to various governments
    that allowed private surveillance of communications between people without their
    knowledge (through the remote monitoring of mobile phone calls). Reportedly, this
    software was intended to surveil terrorists and criminals—relatively noncontroversial
    targets. Unfortunately, some of NSO Group’s government customers have also used
    the software to listen in on journalists and activists, in some cases leading
    to harassment, arrest, and even possibly death.^([3](ch02.html#ch02fn3)) The ethics
    of governments using these capabilities against their own people is a hotly debated
    topic, especially in countries without strong legal frameworks and proper oversight.
  prefs: []
  type: TYPE_NORMAL
- en: Protecting your systems from nation-state actors
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: System designers should carefully consider whether they could be the target
    of a nation-state actor. To this end, you need to understand activities carried
    out by your organization that may be attractive to these actors. Consider a technology
    company that builds and sells microprocessor technology to a military branch of
    the government. It’s possible that other governments would also be interested
    in having those chips, and may resort to stealing their designs via electronic
    means.
  prefs: []
  type: TYPE_NORMAL
- en: Your service may also have data that a government wants but that is otherwise
    difficult for it to obtain. Generally speaking, intelligence agencies and law
    enforcement value personal communications, location data, and similar types of
    sensitive personal information. In January 2010, [Google announced](https://oreil.ly/d3C-z)
    it had witnessed a sophisticated targeted attack from China (dubbed “Operation
    Aurora” by researchers) against its corporate infrastructure that is now widely
    understood to have been aimed at long-term access to Gmail accounts. Storing the
    personal information of customers, especially private communications, can raise
    the risk that an intelligence or law enforcement agency would be interested in
    your systems.
  prefs: []
  type: TYPE_NORMAL
- en: Sometimes you might be a target without realizing it. Operation Aurora wasn’t
    limited to large tech companies—it affected at least 20 victims in a variety of
    finance, technology, media, and chemical sectors. These organizations were both
    large and small, and many did not consider themselves at risk of a nation-state
    attack.
  prefs: []
  type: TYPE_NORMAL
- en: Consider, for example, an app that aims to provide athletes with data tracking
    analytics, including where they cycle or run. Would this data be an attractive
    target to an intelligence agency? Analysts looking at a public heatmap created
    by the fitness tracking company Strava considered this exact question in 2018
    when they noticed that the [locations of secret military bases in Syria were revealed](https://oreil.ly/N1g_X)
    when US troops used the service to track their workouts.
  prefs: []
  type: TYPE_NORMAL
- en: System designers should also be aware that governments can typically deploy
    significant resources to obtain access to data that they’re interested in. Mounting
    a defense against a government that’s interested in your data might require far
    and above the resources your organization can dedicate to implementing security
    solutions. We recommend that organizations take the long view with regard to building
    security defenses by investing early in protecting their most sensitive assets,
    and by having a continued rigorous program that can apply new layers of protections
    over time. An ideal outcome is forcing an adversary to expend a significant amount
    of their resources to target you—increasing their risk of being caught—so that
    their activities can be revealed to other possible victims and government authorities.
  prefs: []
  type: TYPE_NORMAL
- en: Activists
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*Hacktivism* is the act of using technology to call for social change. This
    term is loosely applied to a wide variety of online political activities, from
    the subversion of government surveillance to the malicious disruption of systems.^([4](ch02.html#ch02fn4))
    For the purpose of thinking about how to design systems, we consider the latter
    case here.'
  prefs: []
  type: TYPE_NORMAL
- en: Hacktivists have been known to *deface* websites—that is, replace normal content
    with a political message. In [one example from 2015](https://oreil.ly/fZAD-),
    the Syrian Electronic Army—a collective of malicious actors operating in support
    of the regime of Bashar al-Assad—took over a content distribution network (CDN)
    that served web traffic for [*www.army.mil*](http://www.army.mil). The attackers
    were then able to insert a pro-Assad message subsequently seen by visitors to
    the website. This kind of attack can be very embarrassing for website owners and
    can undermine user trust in the site.
  prefs: []
  type: TYPE_NORMAL
- en: Other hacktivist attacks may be far more destructive. For example, in November
    2012 the decentralized, international hacktivist group Anonymous^([5](ch02.html#ch02fn5))
    [took numerous Israeli websites offline](https://oreil.ly/Btovx) through denial-of-service
    attacks. As a result, anyone visiting the affected websites experienced slow service
    or an error. Distributed denial-of-service attacks of this nature send the victim
    a flood of traffic from thousands of compromised machines distributed across the
    world. Brokers of these so-called botnets often provide this sort of capability
    for purchase online, making the attacks common and easy to carry out. On the more
    serious end of the spectrum, attackers may even threaten to destroy or sabotage
    systems entirely, inspiring some researchers to label them cyberterrorists.
  prefs: []
  type: TYPE_NORMAL
- en: Unlike other types of attackers, hacktivists are usually vocal about their activity
    and often take credit publicly. This can manifest itself in numerous ways, including
    posting on social media or destroying systems. Activists involved in such attacks
    may not even be very technically savvy. This can make predicting or defending
    against hacktivism difficult.
  prefs: []
  type: TYPE_NORMAL
- en: Protecting your systems from hacktivists
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: We recommend thinking about whether your business or project is involved in
    controversial topics that may draw the attention of activists. For example, does
    your website allow users to host their own content, like blogs or videos? Does
    your project involve a politically oriented issue like animal rights? Do activists
    use any of your products, such as a messaging service? If the answer to any of
    these questions is “yes,” you may need to consider very robust, layered security
    controls that ensure your systems are patched against vulnerabilities and resilient
    to DoS attacks, and that your backups can restore a system and its data quickly.
  prefs: []
  type: TYPE_NORMAL
- en: Criminal Actors
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Attack techniques are used to carry out crimes that closely resemble their nondigital
    cousins—for example, committing identity fraud, stealing money, and blackmail.
    *Criminal actors* have a wide range of technical abilities. Some may be sophisticated
    and write their own tools. Others may purchase or borrow tools that other people
    build, relying on their easy, click-to-attack interfaces. In fact, *social engineering*—the
    act of tricking a victim into aiding you in the attack—is highly effective despite
    being at the lowest end of difficulty. The only barriers to entry for most criminal
    actors are a bit of time, a computer, and a little cash.
  prefs: []
  type: TYPE_NORMAL
- en: Presenting a full catalog of the kinds of criminal activities that occur in
    the digital realm would be impossible, but we provide a few illustrative examples
    here. For example, imagine that you wanted to predict merger and acquisition activities
    so you could time certain stock trades accordingly. Three criminal actors in China
    had this exact idea in 2014–2015 and [made a few million dollars](https://oreil.ly/F8pga)
    by stealing sensitive information from unsuspecting law firms.
  prefs: []
  type: TYPE_NORMAL
- en: In the past 10 years, attackers have also realized that victims will hand over
    money when their sensitive data is threatened. *Ransomware* is software that holds
    a system or its information hostage (usually by encrypting it) until the victim
    makes a payment to the attacker. Commonly, attackers infect victim machines with
    this software (which is often packaged and sold to attackers as a toolkit) by
    exploiting vulnerabilities, by packaging the ransomware with legitimate software,
    or by tricking the user into installing it themselves.
  prefs: []
  type: TYPE_NORMAL
- en: Criminal activity does not always manifest as overt attempts to steal money.
    *Stalkerware*—spying software that’s often sold for as little as $20—aims to gather
    information about another person without their knowledge. The malicious software
    is introduced onto a victim’s computer or mobile phone either by tricking the
    victim into installing it or via direct installation by an attacker with access
    to the device. Once in place, the software can record video and audio. Since [stalkerware
    is often used by people close to the victim](https://oreil.ly/xvpFp), such as
    a spouse, this kind of trust exploitation can be devastatingly effective.
  prefs: []
  type: TYPE_NORMAL
- en: Not all criminal actors work for themselves. Companies, law firms, political
    campaigns, cartels, gangs, and other organizations hire malicious actors for their
    own purposes. For example, [a Colombian attacker](https://oreil.ly/5sOcj) claimed
    he was hired to assist a candidate in the 2012 presidential race in Mexico and
    other elections throughout Latin America by stealing opposition information and
    spreading misinformation. In a stunning case from Liberia, an employee of Cellcom,
    a mobile phone service provider, reportedly [hired an attacker](https://oreil.ly/aSCRX)
    to degrade the network of its rival cellular service provider, Lonestar. These
    attacks disrupted Lonestar’s ability to serve its customers, causing the company
    to lose significant amounts of revenue.
  prefs: []
  type: TYPE_NORMAL
- en: Protecting your systems from criminal actors
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When designing systems to be resilient against criminal actors, keep in mind
    that these actors tend to gravitate toward the easiest way to meet their goals
    with the least up-front cost and effort. If you can make your system resilient
    enough, they may shift their focus to another victim. Therefore, consider which
    systems they might target, and how to make their attacks expensive. The evolution
    of Completely Automated Public Turing test (CAPTCHA) systems is a good example
    of how to increase the cost of attacks over time. CAPTCHAs are used to determine
    whether a human or an automated bot is interacting with a website—for example,
    during a login. Bots are often a sign of malicious activity, so being able to
    determine if the user is human can be an important signal. Early CAPTCHA systems
    asked humans to validate slightly distorted letters or numbers that bots had a
    difficult time recognizing. As the bots became more sophisticated, CAPTCHA implementers
    began using distortion pictures and object recognition. These tactics aimed to
    significantly increase the cost of attacking CAPTCHAs over time.^([6](ch02.html#ch02fn6))
  prefs: []
  type: TYPE_NORMAL
- en: Automation and Artificial Intelligence
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In 2015, the US Defense Advanced Research Projects Agency (DARPA) announced
    the [Cyber Grand Challenge contest](https://oreil.ly/3ySRv) to design a cyber-reasoning
    system that could self-learn and operate without human intervention to find flaws
    in software, develop ways to exploit these flaws, and then patch against the exploitations.
    Seven teams participated in a live “final event” and watched their fully independent
    reasoning systems attack each other from the comfort of a large ballroom. The
    first-place team succeeded in developing such a self-learning system!
  prefs: []
  type: TYPE_NORMAL
- en: The success of the Cyber Grand Challenge suggests that it’s likely at least
    some attacks in the future could be executed without humans directly at the controls.
    Scientists and ethicists ponder whether fully sentient machines might be capable
    enough to learn how to attack each other. The notion of autonomous attack platforms
    is also prompting the need for increasingly automated defenses, which we predict
    will be an important area of research for future system designers.
  prefs: []
  type: TYPE_NORMAL
- en: Protecting your systems from automated attacks
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To withstand the onslaught of automated attacks, developers need to consider
    resilient system design by default, and be able to automatically iterate the security
    posture of their systems. We cover many of these topics in this book, such as
    automated configuration distribution and access justifications in [Chapter 5](ch05.html#design_for_least_privilege);
    automated build, test, and deployment of code in [Chapter 14](ch14.html#onefour_deploying_code);
    and handling DoS attacks in [Chapter 8](ch08.html#design_for_resilience).
  prefs: []
  type: TYPE_NORMAL
- en: Insiders
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Every organization has *insiders*: current or former employees who are trusted
    with internal access to systems or proprietary knowledge. *Insider risk* is the
    threat posed by such individuals. A person becomes an *insider threat* when they
    are able to perform actions that cover a wide range of malicious, negligent, or
    accidental scenarios that could result in harm to the organization. Insider risk
    is a large topic that could fill the pages of several books. To help system designers,
    we cover the topic briefly here by considering three general categories, as outlined
    in [Table 2-1](#general_categories_of_insiders_and_exam).'
  prefs: []
  type: TYPE_NORMAL
- en: Table 2-1\. General categories of insiders and examples
  prefs: []
  type: TYPE_NORMAL
- en: '| First-party insiders | Third-party insiders | Related insiders |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Employees Interns'
  prefs: []
  type: TYPE_NORMAL
- en: Executives
  prefs: []
  type: TYPE_NORMAL
- en: Board directors | Third-party app developers Open source contributors
  prefs: []
  type: TYPE_NORMAL
- en: Trusted content contributors
  prefs: []
  type: TYPE_NORMAL
- en: Commercial partners
  prefs: []
  type: TYPE_NORMAL
- en: Contractors
  prefs: []
  type: TYPE_NORMAL
- en: Vendors
  prefs: []
  type: TYPE_NORMAL
- en: Auditors | Friends Family
  prefs: []
  type: TYPE_NORMAL
- en: Roommates |
  prefs: []
  type: TYPE_NORMAL
- en: First-party insiders
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '*First-party insiders* are people brought into the fold for a specific purpose—usually
    to participate directly in meeting business objectives. This category includes
    employees who directly work for the company, executives, and members of the board
    who make critical company decisions. You can probably think of other people who
    fall into the category too. Insiders with first-party access to sensitive data
    and systems make up the majority of news stories about insider risk. Take the
    case of the [engineer working for General Electric](https://oreil.ly/hiKqf) who
    was indicted in April 2019 on charges of stealing proprietary files, embedding
    them into photos using steganographic software (in order to conceal their theft),
    and sending them to his personal email account. Prosecutors allege that his goal
    was to enable him and his business partner in China to produce low-cost versions
    of GE’s turbomachines and sell them to the Chinese government. Stories like this
    are prevalent throughout high-tech firms that produce next-generation technology.'
  prefs: []
  type: TYPE_NORMAL
- en: Access to personal data can also be tempting to insiders with voyeuristic tendencies,
    people who want to seem important for having privileged access, and even people
    who want to sell such information. In [an infamous case from 2008](https://oreil.ly/Em5wF),
    several hospital workers were fired from UCLA Medical Center after inappropriately
    looking at the files of patients, including high-profile celebrities. As more
    and more consumers sign up for social networking, messaging, and banking services,
    protecting their data from inappropriate employee access is more important than
    ever.
  prefs: []
  type: TYPE_NORMAL
- en: Some of the most radical stories of insider risk involve disgruntled insiders.
    In January 2019, a man who had been fired for poor performance was convicted of
    [deleting 23 of his former employer’s virtual servers](https://oreil.ly/7avdj).
    The incident lost the company key contracts and significant revenue. Almost any
    company that’s been around for a while has similar stories. Because of the dynamics
    of employment relationships, this risk is unavoidable.
  prefs: []
  type: TYPE_NORMAL
- en: The preceding examples cover scenarios in which someone with malicious intent
    affects the security of systems and information. However, as some examples earlier
    in the book illustrate, first-party insiders can also impact the reliability of
    systems. For example, the previous chapter discusses a string of unfortunate insider
    actions in the design, operation, and maintenance of a password storage system
    that prevented SREs from accessing credentials in an emergency. As we’ll see,
    anticipating the mistakes that insiders can introduce is vital to guaranteeing
    system integrity.
  prefs: []
  type: TYPE_NORMAL
- en: Third-party insiders
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'With the rise of open source software and open platforms, it’s increasingly
    likely that an insider threat may be someone whom few people (or no one) in your
    organization have ever met. Consider the following scenario: your company has
    developed a new library that’s helpful for processing images. You decide to open
    source the library and accept code change lists from the public. In addition to
    company employees, you now have to consider open source contributors as insiders.
    After all, if an open source contributor on the other side of the world whom you’ve
    never met submits a malicious change list, they can harm people using your library.'
  prefs: []
  type: TYPE_NORMAL
- en: Similarly, open source developers rarely have the ability to test their code
    in all environments where it might be deployed. Additions to the codebase might
    introduce unpredictable reliability issues, such as unanticipated performance
    degradations or hardware compatibility issues. In this scenario, you’d want to
    implement controls ensuring that all submitted code is thoroughly reviewed and
    tested. For more details on best practices in this area, see Chapters [13](ch13.html#onethree_testing_code)
    and [14](ch14.html#onefour_deploying_code).
  prefs: []
  type: TYPE_NORMAL
- en: You should also think carefully about how you extend a product’s functionality
    via application programming interfaces (APIs). Suppose your organization develops
    a human resources platform with a third-party developer API so companies can easily
    extend the functionality of your software. If the third-party developer has privileged
    or special access to the data, they may now be an insider threat. Carefully consider
    the access you’re providing through the API, and what the third party can do once
    they have access. Can you limit the impact these extended insiders have on system
    reliability and security?
  prefs: []
  type: TYPE_NORMAL
- en: Related insiders
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: It’s not uncommon to implicitly trust the people we live with, but these relationships
    are often overlooked by system designers when designing secure systems.^([7](ch02.html#ch02fn7))
    Consider a situation in which an employee takes their laptop home over the weekend.
    Who has access to that device when it’s unlocked on the kitchen table, and what
    impact could they have, either maliciously or unintended? Telecommuting, working
    from home, and late-night pager duty are increasingly common for technology workers.
    When considering your insider risk threat model, be sure to use a broad definition
    of “workplace” that also includes the home. The person behind the keyboard may
    not always be the “typical” insider.
  prefs: []
  type: TYPE_NORMAL
- en: Threat modeling insider risk
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Numerous frameworks exist for modeling insider risk, ranging from simple to
    highly topic-specific, sophisticated, and detailed. If your organization needs
    a simple model to get started, we have successfully used the framework in [Table 2-2](#framework_for_modeling_insider_risk).
    This model is also adaptable to a quick brainstorming session or fun card game.
  prefs: []
  type: TYPE_NORMAL
- en: Table 2-2\. Framework for modeling insider risk
  prefs: []
  type: TYPE_NORMAL
- en: '| Actor/Role | Motive | Actions | Target |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Engineering | Accidental | Data access | User data |'
  prefs: []
  type: TYPE_TB
- en: '| Operations | Negligent | Exfiltration (theft) | Source code |'
  prefs: []
  type: TYPE_TB
- en: '| Sales | Compromised | Deletions | Documents |'
  prefs: []
  type: TYPE_TB
- en: '| Legal | Financial | Modifications | Logs |'
  prefs: []
  type: TYPE_TB
- en: '| Marketing | Ideological | Injections | Infrastructure |'
  prefs: []
  type: TYPE_TB
- en: '| Executives | Retaliatory | Leak to press | Services |'
  prefs: []
  type: TYPE_TB
- en: '|  | Vanity |  | Financials |'
  prefs: []
  type: TYPE_TB
- en: 'First, establish a list of *actors/roles* present in your organization. Attempt
    to think of all the *actions* that may cause harm (including accidents) and potential
    *targets* (data, systems, etc.). You can combine items from each category to create
    many scenarios. Here are some examples to get you started:'
  prefs: []
  type: TYPE_NORMAL
- en: An *engineer* with access to *source code* is unsatisfied with their performance
    review and *retaliates* by injecting a malicious backdoor into production that
    steals *user data*.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An *SRE* with access to the website’s SSL *encryption keys* is approached by
    a stranger and is *strongly encouraged* (for example, via threats to their family)
    to hand over sensitive material.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A *financial analyst* preparing the *company financials* is working overtime
    and *accidentally* modifies the *final yearly revenue numbers* by a factor of
    1,000%.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An *SRE’s child* uses their parent’s laptop at home and installs a game bundled
    with *malware* that locks the computer and *prevents the SRE from responding*
    to a serious outage.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Designing for insider risk
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This book presents many design strategies for security that are applicable to
    protecting against insider risk and malicious “outside” attackers. When designing
    systems, you must consider that whoever has access to a system or its data could
    be any of the attacker types outlined in this chapter. Therefore, the strategies
    for detecting and mitigating both types of risk are similar.
  prefs: []
  type: TYPE_NORMAL
- en: 'We have found a few concepts to be particularly effective when thinking about
    insider risk:'
  prefs: []
  type: TYPE_NORMAL
- en: Least privilege
  prefs: []
  type: TYPE_NORMAL
- en: Granting the fewest privileges necessary to perform job duties, both in terms
    of scope and duration of access. See [Chapter 5](ch05.html#design_for_least_privilege).
  prefs: []
  type: TYPE_NORMAL
- en: Zero trust
  prefs: []
  type: TYPE_NORMAL
- en: Designing automated or proxy mechanisms for managing systems so that insiders
    don’t have broad access that allows them to cause harm. See [Chapter 3](ch03.html#case_study_safe_proxies).
  prefs: []
  type: TYPE_NORMAL
- en: Multi-party authorization
  prefs: []
  type: TYPE_NORMAL
- en: Using technical controls to require more than one person to authorize sensitive
    actions. See [Chapter 5](ch05.html#design_for_least_privilege).
  prefs: []
  type: TYPE_NORMAL
- en: Business justifications
  prefs: []
  type: TYPE_NORMAL
- en: Requiring employees to formally document their reason for accessing sensitive
    data or systems. See [Chapter 5](ch05.html#design_for_least_privilege).
  prefs: []
  type: TYPE_NORMAL
- en: Auditing and detection
  prefs: []
  type: TYPE_NORMAL
- en: Reviewing all access logs and justifications to make sure they’re appropriate.
    See [Chapter 15](ch15.html#onefive_investigating_systems).
  prefs: []
  type: TYPE_NORMAL
- en: Recoverability
  prefs: []
  type: TYPE_NORMAL
- en: The ability to recover systems after a destructive action, like a disgruntled
    employee deleting critical files or systems. See [Chapter 9](ch09.html#design_for_recovery).
  prefs: []
  type: TYPE_NORMAL
- en: Attacker Methods
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'How do the threat actors we’ve described carry out their attacks? Knowing the
    answer to this question is critical for understanding how someone might compromise
    your systems and, in turn, how you can protect them. Understanding how attackers
    operate can feel like complex magic. Trying to predict what any particular attacker
    might do on any given day is unfeasible because of the variety of attack methods
    available. There is no way for us to present every possible method here, but thankfully,
    developers and system designers can leverage an increasingly large repository
    of examples and frameworks to wrap their heads around this problem. In this section,
    we discuss a few frameworks for studying attacker methods: threat intelligence,
    cyber kill chains, and TTPs.'
  prefs: []
  type: TYPE_NORMAL
- en: Threat Intelligence
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Many security firms produce detailed descriptions of attacks they’ve seen in
    the wild. This *threat intelligence* can help system defenders understand how
    real attackers are working every day and how to repel them. Threat intelligence
    comes in multiple forms, each serving a different purpose:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Written reports* describe how attacks occurred and are especially useful for
    learning about the progression and intent of an attacker. Such reports are often
    generated as a result of hands-on response activities and may vary in quality
    depending on the expertise of the researchers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Indicators of compromise* (IOCs) are typically finite attributes of an attack,
    such as the IP address where an attacker hosted a phishing website or the SHA256
    checksum of a malicious binary. IOCs are often structured using a common format^([8](ch02.html#ch02fn8))
    and obtained through automated feeds so they can be used to programmatically configure
    detection systems.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Malware reports* provide insight into the capabilities of attacker tools and
    can be a source of IOCs. These reports are generated by experts in *reverse engineering*
    binaries, usually using standard tools of the trade such as IDA Pro or Ghidra.
    Malware researchers also use these studies to cross-correlate unrelated attacks
    according to their common software attributes.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Acquiring threat intelligence from a reputable security firm—preferably one
    with customer references—can help you better understand the observed activities
    of attackers, including attacks affecting peer organizations in your industry.
    Knowing what kinds of attacks organizations similar to yours are facing can provide
    an early warning of what you might face someday. Many threat intelligence firms
    also publicly release yearly summary and trend reports for free.^([9](ch02.html#ch02fn9))
  prefs: []
  type: TYPE_NORMAL
- en: Cyber Kill Chains™
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: One way of preparing for attacks is to lay out all the possible steps that an
    attacker may have to take to achieve their goals. Some security researchers use
    formalized frameworks like the Cyber Kill Chain^([10](ch02.html#ch02fn10)) to
    analyze attacks this way. These kinds of frameworks can help you plot the formal
    progression of an attack alongside defensive controls to consider. [Table 2-3](#cyber_kill_chain_of_a_hypothetical_atta)
    shows the stages of a hypothetical attack relative to some defensive layers.
  prefs: []
  type: TYPE_NORMAL
- en: Table 2-3\. Cyber Kill Chain of a hypothetical attack
  prefs: []
  type: TYPE_NORMAL
- en: '| Attack stage | Attack example | Example defenses |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| *Reconnaissance*: Surveilling a target victim to understand their weak points.
    | Attacker uses a search engine to find the email addresses of employees at a
    target organization. | Educate employees about online safety. |'
  prefs: []
  type: TYPE_TB
- en: '| *Entry*: Gaining access to the network, systems, or accounts necessary to
    carry out the attack. | Attacker sends phishing emails to employees that lead
    to compromised account credentials. The attacker then signs in to the organization’s
    virtual private network (VPN) service using those credentials. | Use two-factor
    authentication (such as security keys) for the VPN service. Only permit VPN connections
    from organization-managed systems. |'
  prefs: []
  type: TYPE_TB
- en: '| *Lateral movement*: Moving between systems or accounts to gain additional
    access. | Attacker remotely logs in to other systems using the compromised credentials.
    | Permit employees to log in to only their own systems. Require two-factor authentication
    for login to multiuser systems. |'
  prefs: []
  type: TYPE_TB
- en: '| *Persistence*: Ensuring ongoing access to compromised assets. | Attacker
    installs a backdoor on the newly compromised systems that provides them with remote
    access. | Use application whitelisting that permits only authorized software to
    run. |'
  prefs: []
  type: TYPE_TB
- en: '| *Goals*: Taking action on attack goals. | Attacker steals documents from
    the network and uses the remote access backdoor to exfiltrate them. | Enable least
    privileged access to sensitive data and monitoring of employee accounts. |'
  prefs: []
  type: TYPE_TB
- en: Tactics, Techniques, and Procedures
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Methodically categorizing attacker TTPs is an increasingly common way of cataloging
    attack methods. Recently, MITRE has developed the [ATT&CK framework](https://attack.mitre.org)
    to instrument this idea more thoroughly. In short, the framework expands each
    stage of the cyber kill chain into detailed steps and provides formal descriptions
    of how an attacker could carry out each stage of an attack. For example, in the
    Credential Access stage, ATT&CK describes how a user’s *.bash_history* may contain
    accidentally typed passwords that an attacker could obtain by simply reading the
    file. The ATT&CK framework lays out hundreds (potentially thousands) of ways attackers
    can operate so that defenders can build defenses against each attack method.
  prefs: []
  type: TYPE_NORMAL
- en: Risk Assessment Considerations
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Understanding potential adversaries, who they are, and which methods they might
    use can be complex and nuanced. We have found the following considerations important
    when assessing the risk posed by various attackers:'
  prefs: []
  type: TYPE_NORMAL
- en: You may not realize you’re a target.
  prefs: []
  type: TYPE_NORMAL
- en: It may not be immediately obvious that your company, organization, or project
    is a potential target. Many organizations, despite being small or not involved
    in handling sensitive information, can be leveraged to carry out attacks. In September
    2012, Adobe—a company best known for software that enables content creators—disclosed
    that [attackers had penetrated its networks](https://oreil.ly/R4-8A) with the
    express intent to digitally sign their malware using the company’s official software
    signing certificate. This enabled the attackers to deploy malware that appeared
    legitimate to antivirus and other security protection software. Consider whether
    your organization has assets that an attacker would be interested in, either for
    direct gain or as part of a larger attack on someone else.
  prefs: []
  type: TYPE_NORMAL
- en: Attack sophistication is not a true predictor of success.
  prefs: []
  type: TYPE_NORMAL
- en: Even if an attacker has a lot of resources and skills, don’t assume that they’ll
    always choose the most difficult, expensive, or esoteric means to achieve their
    goals. Generally speaking, attackers choose the simplest and most cost-effective
    methods of compromising a system that meet their goals. For example, some of the
    most prominent and impactful intelligence gathering operations rely on basic [*phishing*](https://oreil.ly/11AyT)—tricking
    a user into handing over their password. For this reason, when designing your
    systems, be sure to cover the simple basics of security (like using two-factor
    authentication) before worrying about esoteric and exotic attacks (like firmware
    backdoors).
  prefs: []
  type: TYPE_NORMAL
- en: Don’t underestimate your adversary.
  prefs: []
  type: TYPE_NORMAL
- en: Don’t assume that an adversary can’t procure the resources to carry out an expensive
    or difficult attack. Consider carefully how much your adversary is willing to
    spend. The extraordinary tale of the NSA implanting backdoors in Cisco hardware
    by intercepting shipments en route to customers illustrates the lengths that well-funded
    and talented attackers will go to achieve their goals.^([11](ch02.html#ch02fn11))
    However, keep in mind that these types of cases are very much the exception rather
    than the norm.
  prefs: []
  type: TYPE_NORMAL
- en: Attribution is hard.
  prefs: []
  type: TYPE_NORMAL
- en: In March 2016, researchers uncovered a new type of ransomware—a malicious program
    that renders data or systems unavailable until the victim pays a ransom—which
    they named Petya. Petya appeared to be financially motivated. A year later, researchers
    discovered a new piece of malware that shared many elements of the original Petya
    program. Dubbed [NotPetya](https://oreil.ly/DGYDx), the new malware spread globally
    very quickly, but was primarily found on systems in Ukraine on the eve of a Ukrainian
    holiday. To deliver NotPetya, attackers compromised a company that made products
    explicitly for the Ukrainian market and abused their software distribution mechanism
    to infect victims. Some researchers believe that this attack was carried out by
    a Russian state-sponsored actor in order to target Ukraine.
  prefs: []
  type: TYPE_NORMAL
- en: This example shows that motivated attackers can hide their motives and identity
    in creative ways—in this case, by disguising themselves as something potentially
    more benign. Since the identity and intent of attackers may not always be well
    understood, we recommend that you focus on how attackers work (their TTPs) before
    worrying about who they are specifically.
  prefs: []
  type: TYPE_NORMAL
- en: Attackers aren’t always afraid of being caught.
  prefs: []
  type: TYPE_NORMAL
- en: Even if you manage to track an attacker’s location and identity, the criminal
    system (especially internationally) may make it difficult to hold them legally
    accountable for their actions. This is especially true for nation-state actors
    working directly for a government that may be unwilling to extradite them for
    criminal prosecution.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: All security attacks can be traced back to a motivated person. We’ve covered
    some common attacker profiles to help you identify who may want to target your
    services and why, allowing you to prioritize your defenses accordingly.
  prefs: []
  type: TYPE_NORMAL
- en: Assess who might want to target you. What are your assets? Who buys your products
    or services? Could your users or their actions motivate attackers? How do your
    defensive resources compare to the offensive resources of your potential adversaries?
    Even when facing a well-funded attacker, the information in the rest of this book
    can help make you a more expensive target, possibly removing the economic incentive
    for an attack. Don’t overlook the smaller, less conspicuous adversary—anonymity,
    location, ample time, and the difficulty of prosecution can all be advantages
    to an attacker, allowing them to cause you disproportionately large amounts of
    damage. Consider your insider risk, as all organizations face both malicious and
    nonmalicious potential threats from insiders. The elevated access granted to insiders
    allows them to inflict significant damage.
  prefs: []
  type: TYPE_NORMAL
- en: Stay current on the threat intelligence issued by security firms. While a multistep
    attack methodology can be effective, it also provides multiple contact points
    where you can detect and prevent an attack. Be mindful of complex attack strategies,
    but don’t forget that simple, unsophisticated attacks like phishing can be painfully
    effective. Don’t underestimate your adversaries or your own value as a target.
  prefs: []
  type: TYPE_NORMAL
- en: '^([1](ch02.html#ch02fn1-marker)) Stoll documented the attack in an article
    in *Communications of the ACM*, [“Stalking the Wily Hacker”](https://oreil.ly/JaC0B),
    and the book *The Cuckoo’s Egg: Tracking a Spy Through the Maze of Computer Espionage*
    (Gallery Books). Both are good resources for anyone designing secure and reliable
    systems, as their findings are still relevant today.'
  prefs: []
  type: TYPE_NORMAL
- en: ^([2](ch02.html#ch02fn2-marker)) As an example of how complicated this space
    can be, not all attackers in such conflicts are part of an organized military.
    For example, Dutch attackers reportedly compromised the US military during the
    Persian Gulf War (1991) and [offered stolen information to the Iraqi government](https://oreil.ly/7eNxW).
  prefs: []
  type: TYPE_NORMAL
- en: ^([3](ch02.html#ch02fn3-marker)) NSO Group’s activities have been researched
    and documented by The CitizenLab, a research and policy laboratory based at the
    Munk School of Global Affairs & Public Policy, University of Toronto. For an example,
    see [*https://oreil.ly/IqDN_*](https://oreil.ly/IqDN_).
  prefs: []
  type: TYPE_NORMAL
- en: ^([4](ch02.html#ch02fn4-marker)) There is some debate about who coined this
    term and what it means, but it became widely used after 1996 when it was adopted
    by [Hacktivismo](https://oreil.ly/oWzO8), a group associated with the Cult of
    the Dead Cow (cDc).
  prefs: []
  type: TYPE_NORMAL
- en: ^([5](ch02.html#ch02fn5-marker)) Anonymous is a moniker that a wide variety
    of people use for hacktivist (and other) activities. It may (or may not) refer
    to a single person or a collective of related persons, depending on the situation.
  prefs: []
  type: TYPE_NORMAL
- en: '^([6](ch02.html#ch02fn6-marker)) The race to increase the effectiveness of
    CAPTCHA techniques continues, with newer advancements using behavioral analysis
    of users as they interact with the CAPTCHA. [reCAPTCHA](https://oreil.ly/C8BXL)
    is a free service you can use on your website. For a relatively recent overview
    of the research literature, see Chow Yang-Wei, Willy Susilo, and Pairat Thorncharoensri.
    2019\. “CAPTCHA Design and Security Issues.” In *Advances in Cyber Security: Principles,
    Techniques, and Applications*, edited by Kuan-Ching Li, Xiaofeng Chen, and Willy
    Susilo, 69–92\. Singapore: Springer.'
  prefs: []
  type: TYPE_NORMAL
- en: '^([7](ch02.html#ch02fn7-marker)) For an example of considering how security
    and privacy features are impacted by domestic partner abuse, see Matthews, Tara
    et al. 2017\. “Stories from Survivors: Privacy & Security Practices When Coping
    with Intimate Partner Abuse.” *Proceedings of the 2017 CHI Conference on Human
    Factors in Computing Systems*: 2189–2201\. [*https://ai.google/research/pubs/pub46080*](https://ai.google/research/pubs/pub46080).'
  prefs: []
  type: TYPE_NORMAL
- en: ^([8](ch02.html#ch02fn8-marker)) For example, many tools are incorporating the
    Structure Threat Information eXpression (STIX) language to standardize the documentation
    of IOCs that can be traded between systems using services like the [Trusted Automated
    eXchange of Indicator Information (TAXII) project](https://github.com/TAXIIProject).
  prefs: []
  type: TYPE_NORMAL
- en: ^([9](ch02.html#ch02fn9-marker)) Notable examples include the annual [Verizon
    Databreach Investigations Report](https://oreil.ly/x3hfo) and CrowdStrike’s annual
    [Global Threat Report](https://oreil.ly/i1GOs).
  prefs: []
  type: TYPE_NORMAL
- en: ^([10](ch02.html#ch02fn10-marker)) The [Cyber Kill Chain](https://oreil.ly/L0u6I),
    conceived (and trademarked) by Lockheed Martin, is an adaptation of traditional
    military attack structures. It defines seven stages of cyberattacks, but we’ve
    found this can be adapted; some researchers simplify it to four or five key stages,
    as we’ve done here.
  prefs: []
  type: TYPE_NORMAL
- en: '^([11](ch02.html#ch02fn11-marker)) Greenwald, Glenn. 2014\. *No Place to Hide:
    Edward Snowden, the NSA, and the U.S. Surveillance State*. New York: Metropolitan
    Books, 149.'
  prefs: []
  type: TYPE_NORMAL

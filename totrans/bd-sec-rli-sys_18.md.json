["```\nTEST(IsPrimeTest, Trivial) {\n  EXPECT_FALSE(IsPrime(0));\n  EXPECT_FALSE(IsPrime(1));\n  EXPECT_TRUE(IsPrime(2));\n  EXPECT_TRUE(IsPrime(3));\n}\n```", "```\n$ cat -n use-after-free.c\n 1  #include <stdlib.h>\n 2  int main() {\n 3    char *x = (char*)calloc(10, sizeof(char));\n 4    free(x);\n 5    return x[5];\n 6  }\n\n$ clang -fsanitize=address -O1 -fno-omit-frame-pointer -g use-after-free.c\n```", "```\n% ./a.out\n=================================================================\n==142161==ERROR: AddressSanitizer: heap-use-after-free on address 0x602000000015 \nat pc 0x00000050b550 bp 0x7ffc5a603f70 sp 0x7ffc5a603f68\nREAD of size 1 at 0x602000000015 thread T0\n    #0 0x50b54f in main use-after-free.c:5:10\n    #1 0x7f89ddd6452a in __libc_start_main \n    #2 0x41c049 in _start \n\n0x602000000015 is located 5 bytes inside of 10-byte region [0x602000000010,0x60200000001a)\nfreed by thread T0 here:\n    #0 0x4d14e8 in free \n    #1 0x50b51f in main use-after-free.c:4:3\n    #2 0x7f89ddd6452a in __libc_start_main \n\npreviously allocated by thread T0 here:\n    #0 0x4d18a8 in calloc \n    #1 0x50b514 in main use-after-free.c:3:20\n    #2 0x7f89ddd6452a in __libc_start_main \n\nSUMMARY: AddressSanitizer: heap-use-after-free use-after-free.c:5:10 in main\n[...]\n==142161==ABORTING\n```", "```\n==19==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x629000009748 at pc \n0x0000004e59c9 bp 0x7ffe3a541360 sp 0x7ffe3a540b10\nREAD of size 65535 at 0x629000009748 thread T0\n    #0 0x4e59c8 in __asan_memcpy /tmp/final/llvm.src/projects/compiler-rt/lib/asan/asan_interceptors_memintrinsics.cc:23:3\n    #1 0x522e88 in tls1_process_heartbeat /root/heartbleed/BUILD/ssl/t1_lib.c:2586:3\n    #2 0x58f94d in ssl3_read_bytes /root/heartbleed/BUILD/ssl/s3_pkt.c:1092:4\n    #3 0x59418a in ssl3_get_message /root/heartbleed/BUILD/ssl/s3_both.c:457:7\n    #4 0x55f3c7 in ssl3_get_client_hello /root/heartbleed/BUILD/ssl/s3_srvr.c:941:4\n    #5 0x55b429 in ssl3_accept /root/heartbleed/BUILD/ssl/s3_srvr.c:357:9\n    #6 0x51664d in LLVMFuzzerTestOneInput /root/FTS/openssl-1.0.1f/target.cc:34:3\n[...]\n\n0x629000009748 is located 0 bytes to the right of 17736-byte region [0x629000005200,\n0x629000009748)\nallocated by thread T0 here:\n    #0 0x4e68e3 in __interceptor_malloc /tmp/final/llvm.src/projects/compiler-rt/lib/asan/asan_malloc_linux.cc:88:3\n    #1 0x5c42cb in CRYPTO_malloc /root/heartbleed/BUILD/crypto/mem.c:308:8\n    #2 0x5956c9 in freelist_extract /root/heartbleed/BUILD/ssl/s3_both.c:708:12\n    #3 0x5956c9 in ssl3_setup_read_buffer /root/heartbleed/BUILD/ssl/s3_both.c:770\n    #4 0x595cac in ssl3_setup_buffers /root/heartbleed/BUILD/ssl/s3_both.c:827:7\n    #5 0x55bff4 in ssl3_accept /root/heartbleed/BUILD/ssl/s3_srvr.c:292:9\n    #6 0x51664d in LLVMFuzzerTestOneInput /root/FTS/openssl-1.0.1f/target.cc:34:3\n[...]\n```", "```\nint LLVMFuzzerTestOneInput(const uint8_t *data, size_t size);\n```", "```\nbool ReadJpeg(const uint8_t* data, const size_t len, JpegReadMode mode, \n              JPEGData* jpg);\n```", "```\n$ cat ~/.bazelrc\nbuild:asan --copt -fsanitize=address --copt -O1 --copt -g -c dbg\nbuild:asan --linkopt -fsanitize=address --copt -O1 --copt -g -c dbg\nbuild:asan --copt -fno-omit-frame-pointer --copt -O1 --copt -g -c dbg\n```", "```\n$ CC=clang-6.0 CXX=clang++-6.0 bazel build --config=asan :knusperli\n```", "```\ncc_binary(\n    name = \"fuzzer\",\n    srcs = [\n        \"jpeg_decoder_fuzzer.cc\",\n    ],\n    deps = [\n        \":jpeg_data_decoder\",\n        \":jpeg_data_reader\",\n    ],\n    linkopts = [\"-fsanitize=address,fuzzer\"],\n)\n```", "```\n 1  #include <cstddef>\n 2  #include <cstdint>\n 3  #include \"jpeg_data_decoder.h\"\n 4  #include \"jpeg_data_reader.h\"\n 5  \n 6  extern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t sz) {\n 7    knusperli::JPEGData jpg;\n 8    knusperli::ReadJpeg(data, sz, knusperli::JPEG_READ_HEADER, &jpg);\n 9      return 0;\n10  }\n```", "```\n$ CC=clang-6.0 CXX=clang++-6.0 bazel build --config=asan :fuzzer\n$ mkdir synthetic_corpus\n$ ASAN_SYMBOLIZER_PATH=/usr/lib/llvm-6.0/bin/llvm-symbolizer bazel-bin/fuzzer \\\n -max_total_time 300 -print_final_stats synthetic_corpus/\n```", "```\n[...]\nINFO:        0 files found in synthetic_corpus/\nINFO: -max_len is not provided; libFuzzer will not generate inputs larger than \n4096 bytes\nINFO: A corpus is not provided, starting from an empty corpus\n#2      INITED cov: 110 ft: 111 corp: 1/1b exec/s: 0 rss: 36Mb\n[...]\n#3138182       DONE   cov: 151 ft: 418 corp: 30/4340b exec/s: 10425 rss: 463Mb\n[...]\nDone 3138182 runs in 301 second(s)\nstat::number_of_executed_units: 3138182\nstat::average_exec_per_sec:     10425\nstat::new_units_added:          608\nstat::slowest_unit_time_sec:    0\nstat::peak_rss_mb:              463\n```", "```\n#2      INITED cov: 169 ft: 170 corp: 1/8632b exec/s: 0 rss: 37Mb\n```", "```\nenum JpegReadMode {\n  JPEG_READ_HEADER,   *// only basic headers*\n  JPEG_READ_TABLES,   *// headers and tables (quant, Huffman, ...)*\n  JPEG_READ_ALL,      *// everything*\n};\n```", "```\n  #include <cstddef>\n  #include <cstdint>\n  #include \"jpeg_data_decoder.h\"\n  #include \"jpeg_data_reader.h\"\n\n  const unsigned int kInspectBytes = 64;\n  const unsigned int kInspectBlocks = kInspectBytes / sizeof(unsigned int);\n\n  extern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t sz) {\n   knusperli::JPEGData jpg;\n   knusperli::JpegReadMode rm;\n   unsigned int bits = 0;\n\n   if (sz <= kInspectBytes) {  *// Bail on too-small inputs.*\n     return 0;\n   }\n\n   for (unsigned int block = 0; block < kInspectBlocks; block++) {\n     bits += \n       __builtin_popcount(reinterpret_cast<const unsigned int *>(data)[block]);\n   }\n\n   rm = static_cast<knusperli::JpegReadMode>(bits % \n                                             (knusperli::JPEG_READ_ALL + 1));\n\n   knusperli::ReadJpeg(data, sz, rm, &jpg);\n\n   return 0;\n }\n```", "```\n#851071 DONE   cov: 196 ft: 559 corp: 51/29Kb exec/s: 2827 rss: 812Mb\n[...]\nDone 851071 runs in 301 second(s)\nstat::number_of_executed_units: 851071\nstat::average_exec_per_sec:     2827\nstat::new_units_added:          1120\nstat::slowest_unit_time_sec:    0\nstat::peak_rss_mb:              812\n```", "```\nstd::string s = \"...\";\nif (s.find(\"Hello World\") == 0) { /* do something */ }\n```", "```\nstd::string s = \"...\";\nif (absl::StartsWith(s, \"Hello World\")) { /* do something */ }\n```", "```\n$ cat -n sizeof.c\n 1  #include <string.h>\n 2  const char* kMessage = \"Hello World!\";\n 3  int main() {\n 4    char buf[128];\n 5    memcpy(buf, kMessage, sizeof(kMessage));\n 6    return 0;\n 7  }\n\n$ clang-tidy sizeof.c\n[...]\nRunning without flags.\n1 warning generated.\nsizeof.c:5:32: warning: 'memcpy' call operates on objects of type 'const char' \nwhile the size is based on a different type 'const char *' \n[clang-diagnostic-sizeof-pointer-memaccess]\n  memcpy(buf, kMessage, sizeof(kMessage));\n                               ^\nsizeof.c:5:32: note: did you mean to provide an explicit length?\n  memcpy(buf, kMessage, sizeof(kMessage));\n\n$ cat -n sizeof2.c\n 1  #include <string.h>\n 2  const char kMessage[] = \"Hello World!\";\n 3  int main() {\n 4    char buf[128];\n 5    memcpy(buf, kMessage, sizeof(kMessage));\n 6    return 0;\n 7  }\n\n$ clang-tidy sizeof2.c\n[...]\nRunning without flags.\n```", "```\n$ cat -n nullptr.cc\n 1  #define NULL 0x0\n 2\n 3  int *ret_ptr() {\n 4    return 0;\n 5  }\n 6\n 7  int main() {\n 8    char *a = NULL;\n 9    char *b = 0;\n10    char c = 0;\n11    int *d = ret_ptr();\n12    return d == NULL ? 0 : 1;\n13  }\n\n$ clang-tidy nullptr.cc -checks=modernize-* --fix\n[...]\nRunning without flags.\n4 warnings generated.\nnullptr.cc:4:10: warning: use nullptr [modernize-use-nullptr]\n  return 0;\n         ^\n         nullptr\nnullptr.cc:4:10: note: FIX-IT applied suggested code changes\n  return 0;\n         ^\nnullptr.cc:8:13: warning: use nullptr [modernize-use-nullptr]\n  char *a = NULL;\n            ^\n            nullptr\nnullptr.cc:8:13: note: FIX-IT applied suggested code changes\n  char *a = NULL;\n            ^\nnullptr.cc:9:13: warning: use nullptr [modernize-use-nullptr]\n  char *b = 0;\n            ^\n            nullptr\nnullptr.cc:9:13: note: FIX-IT applied suggested code changes\n  char *b = 0;\n            ^\nnullptr.cc:12:15: warning: use nullptr [modernize-use-nullptr]\n  return d == NULL ? 0 : 1;\n              ^\n              nullptr\nnullptr.cc:12:15: note: FIX-IT applied suggested code changes\n  return d == NULL ? 0 : 1;\n              ^\nclang-tidy applied 4 of 4 suggested fixes.\n\n$ cat -n nullptr.cc\n 1  #define NULL 0x0\n 2\n 3  int *ret_ptr() {\n 4    return nullptr;\n 5  }\n 6\n 7  int main() {\n 8    char *a = nullptr;\n 9    char *b = nullptr;\n10    char c = 0;\n11    int *d = ret_ptr();\n12    return d == nullptr ? 0 : 1;\n13  }\n```", "```\n$ cat -n ShortSet.java\n 1  import java.util.Set;\n 2  import java.util.HashSet;\n 3\n 4  public class ShortSet {\n 5    public static void main (String[] args) {\n 6      Set<Short> s = new HashSet<>();\n 7      for (short i = 0; i < 100; i++) {\n 8        s.add(i);\n 9        s.remove(i - 1);\n10      }\n11      System.out.println(s.size());\n12    }\n13  }\n\n$ bazel build :hello\nERROR: example/myproject/BUILD:29:1: Java compilation in rule '//example/myproject:hello'\nShortSet.java:9: error: [CollectionIncompatibleType] Argument 'i - 1' should not be \npassed to this method;\nits type int is not compatible with its collection's type argument Short\n      s.remove(i - 1);\n              ^\n    (see http://errorprone.info/bugpattern/CollectionIncompatibleType)\n1 error\n```"]
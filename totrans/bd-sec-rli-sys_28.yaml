- en: Chapter 21\. Building a Culture of Security and Reliability
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第21章。建立安全和可靠性文化
- en: By Heather Adkins
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 作者：Heather Adkins
- en: with Peter Valchev, Felix Gröbert, Ana Oprea, Sergey Simakov, Douglas Colish,
    and Betsy Beyer
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 与Peter Valchev，Felix Gröbert，Ana Oprea，Sergey Simakov，Douglas Colish和Betsy Beyer一起
- en: Effective security and reliability flourish when organizations embrace their
    importance by building a culture around these fundamentals. Organizations that
    explicitly design, implement, and maintain the culture they seek to embody achieve
    success by making culture a team effort—the responsibility of everyone, from the
    CEO and their leadership team, to technical leaders and managers, to the people
    who design, implement, and maintain systems.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 当组织围绕这些基本原则建立文化时，有效的安全和可靠性就会蓬勃发展。明确设计、实施和维护他们希望体现的文化的组织通过使文化成为团队努力的一部分——从CEO及其领导团队，到技术领导和经理，再到设计、实施和维护系统的人员，取得成功。
- en: 'Imagine this scenario: just last week, the CEO told your entire organization
    that getting the next Big Deal was critical to the future of the company. This
    afternoon, you found evidence of an attacker on the company’s systems, and you
    know these systems will have to be taken offline. Customers are going to be angry,
    and the Big Deal may be at risk. You also know that your team may get blamed for
    not applying security patches last month, but a lot of people were on vacation
    and everyone is under tight deadlines for the Big Deal. What kinds of decisions
    does your company culture support employees making in this situation? A healthy
    organization with a strong security culture would encourage employees to report
    the incidents immediately despite the risk of delaying the Big Deal.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下这种情况：就在上周，CEO告诉整个组织，获得下一个重大交易对公司的未来至关重要。今天下午，你发现公司系统中有攻击者的证据，你知道这些系统将不得不被下线。客户将会生气，重大交易可能会受到威胁。你也知道你的团队可能会因为上个月没有应用安全补丁而受到责备，但很多人都在度假，每个人都在为重大交易的紧迫期限而努力。在这种情况下，你的公司文化支持员工做出什么样的决定？一个具有强大安全文化的健康组织会鼓励员工立即报告事故，尽管这可能会延误重大交易。
- en: Suppose that at the same time you’re investigating the malicious interloper,
    the frontend development team accidently pushes a significant change intended
    for staging to the live production system. The error takes the company’s revenue
    stream offline for over an hour, and customers are overwhelming the support helpline.
    The trust of your customer base is quickly eroding. A culture of reliability would
    encourage employees to redesign the process that allowed an accidental frontend
    push, so that teams can manage the needs of customers and the risk of missing
    or delaying the Big Deal.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 假设与此同时，你正在调查恶意闯入者，前端开发团队意外地将一个重大更改推送到了实时生产系统。这个错误导致公司的收入流下线了一个多小时，客户不断打爆了支持热线。你的客户基础的信任正在迅速侵蚀。一个可靠性文化会鼓励员工重新设计允许意外前端推送的流程，以便团队可以管理客户的需求和错过或延误重大交易的风险。
- en: In these situations, cultural norms should encourage blameless postmortems to
    uncover patterns of failure that can be fixed, thereby avoiding harmful conditions
    in the future.^([1](ch21.html#ch21fn1)) Companies with healthy cultures know that
    getting hacked once is very painful, but getting hacked twice is even worse. Similarly,
    they know that 100% is never the right reliability target; using tools like error
    budgets^([2](ch21.html#ch21fn2)) and controls around safe code pushes can keep
    users happy by striking the right balance between reliability and velocity. Finally,
    companies with a healthy security and reliability culture know that in the long
    term, customers appreciate transparency when incidents inevitably occur, and that
    hiding such incidents can erode user trust.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些情况下，文化规范应该鼓励无过失的事后分析，以发现可以修复的失败模式，从而避免将来出现有害条件。健康文化的公司知道，被黑客入侵一次是非常痛苦的，但被黑客入侵两次甚至更糟。同样，他们知道100%永远不是正确的可靠性目标；使用诸如错误预算之类的工具以及围绕安全代码推送的控制可以通过在可靠性和速度之间取得正确的平衡来让用户满意。最后，具有健康安全和可靠性文化的公司知道，从长远来看，客户在不可避免地发生事故时会欣赏透明度，并且隐藏此类事故可能会侵蚀用户的信任。
- en: This chapter describes some patterns and anti-patterns for building a culture
    of security and reliability. While we hope that this information will be helpful
    to organizations of all shapes and sizes, culture is a unique element of an organization,
    crafted in the context of its particular challenges and features. No two organizations
    will have the same culture, and not all of the advice we provide here may be applicable
    to everyone. This is a chapter meant to provide a range of ideas on the topic
    of culture, but it’s unlikely that every organization will be able to adopt all
    of the practices we discuss. The somewhat idealized view we present here won’t
    be wholly practical in real-world situations. At Google too, we don’t get culture
    right all the time, and we’re constantly seeking to improve upon the status quo.
    We hope that from among the wide range of viewpoints and options presented here,
    you’ll find some that may work in your environment.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本章描述了建立安全和可靠性文化的一些模式和反模式。虽然我们希望这些信息对各种规模和形式的组织都有所帮助，但文化是组织的独特元素，在其特定挑战和特征的背景下塑造。没有两个组织会有相同的文化，我们在这里提供的建议也不一定适用于所有人。这一章旨在提供关于文化主题的一系列想法，但在现实世界的情况下，我们提出的有些理想化观点可能并不完全实用。即使在谷歌，我们也并不总是能够做到文化正确，我们不断努力改进现状。我们希望在这里提出的广泛观点和选择中，你能找到一些适合你的环境的观点。
- en: Defining a Healthy Security and Reliability Culture
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定义健康的安全和可靠性文化
- en: Like healthy systems, a healthy team culture can be explicitly designed, implemented,
    and maintained. Throughout this book, we’ve focused on the technical and process
    components of building healthy systems. Design principles for building healthy
    cultures exist as well. In fact, culture is a core component of designing, implementing,
    and maintaining secure and reliable systems.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 与健康的系统一样，健康的团队文化可以被明确设计、实施和维护。在本书中，我们专注于构建健康系统的技术和流程组件。构建健康文化的设计原则也存在。事实上，文化是设计、实施和维护安全和可靠系统的核心组成部分。
- en: Culture of Security and Reliability by Default
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 默认安全和可靠性文化
- en: As we discuss in [Chapter 4](ch04.html#design_tradeoffs), it’s often tempting
    to delay considering security and reliability until the later stages of a project’s
    lifecycle. This postponement appears to accelerate initial velocity, but it does
    so at the expense of sustained velocity and a potentially increased cost of retrofits.
    Over time, these retrofits can increase technical debt or be applied inconsistently,
    leading to failure. To illustrate this point, imagine that when buying a car,
    you had to separately seek out a seat belt vendor, someone to review the safety
    of the car’s windshield, and an inspector to validate the airbags. Addressing
    safety and reliability concerns only *after* manufacturing a car would place a
    high burden on the consumer, who may not be in the best position to assess whether
    the solutions implemented are sufficient. It could also lead to inconsistent practices
    between any two manufactured cars.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在[第4章](ch04.html#design_tradeoffs)中讨论的，往往会有延迟考虑安全性和可靠性直到项目生命周期的后期阶段。这种推迟似乎会加速初始速度，但却以持续速度和可能增加的改装成本为代价。随着时间的推移，这些改装可能会增加技术债务或应用不一致，导致失败。为了说明这一点，想象一下购买汽车时，您必须单独寻找安全带供应商、汽车挡风玻璃安全性评估人员和验证气囊的检查员。只有在制造汽车之后才解决安全和可靠性问题会给消费者带来很大负担，消费者可能无法评估实施的解决方案是否足够。这也可能导致任何两辆制造的汽车之间的不一致做法。
- en: 'This analogy reflects the need for systems to be *secure and reliable by default*.
    When security and reliability choices are made throughout the lifecycle of a project,
    it’s easier to maintain consistency. Also, when these are integrated parts of
    the system, they can become invisible to the consumer. To return to the car analogy:
    consumers don’t need to give much thought to safety mechanisms like seat belts,
    windshields, or rear-view cameras to trust that they do the right thing.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这个类比反映了系统需要*默认安全和可靠*。当安全和可靠性选择贯穿项目的整个生命周期时，更容易保持一致性。此外，当这些成为系统的一部分时，它们对消费者来说可以变得不可见。回到汽车的类比：消费者不需要过多考虑安全机制，如安全带、挡风玻璃或后视摄像头，就可以相信它们会做正确的事情。
- en: Organizations with healthy cultures of by-default security and reliability encourage
    employees to discuss such topics early in the project lifecycle—for example, during
    the design stage—and throughout each iteration of implementation. As products
    mature, their security and reliability will continue to mature organically as
    well; this is formalized into the software development lifecycle.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有健康的默认安全和可靠性文化的组织鼓励员工在项目生命周期的早期阶段（例如，在设计阶段）和每个实施迭代期间讨论这些话题。随着产品的成熟，它们的安全性和可靠性也将自然成熟；这已被纳入软件开发生命周期中。
- en: Such a culture makes it easier for people designing, maintaining, and implementing
    systems to incorporate the themes of security and reliability automatically and
    transparently. For example, you can introduce automation for continuous builds,
    sanitizers, vulnerability discovery, and testing. Application frameworks and common
    libraries can help developers avoid common vulnerabilities like XSS and SQL injection.
    Guidance around choosing the appropriate programming languages or programming
    language features can help avoid memory corruption errors. This kind of automatic
    security aims to reduce friction (such as slow code audits) and errors (bugs not
    spotted during review), and should be relatively transparent to developers. As
    systems mature within these security and reliability constructs, ideally, employees
    will increasingly trust these implementations.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这种文化使得设计、维护和实施系统自动和透明地融入安全和可靠性主题变得更容易。例如，您可以引入连续构建、消毒剂、漏洞发现和测试的自动化。应用程序框架和通用库可以帮助开发人员避免常见的跨站脚本（XSS）和SQL注入等漏洞。关于选择适当的编程语言或编程语言特性的指导可以帮助避免内存损坏错误。这种自动安全旨在减少摩擦（例如缓慢的代码审查）和错误（审查时未发现的错误），并且对开发人员来说应该相对透明。随着系统在这些安全和可靠性结构中的成熟，理想情况下，员工将越来越信任这些实施。
- en: We provide some insight into the evolution of creating a culture of security
    and reliability by default at Google in Chapters [12](ch12.html#writing_code),
    [13](ch13.html#onethree_testing_code), and [19](ch19.html#onenine_case_study_chrome_security_team).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在第[12](ch12.html#writing_code)、[13](ch13.html#onethree_testing_code)和[19](ch19.html#onenine_case_study_chrome_security_team)章提供了一些关于在谷歌创建默认安全和可靠性文化的见解。
- en: Culture of Review
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 审查文化
- en: 'When a strong review culture is in place, everyone is encouraged to think ahead
    of time about their role in approving changes. This can bolster the ongoing security
    and reliability properties of the system by ensuring that changes take these special
    considerations into account. Peer reviews to ensure the security and reliability
    features of a system apply in a variety of change scenarios, such as these:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 当一个强大的审查文化存在时，每个人都被鼓励提前考虑他们在批准变更中的角色。这可以通过确保变更考虑到这些特殊情况来增强系统的持续安全和可靠性属性。同行审查可确保系统的安全和可靠性特性适用于各种变更场景，例如：
- en: Multi-party authorization reviews for access or changes to maintain least privilege
    (see [Chapter 5](ch05.html#design_for_least_privilege))
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多方授权审查以维护最小特权（见[第5章](ch05.html#design_for_least_privilege)）
- en: Peer reviews to ensure that code changes are appropriate and of high quality,
    including security and reliability considerations (see [Chapter 12](ch12.html#writing_code))
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 同行审查以确保代码更改是适当的和高质量的，包括安全性和可靠性考虑
- en: Peer reviews of configuration changes before they are pushed to production systems
    (see [Chapter 14](ch14.html#onefour_deploying_code))
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在将配置更改推送到生产系统之前进行同行审查
- en: Building such a culture requires a broad understanding across the organization
    about the value of the reviews and how to carry them out.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 建立这样的文化需要组织内对审查的价值以及如何进行审查有广泛的理解。
- en: Change review practices should be documented to set clear expectations about
    what will happen during the review. For example, for peer code reviews, you might
    document the organization’s engineering practices related to code review and educate
    all new developers about these expectations.^([3](ch21.html#ch21fn3)) When requiring
    peer review for multi-party authorization schemes (as described in [Chapter 5](ch05.html#design_for_least_privilege)),
    document when access will be granted and under what conditions it might be refused.
    This establishes a common cultural set of expectations across the organization,
    so that only valid approval requests will succeed. Similarly, you should set expectations
    that if an approver denies a request, the reasons are understandable based on
    the documented policy, to avoid hard feelings between people and creating an “us
    versus them” mentality.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 变更审查实践应该被记录下来，以明确期望在审查期间会发生什么。例如，对于同行代码审查，您可以记录组织与代码审查相关的工程实践，并教育所有新开发人员了解这些期望。当要求同行审查多方授权方案时，记录何时将授予访问权限以及在什么条件下可能会被拒绝。这在组织内建立了一套共同的文化期望，因此只有有效的批准请求才会成功。同样，您应该设定期望，如果批准者拒绝请求，原因是可以理解的，基于记录的政策，以避免人与人之间的矛盾和产生“我们与他们”的心态。
- en: The corollary to documentation is to educate reviewers so they understand the
    baseline expectations for being a reviewer. This education can happen early on,
    during onboarding to the organization or a project. Consider onboarding new reviewers
    through an apprenticeship scheme, in which a more experienced or calibrated reviewer
    also looks over the change.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 与文档的相关性是教育审查者，使他们了解成为审查者的基本期望。这种教育可以在组织或项目的入职期间早期进行。考虑通过见习计划来培养新的审查者，其中更有经验或校准的审查者也会审查变更。
- en: A culture of review requires everyone to participate in the review processes.
    While owners are responsible for ensuring the overall direction and standards
    of their respective areas, they too should be individually held accountable for
    the changes they initiate. No one should be able to opt out of a review simply
    because they have a senior role or don’t want to participate. The owner of a code
    tree isn’t exempt from having their code and configuration changes reviewed. In
    the same way, system owners aren’t exempted from participating in multi-party
    authorization for logins.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 审查文化要求每个人都参与审查流程。虽然所有者负责确保其各自领域的整体方向和标准，但他们也应该个别对他们发起的变更负责。没有人应该能够选择退出审查，仅仅因为他们担任高级职位或不想参与。代码树所有者不免于对其代码和配置更改进行审查。同样，系统所有者也不能豁免参与多方登录授权的审批。
- en: Ensure that reviewers have the context necessary to make decisions, and have
    the option to decline or redirect a review if they lack enough context to accurately
    assess whether the change is safe. This is especially important when reviewing
    the security and reliability properties of an access request, such as multi-party
    authorization, or changes to code snippets with safety implications. If the reviewer
    is not familiar with the kinds of pitfalls to look out for, then the review will
    not act as a sufficient control. Automated checks can assist with building this
    context. For example, in [Chapter 13](ch13.html#onethree_testing_code) we discussed
    how Google uses [Tricorder](https://oreil.ly/rdYsN) to automatically raise security
    issues for developers and reviewers in the presubmit phase of code changes.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 确保审查者具有做出决策所需的上下文，并且可以拒绝或重定向审查，如果他们缺乏足够的上下文来准确评估变更是否安全。当审查安全性和可靠性属性时，这一点尤为重要，例如多方授权的访问请求，或者具有安全影响的代码片段的更改。如果审查者不熟悉要注意的陷阱，那么审查将不起到足够的控制作用。自动化检查可以帮助建立这种上下文。例如，在第13章中，我们讨论了Google如何在代码更改的预提交阶段使用Tricorder自动提出开发人员和审查者的安全问题。
- en: Culture of Awareness
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 意识文化
- en: When members of an organization are aware they have security and reliability
    responsibilities, and know how to carry them out, they can be effective in achieving
    good outcomes. For example, an engineer may need to take extra steps to keep their
    account secure because they access sensitive systems. Someone whose job entails
    frequent communication with external parties may receive more phishing emails.
    An executive may be at higher risk when they travel to certain parts of the world.
    Organizations with healthy cultures build awareness of these kinds of conditions
    and reinforce it through educational programs.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 当组织成员意识到他们有安全和可靠性责任，并知道如何履行这些责任时，他们可以有效地实现良好的结果。例如，工程师可能需要采取额外措施来保护他们的帐户安全，因为他们访问敏感系统。那些工作需要频繁与外部方进行沟通的人可能会收到更多的钓鱼邮件。高管在前往世界某些地区时可能面临更高的风险。具有健康文化的组织会增强对这些条件的意识，并通过教育项目加以强化。
- en: Awareness and education strategies are key to building a strong security culture.
    These initiatives should strive to be lighthearted and fun so that learners are
    interested in the content. People retain different types of information at different
    rates depending on how that information is conveyed, their existing familiarity
    with the material, and even personal factors like age and background. In our experience,
    many learners have a higher retention rate with interactive methods of learning
    like hands-on labs than with passive learning methods like watching a video. When
    building awareness, optimize for the best learning experience by carefully considering
    what types of information you want people to retain and how you want them to learn.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 意识和教育策略对于建立强大的安全文化至关重要。这些倡议应该力求轻松愉快，以便学习者对内容感兴趣。人们对不同类型的信息的保留速度不同，这取决于信息的传达方式、他们对材料的现有熟悉程度，甚至个人因素，如年龄和背景。根据我们的经验，许多学习者通过动手实验等互动学习方法的保留率要高于通过观看视频等被动学习方法。在建立意识时，通过仔细考虑你希望人们保留的信息类型以及你希望他们如何学习，来优化最佳学习体验。
- en: 'Google takes several approaches to educating employees about security and reliability.
    On a broad scale, we provide mandatory annual training for all employees. We then
    reinforce these messages through specialty programs for certain roles. Here are
    some tactics we’ve found useful over years of implementing these programs at Google:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 谷歌采取了多种方法来教育员工有关安全和可靠性。在广泛范围内，我们为所有员工提供强制性的年度培训。然后，我们通过专门为某些角色设计的专业计划来强化这些信息。以下是我们多年来在谷歌实施这些计划时发现有用的一些策略：
- en: Interactive talks
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 互动讲话
- en: Talks that encourage audience participation can be a way of relaying complex
    information in a compelling way. For example, at Google, sharing top root causes
    and mitigations for significant security and reliability incidents has helped
    our employees better understand why we focus on these topics. We’ve found that
    these types of interactive discussions also encourage people to raise issues they
    find, from suspicious activity on their workstations to buggy code that could
    take systems down. This practice helps people feel like they’re part of the team
    that makes the organization more reliable and secure.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 鼓励观众参与的讲话可以是以引人入胜的方式传达复杂信息的一种方式。例如，在谷歌，分享重大安全和可靠性事件的主要根本原因和缓解措施有助于我们的员工更好地理解为什么我们关注这些主题。我们发现这些类型的互动讨论也鼓励人们提出他们发现的问题，从工作站上的可疑活动到可能使系统崩溃的错误代码。这种做法有助于让人们感到自己是使组织更加可靠和安全的团队的一部分。
- en: Games
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏
- en: Gamifying security and reliability is another way to build awareness. These
    methods tend to scale more effectively to larger organizations, which may be better
    able to give players flexibility around when they take the training and an option
    to retake it if they want. Our [XSS game](https://xss-game.appspot.com) (shown
    in [Figure 21-1](#a_security_training_game)) has been quite successful in teaching
    developers about this common web application vulnerability.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 将安全和可靠性变成游戏是建立意识的另一种方式。这些方法往往更有效地适用于较大的组织，这些组织可能更能够在何时接受培训和是否可以重新接受培训方面给予玩家灵活性。我们的[XSS游戏](https://xss-game.appspot.com)（如[图21-1](#a_security_training_game)所示）在教导开发人员有关这种常见的Web应用程序漏洞方面取得了相当大的成功。
- en: '![A security training game](assets/bsrs_2101.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![安全培训游戏](assets/bsrs_2101.png)'
- en: Figure 21-1\. A security training game
  id: totrans-35
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图21-1. 安全培训游戏
- en: Reference documentation
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 参考文档
- en: Reading documentation may have a lower retention rate for learning than methods
    like hands-on exercises, but we’ve found that it’s critically important to provide
    developers with strong documentation they can reference when needed. As we note
    in [Chapter 12](ch12.html#writing_code), reference documentation is important
    because it’s difficult to keep the numerous nuances of security and reliability
    in one’s mind simultaneously. For guidance on common security problems, Google
    maintains a set of internal security best practices that engineers can search
    for answers to problems as they arise.^([5](ch21.html#ch21fn5)) All documentation
    should have clear ownership and be kept up to date or deprecated when it’s not
    relevant anymore.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 阅读文档的保留率可能比动手练习等方法低，但我们发现为开发人员提供强大的可供参考的文档非常重要。正如我们在[第12章](ch12.html#writing_code)中所指出的，参考文档很重要，因为很难同时记住安全和可靠性的许多微妙之处。对于常见的安全问题的指导，谷歌维护了一套内部安全最佳实践，工程师可以搜索答案以解决问题。^([5](ch21.html#ch21fn5))
    所有文档都应该有明确的所有权，并在不再相关时进行更新或废弃。
- en: Awareness campaigns
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 意识宣传
- en: It can be hard to notify developers about recent security and reliability issues
    and developments. To tackle this, Google publishes weekly engineering advice in
    a one-page format ([Figure 21-2](#an_episode_of_testing_on_the_toilet) shows an
    example). These [“Testing on the Toilet”](https://oreil.ly/cO_P8) episodes are
    distributed to restrooms throughout all Google offices. While initially aimed
    at improving testing, the program also occasionally features security and reliability
    topics. A flyer posted in an unavoidable location is a good way to present tips
    and provide inspiration.^([6](ch21.html#ch21fn6))
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 通知开发人员有关最近的安全和可靠性问题和发展可能是困难的。为了解决这个问题，谷歌每周以一页的格式发布工程建议（[图21-2](#an_episode_of_testing_on_the_toilet)显示了一个例子）。这些“测试卫生间”剧集分发到谷歌所有办公室的洗手间。虽然最初旨在改善测试，但该计划偶尔也涉及安全和可靠性主题。在一个无法忽视的位置张贴传单是提供提示和提供灵感的好方法。^([6](ch21.html#ch21fn6))
- en: '![An episode of Testing on the Toilet](assets/bsrs_2102.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![一个测试卫生间的剧集](assets/bsrs_2102.png)'
- en: Figure 21-2\. An episode of Testing on the Toilet
  id: totrans-41
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图21-2. 一个测试卫生间的剧集
- en: Just-in-time notifications
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 及时通知
- en: Especially during procedural steps (like checking in code or upgrading software),
    you may want to remind people of good security and reliability practices. Showing
    just-in-time notifications to people in these situations can help them make better
    risk decisions. At Google, we have experimented with showing pop-ups and hints
    in the moment—for example, when employees are upgrading software from an untrusted
    repository or trying to upload sensitive data to unapproved cloud storage systems.
    When users see alerts in real time when it matters, they can make better decisions
    for themselves and avoid mistakes.^([7](ch21.html#ch21fn7)) On a related note,
    as we discuss in [Chapter 13](ch13.html#onethree_testing_code), presenting developers
    with presubmit security and reliability hints helps them make better choices when
    developing code.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 特别是在程序步骤中（比如检查代码或升级软件），您可能希望提醒人们遵循良好的安全和可靠性实践。在这些情况下向人们显示及时通知可以帮助他们做出更好的风险决策。在谷歌，我们已经尝试在关键时刻向员工显示弹出窗口和提示，例如当员工从不受信任的存储库升级软件或尝试将敏感数据上传到未经批准的云存储系统时。当用户在关键时刻看到警报时，他们可以为自己做出更好的决策，避免错误。另外，正如我们在第13章中讨论的那样，在开发代码时向开发人员提供预提交的安全和可靠性提示有助于他们做出更好的选择。
- en: Culture of Yes
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 肯定文化
- en: 'Over time, organizations can develop a conservative risk culture, especially
    if security breaches or reliability issues have led to revenue loss or other bad
    outcomes. In an extreme form, this mindset can lead to a *culture of no*: the
    inclination to avoid risky changes and the negative consequences they might entail.
    When perpetuated in the name of security or reliability, a culture of no can cause
    an organization to stagnate, and even fail to innovate. We’ve found that healthy
    organizations have a way to work through the challenge of saying “yes” when taking
    advantage of an opportunity requires some amount of risk—that is, to take risks
    deliberately. To embrace risk in this way, you typically need to be able to assess
    and measure it.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 随着时间的推移，组织可能会形成保守的风险文化，特别是如果安全漏洞或可靠性问题导致收入损失或其他不良结果。在极端情况下，这种心态可能导致“否定文化”：倾向于避免风险变化和可能带来的负面后果。当以安全或可靠性的名义延续时，“否定文化”可能导致组织停滞甚至无法创新。我们发现健康的组织有一种方式来应对在利用机会时需要一定风险的挑战，即有意识地冒险。要以这种方式拥抱风险，通常需要能够评估和衡量风险。
- en: As a concrete example, in [Chapter 8](ch08.html#design_for_resilience) we describe
    the approach used to secure Google App Engine, a platform that proposed running
    third-party unverified code. In this situation, Google’s security team could have
    judged the launch as too risky. After all, running arbitrary untrusted code is
    a fairly well-known security risk. You don’t know, for instance, if the third
    party managing the code might be malicious and try to escape from the platform’s
    execution environment and compromise your infrastructure. To address this risk,
    we embarked on an ambitious collaboration between the product and security teams
    to produce a layered, hardened system, which allowed us to launch a product that
    would have otherwise seemed too dangerous. This kind of collaboration made it
    easier to build additional security into the platform over time, since there was
    an established base of trust between the teams.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个具体的例子，在第8章中，我们描述了用于保护谷歌应用引擎的方法，这是一个提议运行第三方未经验证代码的平台。在这种情况下，谷歌的安全团队可能会认为这次发布过于冒险。毕竟，运行任意不受信任的代码是一个相当众所周知的安全风险。例如，您不知道管理代码的第三方是否可能是恶意的，并尝试逃离平台的执行环境并危害您的基础设施。为了解决这个风险，我们展开了一项雄心勃勃的产品和安全团队之间的合作，制定了一个分层、加固的系统，这使我们能够推出一个在其他情况下看起来太危险的产品。这种合作使得随着时间的推移更容易在平台中构建额外的安全性，因为团队之间建立了信任基础。
- en: Another approach to embracing risk is to use [error budgets](https://oreil.ly/gd3MY),
    which allow for failures up to a certain limit. Once the organization reaches
    a predetermined maximum limit, teams are expected to collaborate to reduce risk
    to normal levels. Because the error budget maintains an emphasis on security and
    reliability throughout the product’s lifecycle, innovators have the freedom to
    introduce a certain number of risky changes.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种拥抱风险的方法是使用错误预算，它允许在一定限制内发生故障。一旦组织达到预定的最大限制，团队就应该合作减少风险至正常水平。由于错误预算在产品的整个生命周期中始终强调安全和可靠性，创新者有自由引入一定数量的风险变化。
- en: Culture of Inevitably
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 不可避免的文化
- en: No system is perfect, and any system may eventually fail. At some point, your
    organization will likely experience a service outage or a security incident. Embracing
    this inevitability can help teams have the appropriate frame of mind to build
    secure and reliable systems and respond to failures.^([8](ch21.html#ch21fn8))
    At Google, we assume failure can happen at any time—not because we aren’t diligent
    about proactive measures or because we lack confidence in our systems, but because
    we know that real-world systems can never be 100% secure and reliable.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 没有系统是完美的，任何系统最终都可能失败。在某个时候，您的组织可能会经历服务中断或安全事件。接受这种不可避免性可以帮助团队有适当的心态来构建安全可靠的系统并应对失败。在谷歌，我们假设失败可能随时发生，这不是因为我们不积极采取预防措施或因为我们对系统缺乏信心，而是因为我们知道现实世界的系统永远无法百分之百安全可靠。
- en: '[Chapter 16](ch16.html#onesix_disaster_planning) discusses the need to prepare
    for the inevitable. Teams that embrace a culture of inevitability dedicate time
    to prepare for disasters so they can respond effectively. They talk openly about
    the possibilities for failure and set time aside to simulate these scenarios.
    Incident response skills are effective only when you use them regularly, so it’s
    a good idea to use exercises such as tabletops, Red Team attacks, hands-on recovery
    tests, and [disaster role playing](https://oreil.ly/hyDi_) to test and refine
    your organization’s processes. Organizations that embrace the inevitable also
    study any failures that do occur, including within their peer groups. Internally,
    they use blameless postmortems—discussed in [Chapter 18](ch18.html#oneeight_recovery_and_aftermath)
    of this book and in [Chapter 15 of the SRE book](https://landing.google.com/sre/sre-book/chapters/postmortem-culture/)—to
    reduce the fear of failure and build confidence that repeated events will be unlikely.
    They also make use of after-action reports published by other organizations, both
    within and outside of their industry. These reports provide a broader understanding
    of failure scenarios that may be relevant to the organization.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 第16章讨论了为不可避免的情况做准备的必要性。接受不可避免文化的团队会花时间准备灾难，以便能够有效地做出反应。他们公开讨论可能的失败，并留出时间来模拟这些情景。只有经常使用事故应对技能才有效，因此使用桌面练习、红队攻击、实际恢复测试和灾难角色扮演等练习来测试和完善组织的流程是个好主意。接受不可避免的组织也研究任何发生的失败，包括在同行群体内部。在内部，他们使用无过失的事后分析来减少失败的恐惧，并建立重复事件不太可能发生的信心。他们还利用其他组织发布的事后行动报告，无论是在其行业内部还是外部，这些报告提供了对可能与组织相关的失败情景的更广泛理解。
- en: Culture of Sustainability
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 可持续文化
- en: In order to sustain the reliability and security features of a system in the
    long term, your organization must ensure that efforts to improve them are made
    continuously—and dedicate sufficient resources (staff and time) to the task. Sustainability
    requires building the means to handle outages, security incidents, and other emergencies
    on an ongoing basis, using clearly defined processes.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 为了长期保持系统的可靠性和安全性特性，您的组织必须确保持续努力改进，并投入足够的资源（人员和时间）来完成这项任务。可持续性要求建立处理中断、安全事件和其他紧急情况的手段，并使用明确定义的流程。
- en: To maintain this effort, teams must be able to balance the time spent on reactive
    work versus proactive investments that will pay off over the long term. To recall
    our example of the California Department of Forestry and Fire Protection from
    [Chapter 17](ch17.html#oneseven_crisis_management), effective teams allocate the
    burden of hard work across many people’s shoulders so that no one person is saddled
    with excessive responsibility.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 为了保持这种努力，团队必须能够平衡在应对性工作和长期投资之间所花费的时间。回想一下我们在第17章中提到的加利福尼亚州林业和消防局的例子，有效的团队将艰苦的工作分摊到许多人的肩上，以免任何一个人承担过多的责任。
- en: Organizations with a *culture of sustainability* measure the workloads necessary
    to handle operational work (for example, incident response^([10](ch21.html#ch21fn10)))
    as well as the investments required to make improvements over time.^([11](ch21.html#ch21fn11))
    They consider stress, burnout, and morale in their planning, adding sufficient
    resources to sustain long-term efforts or deferring work where necessary through
    prioritization. They avoid the need for heroics by setting up repeatable and predictable
    processes for handling emergencies and rotating the staff who handle emergencies
    regularly. They also proactively handle morale issues by surfacing individuals’
    concerns and continuously motivating people.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有“可持续文化”的组织衡量处理运营工作（例如事故应对）所需的工作量，以及随着时间推移所需的改进投资。他们在规划中考虑压力、倦怠和士气，通过优先级确定足够的资源来支持长期努力或推迟必要的工作。他们通过建立可重复和可预测的应对紧急情况的流程，并定期轮换处理紧急情况的员工，避免了英雄主义的需要。他们还通过提出个人关注并持续激励人们来主动处理士气问题。
- en: Having a culture of sustainably also means knowing that sometimes exceptional
    circumstances can cause temporary deviations from expected workloads, and having
    good processes to handle those deviations. For example, if multiple business-critical
    systems haven’t met their SLOs for a long period of time, or a serious security
    breach results in an extraordinary response effort, you may need an “all hands
    on deck” effort to get things back on track. During this time, teams may be entirely
    devoted to operational work and improving security or reliability. While you might
    have to defer all other organizational work, you may also have to deviate from
    best practices.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有可持续文化的组织也意味着知道有时特殊情况可能会导致暂时偏离预期工作量，并具有处理这些偏差的良好流程。例如，如果多个业务关键系统长时间未达到其SLO，或者严重的安全漏洞导致了非同寻常的应对工作，您可能需要“全员上阵”来使事情重新回到正轨。在这段时间内，团队可能完全致力于运营工作和提高安全性或可靠性。虽然您可能不得不推迟所有其他组织工作，但您也可能不得不偏离最佳实践。
- en: 'In healthy organizations, such extraordinary disruptions of normal business
    operations should be rare. When navigating these situations, the following considerations
    can help maintain a culture of sustainability once the situation is resolved:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在健康的组织中，这种正常业务运营的特殊干扰应该是罕见的。在处理这些情况时，以下考虑因素可以帮助在情况解决后保持可持续文化：
- en: When operating outside of normal operations, be sure to clarify that the situation
    is temporary. For example, if you require all developers to manually supervise
    the changes they push to production (instead of only using automated systems),
    this might cause a lot of toil and unhappiness in the long term. Make clear that
    you expect the situation to return to normal soon, and give an idea of when that
    will happen.
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在正常运营之外操作时，一定要澄清情况是暂时的。例如，如果你要求所有开发人员手动监督他们推送到生产环境的更改（而不仅仅使用自动化系统），这可能会在长期内造成很多辛苦和不快乐。明确表示你期望情况很快恢复正常，并给出何时会发生的想法。
- en: Have a dedicated group on standby that has an understanding of the risk landscape
    and the authority to make decisions quickly. For example, this group might grant
    exceptions to standard security and reliability procedures. This will reduce friction
    in execution, while giving the organization some assurance that safety mechanisms
    are still in place. Have a way to flag the times you had to bypass or overturn
    best practices, and be sure to address those one-offs later.
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有一个专门的待命小组，他们了解风险情况并有权迅速做出决策。例如，这个小组可能会对标准的安全和可靠性程序进行例外授权。这将减少执行中的摩擦，同时给组织一些保证，即安全机制仍然存在。有一种方法来标记你不得不绕过或推翻最佳实践的时候，并确保以后解决这些一次性事件。
- en: When the event is complete, be sure that your postmortem reviews the reward
    system that may have led to the emergency. Sometimes, cultural issues like prioritizing
    feature launch over reliability or security features can lead to a build-up of
    technical debt. Addressing such issues proactively going forward will help the
    organization return to a cadence of sustainability.
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 活动结束后，一定要确保你的事后审查了可能导致紧急情况的奖励制度。有时，像优先考虑功能发布而不是可靠性或安全功能的文化问题可能会导致技术债务的积累。积极解决这些问题将有助于组织恢复到可持续的节奏。
- en: Changing Culture Through Good Practice
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过良好实践改变文化
- en: 'Affecting organizational culture can be difficult, especially if the team or
    project you’re working on is well established. It’s not uncommon for an organization
    to want to make security and reliability improvements, but find that cultural
    obstacles stand in the way. Counterproductive cultures exist for many reasons:
    leadership approaches, starvation of resources, and more.'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 影响组织文化可能很困难，特别是如果你正在处理的团队或项目已经很成熟。组织通常希望进行安全和可靠性改进，但发现文化障碍阻碍了前进。文化的反生产存在很多原因：领导方法、资源匮乏等。
- en: A common element of resistance to change—the kind of change necessary for security
    and reliability improvements—is fear. Change can conjure images of chaos, greater
    friction, loss of productivity and control, and increased risk. In particular,
    the topic of friction frequently surfaces in relation to new reliability and security
    controls. New access checks, processes, and procedures can be interpreted as interfering
    with developer or operational productivity. When organizations face tight deadlines
    and high expectations to deliver, either self-imposed or driven by management,
    fear of these new controls can heighten concerns. However, in our opinion, the
    belief that security and reliability improvements have to create friction is a
    myth. If you implement change with certain cultural considerations in mind, we
    believe these changes can actually improve everyone’s experience.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 对于改变的抵制的一个常见因素——安全和可靠性改进所必需的改变——是恐惧。改变可能会引发混乱、更大的摩擦、生产力和控制的丧失，以及风险的增加。特别是，摩擦的话题经常与新的可靠性和安全控制相关联。新的访问检查、流程和程序可能被解释为干扰开发人员或运营生产力。当组织面临紧迫的截止日期和高期望交付，无论是自我设定的还是由管理层推动的，对这些新控制的恐惧可能加剧担忧。然而，我们认为，安全和可靠性改进必须造成摩擦的信念是一个谬论。如果你在实施改变时考虑了某些文化因素，我们相信这些改变实际上可以改善每个人的体验。
- en: This section discusses some technical strategies to introduce change that may
    be useful even in the most difficult cultures. You may not be the CEO or a leader
    in your organization, but every developer, SRE, and security professional is an
    instrument of change in their own sphere of influence. By making conscious choices
    about how you design, implement, and maintain systems, it is possible to have
    a positive effect on your organization’s culture; by choosing certain strategies,
    you may find that over time you can turn the tide by building trust and goodwill.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 本节讨论了一些技术策略，介绍了一些即使在最困难的文化中也可能有用的改变。你可能不是你组织中的CEO或领导，但每个开发人员、SRE和安全专业人员都是他们自己影响领域中的变革工具。通过有意识地选择你设计、实施和维护系统的方式，有可能对你组织的文化产生积极影响；通过选择某些策略，你可能会发现随着时间的推移，你可以通过建立信任和善意来扭转局势。
- en: The advice we give in this section is based on that goal—but culture is something
    developed over a long period of time, and it’s highly dependent on the people
    and situations involved. When trying out some of the strategies outlined here
    in your organization, you may find they meet with only limited success, and some
    strategies may not work at all. Some cultures are static and resistant to change.
    Yet having a healthy culture that values security and reliability can be just
    as important as how you design, implement, and maintain your systems, so the fact
    that your efforts might not always work shouldn’t stop you from trying.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在本节中给出的建议是基于这个目标的——但文化是经过长时间发展的，并且高度依赖于涉及的人和情况。当你在你的组织中尝试这里概述的一些策略时，你可能会发现它们只能取得有限的成功，有些策略可能根本行不通。有些文化是静态的，抵制改变。然而，拥有一个重视安全和可靠性的健康文化和你设计、实施和维护系统一样重要，所以你的努力可能并不总是奏效不应该阻止你尝试。
- en: Align Project Goals and Participant Incentives
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 对齐项目目标和参与者激励
- en: It takes hard work to build trust, but it’s quite easy to lose it. In order
    for people who design, implement and maintain systems to collaborate across multiple
    roles, they need to share a common reward system.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 建立信任需要艰苦的工作，但失去信任却很容易。为了让设计、实施和维护系统的人能够跨越多个角色进行合作，他们需要共享一个共同的奖励体系。
- en: On a technical level, the reliability and safety of a project can be evaluated
    regularly through observable metrics like [SLOs](https://oreil.ly/m9rU1) and threat
    modeling (for examples, see Chapters [2](ch02.html#understanding_adversaries)
    and [14](ch14.html#onefour_deploying_code)). On a process and people level, you
    should make sure that career advancement opportunities reward security and reliability.
    Ideally, individuals should be evaluated according to high-level documented expectations.
    These shouldn’t be just a set of checkboxes to tick—they should highlight themes
    and goals that individuals should aspire to meet. For example, the entry-level
    Google software engineering job ladder specifies that engineers should master
    at least one common skill outside of core coding, like adding monitoring to their
    services or writing security tests.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在技术层面上，项目的可靠性和安全性可以通过可观察的指标（如[SLOs](https://oreil.ly/m9rU1)和威胁建模）定期评估（例如，参见[第2章](ch02.html#understanding_adversaries)和[第14章](ch14.html#onefour_deploying_code)）。在流程和人员层面上，你应该确保职业晋升机会奖励安全性和可靠性。理想情况下，个人应该根据高层次的文件化期望进行评估。这些不应该只是一组要勾选的复选框，它们应该突出个人应该努力达到的主题和目标。例如，谷歌的入门级软件工程师职位阶梯规定工程师应该掌握至少一项核心编码之外的常见技能，比如为他们的服务添加监控或编写安全测试。
- en: Aligning project goals with your organization’s strategy without aligning participant
    incentives might result in an unfriendly culture, whereby the people focused on
    improving the security and reliability of your products are not the ones who tend
    to get promoted. Since financial rewards regularly correlate to seniority, it’s
    only fair to keep the employees who contribute to happy users happy by aligning
    project incentives to the reward system.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 将项目目标与组织战略保持一致，而不调整参与者的激励可能会导致一种不友好的文化，即致力于改善产品安全性和可靠性的人并不是那些往往会得到晋升的人。由于财务奖励通常与资历相关，通过将项目激励与奖励制度保持一致，可以让为用户带来快乐的员工保持快乐。
- en: Reduce Fear with Risk-Reduction Mechanisms
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过风险减少机制减少恐惧
- en: 'Have you ever found yourself wanting to make a significant change, such as
    a rollout of new software or a new control, only to find that the organization
    pushes back because of the perceived risk? You can inspire confidence in your
    organization by making good deployment choices. We discuss many of these concepts
    [Chapter 7](ch07.html#design_for_a_changing_landscape), but it’s worth specifically
    noting the impact of culture here. Here are some strategies you might want to
    try:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 你是否曾经发现自己想要进行重大改变，比如推出新软件或新控制，却发现组织因为感知到的风险而反对？通过做出良好的部署选择，你可以激发组织的信心。我们在[第7章](ch07.html#design_for_a_changing_landscape)中讨论了许多这些概念，但在这里特别值得注意的是文化的影响。以下是一些你可能想尝试的策略：
- en: Canaries and staged rollouts
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 金丝雀和分阶段的推出
- en: You can reduce fear by slowly rolling out substantial changes through small
    canary groups of users or systems. That way, the blast radius of an ill-fated
    change is small if something goes wrong. Also consider going one step further,
    and implementing all changes via staged rollouts and canaries (see [Chapter 16
    in the SRE workbook](https://landing.google.com/sre/workbook/chapters/canarying-releases/)).
    In practice, this approach has numerous benefits. For example, in [Chapter 19](ch19.html#onenine_case_study_chrome_security_team)
    we discuss how the staged release cycle for Chrome balances the competing needs
    of speedy updates and reliability. Over time, Chrome’s staged releases have fostered
    its reputation as a secure browser. We’ve also found that by making staged rollouts
    part of a routine change process, over time, an organization comes to expect that
    care and diligence are applied to all changes—which builds confidence in change
    and reduces fear.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 通过小金丝雀用户组或系统缓慢推出重大改变，可以减少恐惧。这样，如果出了什么问题，一个不幸的改变的影响范围就会很小。还要考虑更进一步，通过分阶段的推出和金丝雀来实施所有改变（参见[SRE工作手册中的第16章](https://landing.google.com/sre/workbook/chapters/canarying-releases/)）。在实践中，这种方法有许多好处。例如，在[第19章](ch19.html#onenine_case_study_chrome_security_team)中，我们讨论了Chrome的分阶段发布周期如何平衡快速更新和可靠性的竞争需求。随着时间的推移，Chrome的分阶段发布已经培养了它作为一个安全浏览器的声誉。我们还发现，通过将分阶段的推出作为例行改变流程的一部分，随着时间的推移，组织会期望对所有改变都应用谨慎和细心，这增强了对改变的信心并减少了恐惧。
- en: Dogfood
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 自用
- en: By showing users that you’re not afraid of your own changes, you can instill
    confidence in the stability and productivity impact of any particular change.
    *Dogfooding* (or “eating your own dogfood”) involves adopting a change before
    that change affects others. This is especially important if you’re affecting the
    systems and processes that impact people’s daily lives. For example, if you’re
    rolling out a new least privilege mechanism such as multi-factor authorization,
    adopt the stricter control within your own team before you require all employees
    to implement the change. At Google, before we roll out new endpoint security software,
    we test it on some of our most discerning users (the security team) first.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 通过向用户展示你不害怕自己的改变，你可以增强对任何特定改变的稳定性和生产力影响的信心。*自用*（或“吃自己的狗粮”）意味着在改变影响他人之前先采用改变。如果你正在影响影响人们日常生活的系统和流程，这一点尤为重要。例如，如果你正在推出新的最低特权机制，比如多因素授权，先在自己的团队内采用更严格的控制，然后再要求所有员工实施这一改变。在谷歌，我们在推出新的端点安全软件之前，首先在一些最具洞察力的用户（安全团队）上进行测试。
- en: Trusted testers
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 受信任的测试者
- en: Inviting people in your organization to help test a change early in a project’s
    lifecycle can reduce fear of future change. This approach lets stakeholders see
    a change before it becomes final, which allows them to raise concerns early. These
    newly open lines of communication give them a direct channel to deliver feedback
    if something goes wrong. Showing a willingness to gather feedback during testing
    phases can reduce silos between parts of your organization. It’s important to
    make clear to the testers that you trust the feedback they’re giving, and to make
    use of their feedback so they know they’re heard. You can’t always address every
    piece of feedback—not all of it will be valid or actionable—but by explaining
    your decisions to your tester population, you can build a strong coalition of
    trust.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在项目生命周期的早期邀请组织内的人帮助测试变更可以减少对未来变更的恐惧。这种方法让利益相关者在最终确定之前看到变更，这使他们能够及早提出关注。这些新开放的沟通渠道让他们有直接途径在出现问题时提供反馈。在测试阶段表现出收集反馈的意愿可以减少组织内部的隔阂。重要的是要向测试人员明确表示您信任他们提供的反馈，并利用他们的反馈，以便他们知道自己被听到。您并不能总是解决每一条反馈意见，因为并非所有反馈都是有效的或可操作的，但通过向测试人员解释您的决定，您可以建立一个强大的信任联盟。
- en: Opt in before mandatory
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 强制前选择
- en: A corollary to the dogfood and trusted tester strategies is making a new control
    optional before it becomes mandatory. This gives teams the opportunity to adopt
    changes on their own timeline. Complicated changes, such as new authorization
    controls or testing frameworks, have a cost; it can take time for an organization
    to fully adopt such changes, and you often need to balance these changes against
    other priorities. If teams know they have time to implement changes at their own
    pace, they may be less resistant to doing so.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 与狗粮和信任的测试者策略相辅相成的是，在变得强制性之前将新控制变为可选。这使团队有机会按照自己的时间表采纳变化。复杂的变化，如新的授权控制或测试框架，是有成本的；组织需要时间来完全采纳这些变化，而您通常需要权衡这些变化与其他优先事项。如果团队知道他们有时间以自己的步调实施变化，他们可能会对这样做的抵抗性较小。
- en: Progressive stringency
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 渐进严格性
- en: 'If you have to put into effect a strict new policy for reliability or security,
    consider whether you can ratchet up the stringency over time: perhaps you can
    first introduce a lower-level control that has less impact before teams fully
    adopt a more stringent one with a heavier burden. For example, suppose you want
    to add least privilege controls that require employees to justify their access
    to certain data. Users who don’t justify the access appropriately will be locked
    out of the system. In this scenario, you could start by having the developer team
    integrate the justification framework (such as a library) into the system, but
    keep end user justifications optional. Once you deem the system to be performant
    and secure, you could require justifications to access data without locking out
    users who fail to meet the established criteria. Instead, the system could provide
    detailed error messages when a user enters an inaccurate justification, providing
    a feedback loop to train users and improve use of the system. After a period of
    time, when metrics show a high success rate for proper justifications, you can
    make the stringent control that locks users out of the system mandatory.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您必须实施严格的可靠性或安全性新政策，请考虑是否可以随着时间的推移加强严格性：也许您可以首先引入一个影响较小的较低级别控制，然后团队完全采用更严格的控制，负担更重。例如，假设您想添加最低特权控制，要求员工证明其对某些数据的访问。未能适当证明访问权限的用户将被系统锁定。在这种情况下，您可以首先让开发团队将证明框架（如库）集成到系统中，但保持最终用户的证明是可选的。一旦您认为系统性能良好且安全，您可以要求证明访问数据而不锁定未能满足既定标准的用户。相反，当用户输入不准确的证明时，系统可以提供详细的错误消息，提供反馈循环以培训用户并改进系统的使用。一段时间后，当指标显示适当证明的成功率很高时，您可以使锁定用户系统的严格控制成为强制性的。
- en: Make Safety Nets the Norm
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使安全网成为常态
- en: Reliability and security improvements often require you to remove long-relied-upon
    resources that don’t measure up to the new safety standards you’re introducing.
    For example, imagine you want to change how people in your organization use Unix
    root privileges (or similar highly privileged access), perhaps by implementing
    new proxy systems (see [Chapter 3](ch03.html#case_study_safe_proxies)). Fear of
    substantial changes like these is natural. After all, what if a team suddenly
    loses access to a resource that’s mission-critical? What if the change results
    in downtime?
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 可靠性和安全性改进通常需要您删除长期依赖的资源，这些资源无法满足您引入的新安全标准。例如，想象一下，您想要改变组织中人员如何使用Unix根权限（或类似的高度特权访问），也许通过实施新的代理系统（参见[第3章](ch03.html#case_study_safe_proxies)）。对于这样的重大变化的恐惧是自然的。毕竟，如果一个团队突然失去了关键任务的资源访问权限会怎么样？如果变更导致停机时间呢？
- en: You can reduce fear of change by providing safety nets like breakglass procedures
    (discussed in [Chapter 5](ch05.html#design_for_least_privilege)) that allow users
    to bypass a new stringent control. These emergency procedures should be used sparingly,
    however, and subjected to a high level of audit; they should be viewed as a last
    resort, not a convenient alternative. When implemented properly, breakglass procedures
    can provide nervous teams with the assurance that they can adopt a change or react
    to an incident without completely losing control or productivity. For example,
    suppose you have a staged rollout procedure that requires a long canary process,
    which you’ve implemented as a safety mechanism to prevent reliability issues.
    You can provide a breakglass bypass mechanism to make the push happen immediately
    if absolutely necessary. We discuss these types of situations in [Chapter 14](ch14.html#onefour_deploying_code).
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过提供像紧急程序这样的安全网来减少对变革的恐惧（在[第5章](ch05.html#design_for_least_privilege)中讨论），这些程序允许用户绕过新的严格控制。然而，应该谨慎使用这些紧急程序，并且要经受高水平的审计；它们应该被视为最后的手段，而不是方便的替代方案。当正确实施时，紧急程序可以让紧张的团队确信他们可以接受变化或对事件做出反应，而不会完全失去控制或生产力。例如，假设您有一个分阶段的推出程序，需要一个长时间的金丝雀过程，您已经将其实施为一个安全机制，以防止可靠性问题。如果绝对必要，您可以提供一个紧急程序绕过机制，使推送立即发生。我们在[第14章](ch14.html#onefour_deploying_code)中讨论了这些类型的情况。
- en: Increase Productivity and Usability
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 提高生产力和可用性
- en: 'A fear of increased friction can make organizational changes with regard to
    security and reliability difficult. If people view new controls that slow down
    development and innovation as counterproductive, they may assume that their adoption
    will have a negative impact on the organization. For this reason, it’s often important
    to think carefully about the adoption strategy for new initiatives: consider the
    amount of time necessary to incorporate the change, whether the change might slow
    down productivity, and whether the benefit outweighs the cost of making the change.
    We’ve found that the following techniques help decrease friction:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 对于与安全和可靠性相关的组织变化，对增加的摩擦的恐惧可能会使其变得困难。如果人们认为减缓开发和创新的新控制是适得其反的，他们可能会认为其采用会对组织产生负面影响。因此，对于新倡议的采用策略通常很重要：考虑整合变化所需的时间，变化是否可能减缓生产力，以及收益是否超过了变化的成本。我们发现以下技术有助于减少摩擦：
- en: Build transparent functionality
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 构建透明功能
- en: In Chapters [6](ch06.html#design_for_understandability) and [12](ch12.html#writing_code),
    we discuss relieving developers of the responsibility for security and reliability
    by using secure-by-construction APIs, frameworks, and libraries. Making the secure
    choice the default choice helps developers do the right thing without placing
    a heavy burden on them. This approach reduces friction over time because developers
    not only see the benefits of having secure and reliable systems, but also recognize
    your intent to keep these initiatives simple and easy. We’ve found this can build
    trust between teams over time.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第6章](ch06.html#design_for_understandability)和[第12章](ch12.html#writing_code)中，我们讨论了通过使用安全构造API、框架和库来解除开发人员对安全和可靠性的责任。使安全选择成为默认选择有助于开发人员在不给他们带来沉重负担的情况下做出正确的选择。这种方法随着时间的推移减少了摩擦，因为开发人员不仅看到了拥有安全可靠系统的好处，而且也认识到您保持这些倡议简单易行的意图。我们发现这可以随着时间的推移建立团队之间的信任。
- en: Focus on usability
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 专注于可用性
- en: A focus on usability positively affects a culture of security and reliability.^([12](ch21.html#ch21fn12))
    If a new control is easier to use than what it’s replacing, it can create positive
    incentives for change.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 专注于可用性对安全和可靠性文化产生积极影响。^([12](ch21.html#ch21fn12)) 如果新的控制比替代的控制更容易使用，它可以为变革创造积极的激励。
- en: In [Chapter 7](ch07.html#design_for_a_changing_landscape), we talk about how
    we focused on usability when rolling out security keys for two-factor authentication.
    Users found that touching a security key to authenticate was much easier than
    typing in one-time passwords generated by hardware tokens.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第7章](ch07.html#design_for_a_changing_landscape)中，我们谈到在推出双因素身份验证的安全密钥时，我们专注于可用性。用户发现触摸安全密钥进行身份验证比使用硬件令牌生成的一次性密码要容易得多。
- en: As an added bonus, the enhanced security of these keys allowed us to require
    less frequent password changes.^([13](ch21.html#ch21fn13)) We performed a risk
    analysis on this topic, considering tradeoffs in usability, security, and auditability.
    We found that security keys negate the efficacy of password theft by a remote
    attacker. When combined with monitoring to detect suspected compromise of passwords,^([14](ch21.html#ch21fn14))
    and enforcement of password changes in such an event, we were able to balance
    security and usability.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 作为额外的奖励，这些密钥的增强安全性使我们能够要求更少的密码更改。^([13](ch21.html#ch21fn13)) 我们对这个问题进行了风险分析，考虑了可用性、安全性和可审计性的权衡。我们发现，安全密钥消除了远程攻击者盗取密码的有效性。当与监控结合使用以检测密码被怀疑被篡改的情况，并在这种情况下强制更改密码时，我们能够平衡安全性和可用性。
- en: There are other opportunities where security and reliability features can deprecate
    old or unwanted processes and increase usability. Taking advantage of these opportunities
    can build user confidence and trust in security and reliability solutions.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 有其他机会可以通过安全性和可靠性功能淘汰旧的或不需要的流程，并提高可用性。利用这些机会可以建立用户对安全性和可靠性解决方案的信心和信任。
- en: Self-registration and self-resolution
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 自注册和自解决
- en: Self-registration and self-resolution portals empower developers and end users
    to address security and reliability issues directly, without gating on a central
    team that may be overloaded or slow. For example, Google uses deny and allow lists
    to control which applications can run on the systems that employees use. This
    technology is effective in preventing execution of malicious software (such as
    viruses).
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 自注册和自解决门户使开发人员和最终用户能够直接解决安全性和可靠性问题，而不需要依赖可能过载或缓慢的中央团队。例如，谷歌使用拒绝和允许列表来控制员工使用的系统上可以运行哪些应用程序。这项技术在防止恶意软件（如病毒）执行方面非常有效。
- en: The downside is that if an employee wants to run software not already on the
    allow list, they need to seek approval. To reduce friction for exception requests,
    we developed a self-help portal called [Upvote](https://github.com/google/upvote)
    that enables users to get approval for acceptable software quickly. In some cases,
    we can automatically determine a piece of software to be safe and approve it.
    If we can’t automatically approve the software, we give the user an option to
    have it approved by a set number of peers.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 缺点是，如果员工想要运行不在允许列表上的软件，他们需要寻求批准。为了减少例外请求的摩擦，我们开发了一个名为[Upvote](https://github.com/google/upvote)的自助门户，使用户能够快速获得可接受软件的批准。在某些情况下，我们可以自动确定某个软件是安全的并批准它。如果我们无法自动批准软件，我们会给用户一个选项，让一定数量的同行批准它。
- en: We’ve found social voting to be a satisfactory control. It’s not perfect—sometimes
    employees approve software that’s not necessarily business-related, such as video
    games—but this approach has had a high rate of effectiveness in preventing malware
    from being executed on our systems. And since it does not gate on a central team,
    friction for the control is kept very low.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 我们发现社交投票是一种令人满意的控制方式。它并不完美——有时员工会批准一些并非业务相关的软件，比如视频游戏——但这种方法在防止恶意软件在我们的系统上执行方面效果很好。而且由于它不依赖于一个中央团队，控制的摩擦非常小。
- en: Overcommunicate and Be Transparent
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 过度沟通和透明
- en: 'When advocating for change, the means of communication can influence outcomes.
    As we discuss in Chapters [7](ch07.html#design_for_a_changing_landscape) and [19](ch19.html#onenine_case_study_chrome_security_team),
    good communication is key to building buy-in and confidence in success. Giving
    people information and clear insight into how change is happening can reduce fear
    and build trust. We’ve found the following strategies to be successful:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在倡导变革时，沟通方式可以影响结果。正如我们在第[7](ch07.html#design_for_a_changing_landscape)章和第[19](ch19.html#onenine_case_study_chrome_security_team)章中所讨论的，良好的沟通是建立支持和成功信心的关键。向人们提供信息和清晰的洞察力，以了解变化是如何发生的，可以减少恐惧并建立信任。我们发现以下策略是成功的：
- en: Document decisions
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 记录决策
- en: When making a change, clearly document why it’s happening, what success looks
    like, how the change will be rolled back if operating conditions deteriorate,
    and who to talk to in case of concerns. Make sure that you clearly communicate
    why you’re making the change, especially if it directly affects employees. For
    example, every Production Excellence SLO at Google requires a documented rationale.
    Since the SRE organization is measured against these SLOs, it’s important that
    SREs understand the meaning behind them.^([15](ch21.html#ch21fn15))
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行变化时，清楚地记录为什么会发生变化，成功的标志是什么，如果运营条件恶化，如何回滚变化，以及在出现问题时应该与谁联系。确保清楚地传达为什么要进行变化，特别是如果它直接影响员工。例如，谷歌的每个生产卓越SLO都需要有明确的理由。由于SRE组织是根据这些SLO进行衡量的，SRE们理解其背后含义是很重要的。^([15](ch21.html#ch21fn15))
- en: Create feedback channels
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 创建反馈渠道
- en: Make communication bidirectional by creating feedback channels through which
    people can raise concerns. This could be a feedback form, a link to your bug tracking
    system, or even a simple email address. As we mention in the discussion of trusted
    testers (see [“Reduce Fear with Risk-Reduction Mechanisms”](#reduce_fear_with_risk_reduction_mechani)),
    giving partners and stakeholders a more direct involvement in a change can lessen
    fear.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 通过创建反馈渠道，使沟通双向化，人们可以提出关注。这可以是一个反馈表单，一个链接到您的bug跟踪系统，甚至是一个简单的电子邮件地址。正如我们在受信任的测试人员讨论中提到的（见[“通过风险减少机制减少恐惧”](#reduce_fear_with_risk_reduction_mechani)），让合作伙伴和利益相关者更直接地参与变化可以减少恐惧。
- en: Use dashboards
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 使用仪表板
- en: If you’re making a complex change across multiple teams or parts of the infrastructure,
    use dashboards to show clear expectations of what you need people to do and provide
    feedback on how well they’re doing. Dashboards are also helpful in showing the
    big picture of a rollout and keeping the organization in sync on progress.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在跨多个团队或基础设施的不同部分进行复杂的变化，使用仪表板清晰地展示你需要人们做什么，并提供他们的表现反馈。仪表板还有助于展示推出的整体情况，并使组织在进展上保持同步。
- en: Write frequent updates
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 撰写频繁的更新
- en: If a change takes a long time (some changes at Google have taken several years),
    assign someone to write frequent (for example, monthly) stakeholder updates outlining
    progress. This will build confidence—especially in leadership—that the project
    is progressing and that someone has a watchful eye on the health of the program.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一个变化需要很长时间（谷歌的一些变化已经持续了几年），那么就指定某人定期（例如每月）撰写利益相关者更新，概述进展情况。这将建立信心——特别是在领导层——表明项目正在进展，并且有人在关注项目的健康状况。
- en: Build Empathy
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 建立共鸣
- en: You can’t understand someone until you’ve walked a mile in their shoes.
  id: totrans-108
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在了解别人之前，你不能理解他们的感受。
- en: '>'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: —Unknown
  id: totrans-110
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: ——未知
- en: People begin to understand the challenges others face when they understand the
    ins and out of performing their role. Cross-team empathy is especially important
    when it comes to reliability and security properties of the system, since (as
    discussed in [Chapter 20](ch20.html#twozero_understanding_roles_and_respons))
    these responsibilities should be shared across the organization. Building empathy
    and understanding can help reduce fear in the face of necessary changes.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 当人们了解如何执行自己的角色时，他们开始理解其他人面临的挑战。跨团队的同理心在系统的可靠性和安全性方面尤为重要，因为（如[第20章](ch20.html#twozero_understanding_roles_and_respons)中所讨论的）这些责任应该在整个组织中共享。建立同理心和理解可以帮助减少对必要变化的恐惧。
- en: In [Chapter 19](ch19.html#onenine_case_study_chrome_security_team), we outline
    a few techniques for building cross-team empathy—in particular, how teams can
    share responsibilities for writing, debugging, and fixing code. Similarly, the
    Chrome security team runs fixits not only to improve the security of the product,
    but also as a cross-organization team-building activity. Ideally, teams consistently
    share responsibilities from square one.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第19章](ch19.html#onenine_case_study_chrome_security_team)中，我们概述了一些建立跨团队同理心的技巧——特别是团队如何共享编写、调试和修复代码的责任。同样，Chrome安全团队不仅进行修复来提高产品的安全性，还作为一个跨组织的团队建设活动。理想情况下，团队应该从一开始就始终共享责任。
- en: Job shadowing or job swapping is another approach to building empathy that doesn’t
    require permanent organizational top-down changes. These engagements can range
    from a few hours (which tend to be less formal exercises) to several months (which
    may require management buy-in). By inviting others to experience your team’s work,
    you can signal that you’re willing to tear down organizational silos and build
    common understanding.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 工作跟踪或工作交换是另一种建立同理心的方法，不需要永久性的组织自上而下的变化。这些参与可以从几个小时（往往是较少正式的练习）到几个月（可能需要管理层的支持）不等。通过邀请他人体验你团队的工作，你可以表明你愿意打破组织的壁垒，建立共同的理解。
- en: Google’s SRE Security Exchange Program allows an SRE to shadow another SRE or
    security engineer for a week. At the end of the exchange, the SRE writes a report
    with improvement recommendations for both their home team and the host team. When
    conducted in the same office, this program requires a very low investment but
    provides many benefits in terms of knowledge sharing across the organization.
    Google’s [Mission Control program](https://oreil.ly/MSlrf) encourages people to
    join the SRE organization for six months, during which time they learn how to
    think like an SRE and respond to emergencies. In doing so, they directly see the
    impact of software changes initiated in partner organizations. A parallel program
    known as Hacker Camp encourages people to join the security team for six months,
    where they can work on security reviews and response efforts.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 谷歌的SRE安全交流计划允许SRE在一周内跟随另一个SRE或安全工程师。交流结束时，SRE会为他们的团队和接待团队撰写一份改进建议报告。当在同一办公室进行时，这个计划需要非常低的投资，但在整个组织中提供了许多知识共享方面的好处。谷歌的[任务控制计划](https://oreil.ly/MSlrf)鼓励人们加入SRE组织六个月，期间他们学习如何像SRE一样思考和应对紧急情况。通过这样做，他们直接看到了合作组织发起的软件变更的影响。一个名为黑客营的并行计划鼓励人们加入安全团队六个月，他们可以在安全审查和应对工作中工作。
- en: Programs like these may begin as small experiments with one or two engineers,
    and grow over time if successful. We’ve found that this type of job swapping both
    builds empathy and inspires exciting new ideas about how to solve challenges.
    Bringing in these new perspectives and building goodwill between teams helps grease
    the cogs of change.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 这些计划可能从一两名工程师的小型实验开始，并随着时间的推移而增长。我们发现，这种类型的工作交换既建立了同理心，又激发了解决挑战的新想法。引入这些新的观点并在团队之间建立善意有助于推动变革的齿轮。
- en: Finally, building in mechanisms to say thank you—from simple emails to more
    elaborate forms—reinforces the positive impact that people have on one another
    and sets the right incentives. At Google, we’ve long had a culture of peer bonuses—small
    amounts of cash that don’t cost the company a lot of money, but build large amounts
    of goodwill. A cash-free version of this called Kudos allows Googlers to formally
    recognize each other in digital form that’s visible to everyone. Some of our offices
    have also experimented with thank-you postcards.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，建立感谢机制——从简单的电子邮件到更复杂的形式——强化了人们对彼此的积极影响，并设定了正确的激励措施。在谷歌，我们长期以来一直有同事奖金的文化——这是一些不花费公司很多钱的小额现金，但却建立了大量的善意。一个无现金版本的Kudos允许谷歌员工以数字形式正式认可彼此。我们的一些办公室也尝试过感谢明信片。
- en: Convincing Leadership
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 说服领导
- en: If you work in a large organization, getting buy-in for reliability and security
    changes you want to make may be a challenge. Since many organizations are incentivized
    to spend their limited resources on revenue-generating or mission-forward efforts,
    it can be tough to get buy-in for improvements that are seen as happening behind
    the scenes.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在一个大型组织中工作，获得对你想要进行的可靠性和安全性变更的支持可能是一个挑战。由于许多组织受到激励，要把有限的资源花在产生收入或推动使命的努力上，很难获得对被视为发生在幕后的改进的支持。
- en: 'This section explores some strategies we’ve used at Google, or seen used elsewhere,
    to get buy-in from leadership for security and reliability changes. As with the
    guidance given elsewhere in this chapter, your mileage may vary. Some of these
    strategies will be effective, while others won’t be. Just as every organization’s
    culture is unique, so is every leader and leadership team. It’s worth repeating
    our previous advice here: just because you think one of these strategies won’t
    work doesn’t necessarily mean you shouldn’t try it. The results just might surprise
    you.'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 本节探讨了我们在谷歌使用过或在其他地方看到的一些策略，以获得领导层对安全和可靠性变革的支持。与本章其他地方给出的指导一样，你的效果可能会有所不同。其中一些策略会有效，而其他策略则不会。正如每个组织的文化是独特的一样，每个领导者和领导团队也是如此。值得重申我们之前的建议：仅仅因为你认为其中一种策略行不通并不一定意味着你不应该尝试。结果可能会让你感到惊讶。
- en: Understand the Decision-Making Process
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 了解决策过程
- en: Suppose you want to make a fairly substantial change to your organization’s
    custom frontend web-serving infrastructure to include DDoS protection; for example,
    referencing the benefits outlined in [Chapter 10](ch10.html#mitigating_denial_of_service_attacks).
    You know this will vastly improve the reliability and security of the system,
    but it also requires multiple teams to incorporate new libraries or restructure
    code. Integrating and testing this change properly could take months. Given the
    high cost but positive impact, who in your organization would make the decision
    to move forward, and how would they make that decision? Understanding the answers
    to these questions is key to knowing how to influence leadership.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你想对你组织的自定义前端Web服务器基础架构进行相当大的改变，以包括DDoS防护；例如，参考[第10章](ch10.html#mitigating_denial_of_service_attacks)中概述的好处。你知道这将极大地提高系统的可靠性和安全性，但这也需要多个团队来整合新的库或重构代码。正确整合和测试这个改变可能需要几个月的时间。考虑到高成本但积极影响，你组织中的谁会决定继续前进，他们将如何做出这个决定？了解这些问题的答案对于知道如何影响领导至关重要。
- en: Here, the term *leadership* loosely applies to the people who make decisions,
    whether those decisions are around direction setting, resource allocation, or
    resolving conflicts. In short, these are the people who are perceived to have
    authority and accountability. They are the people you want to influence, so you
    need to figure out who they are. If you work in a large company, they could be
    VPs or other senior people in management. Smaller organizations, such as startups
    and nonprofits, often consider the CEO to be the senior decider. In an open source
    project, this could be the project’s founder or top contributor.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，“领导力”一词宽泛地适用于做出决策的人，无论这些决策是关于方向的设定、资源分配还是解决冲突。简而言之，这些人被认为拥有权威和责任。他们是你想要影响的人，所以你需要弄清楚他们是谁。如果你在一家大公司工作，他们可能是副总裁或其他高级管理人员。像初创公司和非营利组织这样的小型组织通常认为CEO是高级决策者。在开源项目中，这可能是项目的创始人或最重要的贡献者。
- en: The answer to the question “Who is the decider for this change?” can be tricky
    to determine. The authority to make decisions may indeed lie with someone typically
    considered to be at the top of the leadership hierarchy or in an obvious gatekeeping
    role, such as a lawyer or risk officer. But depending on the nature of the change
    you’re proposing, the decision might also reside in a tech lead, or even with
    you. The decider may not be a single person; it could be a set of stakeholders
    across the organization from different departments such as legal, press relations,
    engineering, and product development.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 回答“谁是这个变革的决策者？”这个问题可能很难确定。做出决策的权威可能确实属于通常被认为处于领导层层级最高位置的人，或者处于明显的守门人角色，比如律师或风险官员。但根据你提出的变革的性质，决定也可能在技术领导者，甚至在你身上。决策者可能不是一个人，可能是来自组织不同部门的一组利益相关者，比如法律、新闻关系、工程和产品开发。
- en: Sometimes the authority to make a decision resides loosely within a group of
    people or, in the extreme form, within a whole community. For example, in [Chapter 7](ch07.html#design_for_a_changing_landscape)
    we describe how the Chrome team participated in increasing HTTPS usage on the
    internet. In this situation, the decision to make a directional change was made
    within the community, and required building an industry-wide consensus.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 有时做出决定的权威可能松散地存在于一群人之中，或者在极端情况下，存在于整个社区之中。例如，在[第7章](ch07.html#design_for_a_changing_landscape)中，我们描述了Chrome团队参与增加互联网上的HTTPS使用。在这种情况下，决定做出方向性改变是在社区内做出的，并且需要建立行业范围内的共识。
- en: Determining who is a decider for a change may take some sleuthing, especially
    if you are new to an organization, or if there are no existing processes telling
    you how to get something done. However, you can’t skip this step. Once you understand
    who the deciders are, you then should seek to understand the pressures and demands
    that they face. These might stem from their own management, boards of directors,
    or shareholders, and can even take the form of external influences like customer
    expectations. It’s important to understand these pressures so you can understand
    where your proposed changes fit in. To return to our earlier example of adding
    DDoS protection to the frontend web-serving infrastructure, where would that change
    fit in relative to leadership’s priorities?
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 确定谁是变革的决策者可能需要一些侦探工作，特别是如果你是新来到一个组织，或者没有现有的流程告诉你如何完成某件事。然而，你不能跳过这一步。一旦你了解了决策者是谁，你就应该努力了解他们面临的压力和需求。这些压力可能来自他们自己的管理层、董事会或股东，甚至可能来自客户的期望等外部影响。了解这些压力很重要，这样你就能了解你提出的变革在哪里。
- en: Build a Case for Change
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为变革建立案例。
- en: As we’ve mentioned already in this chapter, resistance to change can stem from
    fear or perception of friction, but in many cases it can also stem from not understanding
    the reason for a change. When faced with many priorities, decision makers and
    stakeholders have the difficult task of choosing between different goals that
    they would like to achieve. How will they know your change is valuable? It’s important
    to understand the challenges decision makers face when building a case for your
    change. These are some of the steps in a successful case-building process:^([16](ch21.html#ch21fn16))
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 正如本章已经提到的，对变化的抵制可能源于恐惧或摩擦感的认知，但在许多情况下，它也可能源于不理解变化的原因。当面临许多优先事项时，决策者和利益相关者面临着选择不同目标的困难任务。他们如何知道你的变化是有价值的？了解决策者在为你的变革建立案例时面临的挑战是很重要的。这是成功案例建立过程中的一些步骤：^([16](ch21.html#ch21fn16))
- en: Gather data
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 收集数据
- en: You know that a change needs to be made. How did you come to that conclusion?
    It’s important to have data to back up your proposed change. For example, if you
    know that building automated test frameworks into the build process will save
    developers time, can you demonstrate how much time this change will save? If you’re
    advocating for continuous builds because the practice creates incentives for developers
    to fix errors, can you show how continuous builds save time in the release processes?
    Conduct research and user studies to produce data-rich reports complete with graphs,
    charts, and anecdotal stories from users; then summarize this data in a way that
    decision makers can digest. For example, if you want to drive down the time it
    takes your team to patch security vulnerabilities or address reliability configuration
    issues, consider creating a dashboard that tracks progress for each of the engineering
    teams. Showing those dashboards to the leaders of those areas can encourage individual
    teams to hit targets. Be mindful of the investments you’ll need to make to gather
    high-quality, relevant data.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 你知道需要做出改变。你是如何得出这个结论的？有数据支持你提出的变化是很重要的。例如，如果你知道将自动化测试框架构建到构建过程中会节省开发人员的时间，你能展示这种变化将节省多少时间吗？如果你主张持续构建，因为这种做法会激励开发人员修复错误，你能展示持续构建如何在发布过程中节省时间吗？进行研究和用户研究，制作数据丰富的报告，其中包括图表和用户的轶事，然后以决策者能够消化的方式总结这些数据。例如，如果你想缩短团队修补安全漏洞或解决可靠性配置问题所需的时间，考虑创建一个跟踪每个工程团队进展的仪表板。向这些领域的领导展示这些仪表板可以鼓励各个团队达到目标。要注意你需要做出的投资，以收集高质量、相关的数据。
- en: Educate others
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 教育他人
- en: Security and reliability issues can be hard to understand unless you’re connected
    to them every day. Get the word out through talks and information sessions. At
    Google, we use Red Team postmortems (see [Chapter 20](ch20.html#twozero_understanding_roles_and_respons))
    to educate leaders at a high level about the kinds of risks we’re facing. While
    Red Teams were not originally created as an educational effort, they can raise
    awareness within all levels of the company. This has been beneficial in convincing
    teams to maintain their SLOs for remediating vulnerabilities.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 安全性和可靠性问题可能很难理解，除非你每天都与它们联系在一起。通过讲话和信息会议传播消息。在谷歌，我们使用红队事后总结（见[第20章](ch20.html#twozero_understanding_roles_and_respons)）向高层领导教育我们所面临的风险。虽然红队最初并不是为了教育而创建的，但它可以在公司的各个层面提高意识。这对说服团队维持其修复漏洞的SLOs是有益的。
- en: Align incentives
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 调整激励措施
- en: Using the data you’ve gathered and your knowledge of the pressures deciders
    face, you may be able to address other concerns in their sphere of influence.
    In our earlier DDoS example, making the proposed change to the framework would
    provide a security benefit, but a more reliable website would also potentially
    help increase sales. This could be a strong argument to present to the company’s
    leadership. For a real-world example, [Chapter 19](ch19.html#onenine_case_study_chrome_security_team)
    discusses how rapid releases of Chrome get security fixes to users faster, with
    the additional benefit of quick deployment for reliability fixes and new features.
    This is great for users and product development stakeholders alike. Don’t forget
    to discuss how you’re reducing the fear and friction that may accompany a change—as
    mentioned earlier in this chapter, Google’s rollout of security keys allowed us
    to eliminate unpopular password change policies and reduce end-user friction for
    two-factor authentication, which were powerful arguments for change.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 利用你收集的数据和对决策者面临的压力的了解，你可能能够解决他们影响范围内的其他问题。在我们之前的DDoS示例中，对框架提出的改变将提供安全性好处，但更可靠的网站也可能有助于增加销售额。这可能是向公司领导提出的一个有力论据。以Chrome安全团队为例，[第19章](ch19.html#onenine_case_study_chrome_security_team)讨论了Chrome的快速发布如何更快地为用户提供安全修复，同时还能快速部署可靠性修复和新功能。这对用户和产品开发利益相关者都是很好的。不要忘记讨论你是如何减少可能伴随变化的恐惧和摩擦的——正如本章前面提到的，谷歌的安全密钥推出使我们能够取消不受欢迎的密码更改政策，并减少双因素身份验证的最终用户摩擦，这是变革的有力论据。
- en: Find allies
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 寻找盟友
- en: Chances are, you’re not the only person who knows that a change you’re proposing
    would be beneficial. Finding allies and convincing them to support your change
    can add weight to your argument, especially if those people are organizationally
    close to the decision makers. Allies can also test your assumptions about a change.
    Perhaps they know of different data-based arguments, or understand the organization
    in a way that you don’t. This type of peer review can bolster the strength of
    your argument.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 很可能，你并不是唯一知道你提出的变化会有益的人。寻找盟友并说服他们支持你的变革可以增加你的论据的说服力，尤其是如果这些人在组织上与决策者密切相关。盟友还可以测试你对变化的假设。也许他们知道不同的基于数据的论据，或者以你不了解的方式了解组织。这种同行评审可以增强你的论据的力量。
- en: Observe industry trends
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 观察行业趋势
- en: If you’re adopting a change that other organizations have already adopted, you
    may be able to rely on their experiences to convince your leadership. Do your
    research—articles, books, public talks at conferences, and other materials may
    demonstrate how and why an organization took up a change. There may be additional
    data points you can use directly in building your case for change. You could even
    consider bringing in expert speakers to address your leadership on specific topics
    and industry trends.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在采纳其他组织已经采纳的变革，你可能可以依靠他们的经验来说服你的领导层。做好你的研究——文章、书籍、会议上的公开演讲以及其他材料可能会展示一个组织是如何以及为什么采纳了变革。你可能还可以直接使用其他数据点来建立你变革的案例。你甚至可以考虑邀请专家演讲者就特定主题和行业趋势向你的领导层发表演讲。
- en: Change the zeitgeist
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 改变时代精神
- en: If you can change the way people think about your problem over time, it may
    be easier to convince decision makers later on. This applies especially when you
    need broad consensus for a change. We discuss this dynamic briefly in the HTTPS
    case study in [Chapter 7](ch07.html#design_for_a_changing_landscape), where the
    Chrome team and others in the industry changed developer behavior over a long
    period of time, to the point where HTTPS as a default became the norm.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你能够随着时间改变人们对你的问题的看法，也许以后说服决策者会更容易。当你需要广泛共识支持变革时，这一点尤为重要。我们在[第7章](ch07.html#design_for_a_changing_landscape)中简要讨论了这种动态，在那里，Chrome团队和行业中的其他人在很长一段时间内改变了开发者的行为，直到HTTPS成为默认情况。
- en: Pick Your Battles
  id: totrans-140
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 抉择你的战斗
- en: 'If your organization is facing many reliability and security challenges, constant
    advocacy can create fatigue and resistance to additional change. It’s important
    to pick your battles carefully: prioritize initiatives that have a chance of succeeding
    and know when to stop advocating for lost causes. This shows leadership and decision
    makers that you’re tackling the most important issues.'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的组织面临许多可靠性和安全挑战，不断的倡导可能会导致疲劳和对额外变革的抵制。重要的是要谨慎选择你的战斗：优先考虑有可能成功的倡议，并知道何时停止为已经失败的事业倡导。这显示了领导和决策者们你正在解决最重要的问题。
- en: Lost causes—that is, proposals you have to shelve—have value too. Even when
    you can’t successfully advocate for change, having data that supports your ideas
    and allies that back your plan, and educating people about the problem, can be
    valuable. At some point, your organization may be ready to tackle a challenge
    you’ve already studied. If you already have a plan waiting in the wings, teams
    can move faster.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 失败的事业——也就是你不得不搁置的提案——也有价值。即使你不能成功地倡导变革，拥有支持你的想法的数据和盟友，以及向人们传达问题的教育，都是有价值的。在某个时候，你的组织可能已经准备好解决你已经研究过的挑战。如果你已经有一个等待的计划，团队可以更快地行动。
- en: Escalations and Problem Resolution
  id: totrans-143
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 升级和问题解决
- en: 'Despite best efforts, sometimes the need to make decisions on a security or
    reliability change can rise to the surface in an explosive way. Perhaps a serious
    outage or security breach means that you quickly need more resources and staffing.
    Or perhaps two teams have differing opinions on how to solve a problem, and the
    natural course of decision making isn’t working. In these types of situations,
    you may need to seek resolution from the management chain. When dealing with escalations,
    we recommend the following guidelines:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管尽了最大努力，有时对安全或可靠性变革的决策需求可能会以爆炸性的方式浮出水面。也许严重的故障或安全漏洞意味着你迅速需要更多资源和人员。或者也许两个团队对如何解决问题有不同的意见，而决策的自然过程并不奏效。在这些类型的情况下，你可能需要从管理层寻求解决方案。在处理升级时，我们建议遵循以下准则：
- en: Form a group of colleagues, mentors, tech leads, or managers to provide input
    on the situation from both sides. It’s usually a good idea to walk through the
    situation with someone with an unbiased view before deciding to escalate.
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 组建一个由同事、导师、技术负责人或经理组成的小组，从两方面提供对情况的意见。在决定升级之前，通常最好与一个持中立观点的人一起讨论情况。
- en: Have the group summarize the situation and proposed decision options for management.
    Keep this summary as concise as possible. Maintain a strictly factual tone, and
    include links to any relevant supporting data, conversations, bugs, designs, etc.
    Make the potential impact of each option as clear as possible.
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 让团队总结情况并提出管理层的决策选项。尽可能保持这个总结简洁。保持严格的事实陈述，包括任何相关的支持数据、对话、错误、设计等的链接。尽可能清楚地说明每个选项的潜在影响。
- en: Share the summary with your own team’s leadership to ensure further alignment
    on possible solutions. For example, multiple issues might require simultaneous
    escalation. You may want to either merge escalations or emphasize other aspects
    of corresponding situations.
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与你自己团队的领导分享总结，以确保对可能解决方案的进一步一致性。例如，多个问题可能需要同时升级。你可能想要合并升级或强调相应情况的其他方面。
- en: Schedule a session to present the situation to all affected management chains
    and designate appropriate decision makers in each chain. The decision makers should
    then make a formal decision or meet separately to discuss the issue.
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安排一个会议向所有受影响的管理层介绍情况，并在每个管理层中指定适当的决策者。然后决策者们应该做出正式决定或单独会议讨论这个问题。
- en: As a concrete example, sometimes security issues at Google need to be escalated
    when an unresolvable disagreement arises between the product team and the security
    reviewer about the best course of action. In this case, an escalation is initiated
    within the security team. At that point, the two senior leaders within the organizations
    negotiate a compromise or decide to implement one of the options suggested by
    the security team or the product team. Because we integrate these escalations
    into our normal company culture, escalations aren’t seen as confrontational.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个具体的例子，有时在谷歌，当产品团队和安全审查人员在采取行动的最佳方式上出现无法解决的分歧时，安全问题需要升级。在这种情况下，安全团队内部发起了升级。此时，组织内的两位高级领导者协商妥协或决定执行安全团队或产品团队提出的选项之一。因为我们将这些升级融入了我们正常的公司文化中，升级并不被视为对抗性的。
- en: Conclusion
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: Just as you design and manage systems, you can design, implement, and maintain
    the culture of an organization over time to support security and reliability goals.
    Reliability and security efforts should be considered just as carefully as engineering
    efforts. There are important cultural elements of engineering that, when taken
    in aggregate, or even on their own, can contribute to more robust systems.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您设计和管理系统一样，您可以随着时间的推移设计、实施和维护组织文化，以支持安全性和可靠性目标。可靠性和安全性工作应该像工程工作一样仔细考虑。工程中有重要的文化元素，当综合考虑时，甚至单独考虑时，可以促进更健壮的系统。
- en: Security and reliability improvements can inspire fear or concern about increased
    friction. There are strategies for addressing these fears and helping achieve
    buy-in from the people these changes affect. Making sure that your goals are well
    aligned with stakeholders—including leadership—is key. Focusing on usability and
    demonstrating empathy for users can encourage people to adopt change more readily.
    Making a small investment in thinking about how others perceive change may lead
    to greater success in convincing them that your changes are sound.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 安全性和可靠性的改进可能会引发对增加摩擦的恐惧或担忧。有策略可以解决这些恐惧，并帮助获得受到这些变化影响的人的支持。确保您的目标与利益相关者（包括领导层）的利益保持良好的一致性至关重要。专注于可用性并表现出对用户的同理心可以鼓励人们更愿意接受变化。对于思考他人如何看待变化进行一点投资可能会导致更大的成功，使他们相信您的变化是合理的。
- en: As we stated in the opening to this chapter, no two cultures are the same, and
    you’ll need to adapt the strategies we’ve outlined to your own organization. In
    doing so, you will also find that you likely can’t implement all of these strategies.
    It may be useful to pick and choose the areas your organization most needs to
    address, and improve those over time—which is the way Google approaches constant
    improvement over the long term.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在本章开头所述，没有两种文化是相同的，您需要根据自己的组织来调整我们提出的策略。这样做，您还会发现您可能无法实施所有这些策略。挑选并选择您的组织最需要解决的领域，并随着时间的推移改进这些领域——这是谷歌长期不断改进的方式。
- en: ^([1](ch21.html#ch21fn1-marker)) See [Chapter 15 of the SRE book](https://landing.google.com/sre/sre-book/chapters/postmortem-culture/).
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 请参见SRE书的第15章。
- en: ^([2](ch21.html#ch21fn2-marker)) This is discussed in [Chapter 3 of the SRE
    book](https://landing.google.com/sre/sre-book/chapters/embracing-risk/).
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 这在SRE书的第3章中有所讨论。
- en: '^([3](ch21.html#ch21fn3-marker)) Google’s practices for code reviews are documented
    in the [Code Review Developer Guide](https://oreil.ly/mnPdJ). For additional background
    on Google’s code review process and culture, see Sadowski, Caitlin et al. 2018\.
    “Modern Code Review: A Case Study at Google.” [*https://oreil.ly/IfFJ1*](https://oreil.ly/IfFJ1).'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 谷歌的代码审查实践在《代码审查开发人员指南》中有记录。有关谷歌的代码审查流程和文化的更多背景信息，请参见Sadowski, Caitlin等人2018年的“现代代码审查：谷歌的案例研究”。
- en: ^([4](ch21.html#ch21fn4-marker)) A 2018 [study of the modern code review process
    at Google](https://oreil.ly/9FhBV) found that developers valued the low-friction
    workflows provided by their tooling.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 一项2018年对谷歌现代代码审查流程的研究发现，开发人员重视其工具提供的低摩擦工作流程。
- en: ^([5](ch21.html#ch21fn5-marker)) For example, Google maintains a set of best
    practices for [cross-site scripting](https://oreil.ly/qYpj8).
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，谷歌保持了一套关于跨站脚本的最佳实践。
- en: ^([6](ch21.html#ch21fn6-marker)) A recent study on the use of the Testing-on-the-Toilet
    program at Google showed that the program increased developer awareness. See Murphy-Hill,
    Emerson et al. 2019\. “Do Developers Learn New Tools on the Toilet?” *Proceedings
    of the 41st International Conference on Software Engineering*. [*https://oreil.ly/ZN18B*.](https://oreil.ly/ZN18B)
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 最近一项关于谷歌“厕所测试”计划的使用研究表明，该计划提高了开发人员的意识。
- en: '^([7](ch21.html#ch21fn7-marker)) This topic is closely related to *nudging*,
    a method of changing behavior by subtly encouraging people to do the right thing.
    Nudge theory was developed by Richard Thaler and Cass Sunstein, who were awarded
    a Nobel Prize in Economics for their contribution to behavioral economics. For
    more information, see Thaler, Richard H., and Cass R. Sunstein. 2008\. *Nudge:
    Improving Decisions About Health, Wealth, and Happiness*. New Haven, CT: Yale
    University Press.'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 这个话题与“推动”密切相关，这是一种通过微妙地鼓励人们做正确的事情来改变行为的方法。推动理论是由理查德·塞勒斯坦和卡斯·桑斯坦开发的，他们因对行为经济学的贡献而获得了诺贝尔经济学奖。有关更多信息，请参见理查德·H·塞勒和卡斯·R·桑斯坦。2008年的《推动：改善健康、财富和幸福的决策》。
- en: ^([8](ch21.html#ch21fn8-marker)) Dave Rensin, Director of Customer Reliability
    Engineering at Google, considers this topic in greater detail in his talk [“Less
    Risk Through Greater Humanity”](https://oreil.ly/ZrWkS).
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 谷歌的客户可靠性工程总监戴夫·伦辛在他的演讲“通过更大的人性减少风险”中更详细地讨论了这个话题。
- en: ^([9](ch21.html#ch21fn9-marker)) The final report of the Columbia Disaster Investigation
    Board is preserved [on the NASA website](https://oreil.ly/ew-BA) for the general
    public to read. [Chapter 7](ch07.html#design_for_a_changing_landscape) in particular
    focuses on the culture of safety at NASA and its impact on the disaster. We’ve
    found that the report’s findings can often be extrapolated to organizational culture
    in other types of engineering organizations.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 哥伦比亚灾难调查委员会的最终报告被保存在NASA网站上，供普通公众阅读。特别是第7章着重于NASA的安全文化及其对灾难的影响。我们发现该报告的调查结果通常可以推广到其他类型的工程组织的组织文化中。
- en: ^([10](ch21.html#ch21fn10-marker)) See [Chapter 29 of the SRE book](https://landing.google.com/sre/sre-book/chapters/dealing-with-interrupts/).
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: ^([10](ch21.html#ch21fn10-marker)) 请参见[SRE书籍的第29章](https://landing.google.com/sre/sre-book/chapters/dealing-with-interrupts/)。
- en: ^([11](ch21.html#ch21fn11-marker)) See [Chapter 32 of the SRE book](https://landing.google.com/sre/sre-book/chapters/evolving-sre-engagement-model/).
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: ^([11](ch21.html#ch21fn11-marker)) 请参见[SRE书籍的第32章](https://landing.google.com/sre/sre-book/chapters/evolving-sre-engagement-model/)。
- en: ^([12](ch21.html#ch21fn12-marker)) Usable solutions for security and privacy
    have long been recognized as key to successful deployment of technology controls.
    For a flavor of what these conversations look like, you might be interested in
    exploring the proceedings of [SOUPS](https://oreil.ly/8bTuI), a conference dedicated
    to usable security and privacy.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: ^([12](ch21.html#ch21fn12-marker)) 人们早就认识到安全和隐私的可用解决方案对于成功部署技术控制至关重要。如果你想了解这些对话的风采，你可能会对探索[SOUPS](https://oreil.ly/8bTuI)的会议记录感兴趣，这是一场专门讨论可用安全和隐私的会议。
- en: '^([13](ch21.html#ch21fn13-marker)) Studies have shown that users make poor
    choices that put their passwords at risk. For more information on the adverse
    effects of user password choices, see Zhang, Yinqian, Fabian Monrose, and Michael
    K. Reiter. 2010\. “The Security of Modern Password Expiration: An Algorithmic
    Framework and Empirical Analysis.” *Proceedings of the 17th ACM Conference on
    Computer and Communications Security*: 176–186\. [*https://oreil.ly/NbfFj*](https://oreil.ly/NbfFj).
    Standards and compliance regimes are also considering these effects. For example,
    [NIST 800-63](https://oreil.ly/q2Bgw) has been updated to require a password change
    only when there is suspicion that it has been compromised.'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: ^([13](ch21.html#ch21fn13-marker)) 研究表明，用户做出了使其密码面临风险的不良选择。有关用户密码选择不利影响的更多信息，请参见张引谦、法比安·蒙罗斯和迈克尔·K·赖特的文章。2010年。“现代密码过期的安全性：算法框架和实证分析。”*第17届ACM计算机与通信安全会议论文集*：176-186。[*https://oreil.ly/NbfFj*](https://oreil.ly/NbfFj)。标准和合规制度也在考虑这些影响。例如，[NIST
    800-63](https://oreil.ly/q2Bgw)已经更新，要求只有在怀疑密码已被破坏时才需要更改密码。
- en: ^([14](ch21.html#ch21fn14-marker)) Password Alert is a Chrome browser extension
    that alerts when a user has typed their Google or GSuite password into a malicious
    website.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: ^([14](ch21.html#ch21fn14-marker)) Password Alert是Chrome浏览器的一个扩展程序，当用户在恶意网站上输入其Google或GSuite密码时会发出警报。
- en: ^([15](ch21.html#ch21fn15-marker)) Production Excellence reviews are carried
    out periodically on SRE teams by senior SRE leaders, assessing them on a number
    of standard measures and providing feedback and encouragement. An SLO of 99.95%
    might be accompanied by a rationale such as, “We previously wanted to reach a
    99.99% success rate, but found this target to be unrealistic in practice. We have
    not discovered a negative impact on developer productivity at 99.95%.”
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: ^([15](ch21.html#ch21fn15-marker)) 由高级SRE领导定期对SRE团队进行生产卓越性审查，评估他们在许多标准措施上的表现，并提供反馈和鼓励。例如，99.95%的SLO可能会伴随着这样的理由：“我们之前希望达到99.99%的成功率，但发现这个目标在实践中是不现实的。在99.95%的情况下，我们没有发现对开发人员生产力的负面影响。”
- en: '^([16](ch21.html#ch21fn16-marker)) For a practical example of how we successfully
    built a case for change, see [“Example: Increasing HTTPS usage”](ch07.html#example_increasing_https_usage).'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: ^([16](ch21.html#ch21fn16-marker)) 有关我们如何成功建立变革案例的实际例子，请参见[“示例：增加HTTPS使用率”](ch07.html#example_increasing_https_usage)。

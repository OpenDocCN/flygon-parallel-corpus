- en: Foreword to the Second Edition
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二版前言
- en: 'The first edition of *Kafka: The Definitive Guide* was published five years
    ago. At the time, we estimated that Apache Kafka was used in 30% of Fortune 500
    companies. Today, over 70% of Fortune 500 companies are using Apache Kafka. It
    is still one of the most popular open source projects in the world and is at the
    center of a huge ecosystem.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '*Kafka：权威指南*的第一版是五年前出版的。当时，我们估计Apache Kafka在财富500强公司中被使用的比例为30%。如今，超过70%的财富500强公司正在使用Apache
    Kafka。它仍然是世界上最受欢迎的开源项目之一，并且处于一个庞大生态系统的中心。'
- en: Why all the excitement? I think it is because there has been a huge gap in our
    infrastructure for data. Traditionally, data management was all about storage—the
    file stores and databases that keep our data safe and let us look up the right
    bit at the right time. Huge amounts of intellectual energy and commercial investment
    have been poured into these systems. But a modern company isn’t just one piece
    of software with one database. A modern company is an incredibly complex system
    built out of hundreds or even thousands of custom applications, microservices,
    databases, SaaS layers, and analytics platforms. And increasingly, the problem
    we face is how to connect all this up into one company and make it all work together
    in real time.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么这么兴奋？我认为这是因为我们的基础设施中存在着巨大的数据空白。传统上，数据管理主要是关于存储——文件存储和数据库，它们可以保护我们的数据并让我们在正确的时间查找到正确的数据。大量的智力能量和商业投资已经被投入到这些系统中。但是，一个现代公司不仅仅是一个拥有一个数据库的软件。一个现代公司是一个由数百甚至数千个定制应用程序、微服务、数据库、SaaS层和分析平台构建而成的极其复杂的系统。而且，我们面临的问题越来越多地是如何将所有这些连接起来，并使其实时协同工作。
- en: This problem isn’t about managing data at rest—it is about managing data in
    motion. And right at the heart of that movement is Apache Kafka, which has become
    the de facto foundation to any platform for data in motion.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 这个问题不是关于管理静态数据，而是关于管理动态数据。而在这种运动的核心就是Apache Kafka，它已经成为任何动态数据平台的事实基础。
- en: 'Through this journey, Kafka hasn’t remained static. What started as a bare-bones
    commit log has evolved as well: adding connectors and stream processing capabilities,
    and reinventing its own architecture along the way. The community not only evolved
    existing APIs, configuration options, metrics, and tools to improve Kafka’s usability
    and reliability, but we’ve also introduced a new programmatic administration API,
    the next generation of global replication and DR with MirrorMaker 2.0, a new Raft-based
    consensus protocol that allows for running Kafka in a single executable, and true
    elasticity with tiered storage support. Perhaps most importantly, we’ve made Kafka
    a no-brainer in critical enterprise use cases by adding support for advanced security
    options—authentication, authorization, and encryption.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个过程中，Kafka并没有停滞不前。它最初作为一个简陋的提交日志，也在不断发展：增加了连接器和流处理能力，并在这一过程中重新构建了自己的架构。社区不仅发展了现有的API、配置选项、指标和工具，以改进Kafka的可用性和可靠性，而且我们还引入了一个新的编程管理API，全局复制和DR的下一代MirrorMaker
    2.0，基于Raft的共识协议，允许在单个可执行文件中运行Kafka，并支持分层存储。也许最重要的是，我们通过添加对高级安全选项（身份验证、授权和加密）的支持，使Kafka成为关键企业用例中的不二选择。
- en: As Kafka evolves, we see the use cases evolve as well. When the first edition
    was published, most Kafka installations were still in traditional on-prem data
    centers using traditional deployment scripts. The most popular use cases were
    ETL and messaging; stream processing use cases were still taking their first steps.
    Five years later, most Kafka installations are in the cloud, and many are running
    on Kubernetes. ETL and messaging are still popular, but they are joined by event-driven
    microservices, real-time stream processing, IoT, machine learning pipelines, and
    hundreds of industry-specific use cases and patterns that range from claims processing
    in insurance companies to trading systems in banks to helping power real-time
    game play and personalization in video games and streaming services.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 随着Kafka的发展，我们也看到了用例的演变。当第一版出版时，大多数Kafka安装仍然在传统的本地数据中心中使用传统的部署脚本。最受欢迎的用例是ETL和消息传递；流处理用例仍在迈出第一步。五年后，大多数Kafka安装都在云上，并且许多正在Kubernetes上运行。ETL和消息传递仍然很受欢迎，但它们也被事件驱动的微服务、实时流处理、物联网、机器学习管道以及数百种行业特定的用例和模式所取代，这些用例和模式从保险公司的索赔处理到银行的交易系统，再到帮助实时游戏和视频流服务中的个性化等各种用例。
- en: Even as Kafka expands to new environments and use cases, writing applications
    that use Kafka well and deploy it confidently in production requires acclimating
    to Kafka’s unique way of thinking. This book covers everything developers and
    SREs need to use Kafka to its full potential, from the most basic APIs and configuration
    to the latest and most cutting-edge capabilities. It covers not just what you
    can do with Kafka and how to do it, but also what not to do and antipatterns to
    avoid. This book can be a trusted guide to the world of Kafka for both new users
    and experienced practitioners.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 即使Kafka扩展到新的环境和用例，编写能够很好地使用Kafka并自信地在生产环境中部署它的应用程序需要适应Kafka独特的思维方式。本书涵盖了开发人员和SRE需要充分利用Kafka的一切潜力的内容，从最基本的API和配置到最新和最尖端的功能。它不仅涵盖了您可以使用Kafka做什么以及如何做，还包括了不应该做什么以及要避免的反模式。这本书可以成为新用户和有经验的从业者信赖的指南，带领他们进入Kafka的世界。
- en: Jay Kreps
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: Jay Kreps
- en: Cofounder and CEO at Confluent
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Confluent的联合创始人兼首席执行官

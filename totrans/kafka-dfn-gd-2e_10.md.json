["```java\nProperties producerProps = new Properties();\nproducerProps.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, \"localhost:9092\");\nproducerProps.put(ProducerConfig.CLIENT_ID_CONFIG, \"DemoProducer\");\nproducerProps.put(ProducerConfig.TRANSACTIONAL_ID_CONFIG, transactionalId); ![1](assets/1.png)\n\nproducer = new KafkaProducer<>(producerProps);\n\nProperties consumerProps = new Properties();\nconsumerProps.put(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, \"localhost:9092\");\nconsumerProps.put(ConsumerConfig.GROUP_ID_CONFIG, groupId);\nprops.put(ConsumerConfig.ENABLE_AUTO_COMMIT_CONFIG, \"false\"); ![2](assets/2.png)\nconsumerProps.put(ConsumerConfig.ISOLATION_LEVEL_CONFIG, \"read_committed\"); ![3](assets/3.png)\n\nconsumer = new KafkaConsumer<>(consumerProps);\n\nproducer.initTransactions(); ![4](assets/4.png)\n\nconsumer.subscribe(Collections.singleton(inputTopic)); ![5](assets/5.png)\n\nwhile (true) {\n  try {\n    ConsumerRecords<Integer, String> records =\n      consumer.poll(Duration.ofMillis(200));\n    if (records.count() > 0) {\n      producer.beginTransaction(); ![6](assets/6.png)\n      for (ConsumerRecord<Integer, String> record : records) {\n        ProducerRecord<Integer, String> customizedRecord = transform(record); ![7](assets/7.png)\n        producer.send(customizedRecord);\n      }\n      Map<TopicPartition, OffsetAndMetadata> offsets = consumerOffsets();\n      producer.sendOffsetsToTransaction(offsets, consumer.groupMetadata()); ![8](assets/8.png)\n      producer.commitTransaction(); ![9](assets/9.png)\n    }\n  } catch (ProducerFencedException|InvalidProducerEpochException e) { ![10](assets/10.png)\n    throw new KafkaException(String.format(\n      \"The transactional.id %s is used by another process\", transactionalId));\n  } catch (KafkaException e) {\n    producer.abortTransaction(); ![11](assets/11.png)\n    resetToLastCommittedPositions(consumer);\n  }}\n```"]
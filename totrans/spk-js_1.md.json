["```js\n// Two slashes start single-line comments\n\nvar x;  // declaring a variable\n\nx = 3 + y;  // assigning a value to the variable `x`\n\nfoo(x, y);  // calling function `foo` with parameters `x` and `y`\nobj.bar(3);  // calling method `bar` of object `obj`\n\n// A conditional statement\nif (x === 0) {  // Is `x` equal to zero?\n    x = 123;\n}\n\n// Defining function `baz` with parameters `a` and `b`\nfunction baz(a, b) {\n    return a + b;\n}\n```", "```js\n    var foo;\n    ```", "```js\n    3 * 7\n    ```", "```js\nvar x;\nif (y >= 0) {\n    x = y;\n} else {\n    x = -y;\n}\n```", "```js\nvar x = y >= 0 ? y : -y;\n```", "```js\nmyFunction(y >= 0 ? y : -y)\n```", "```js\nfoo(7, 1);\n```", "```js\n// Pattern: var _ = ___;\nvar x = 3 * 7;\nvar f = function () { };  // function expr. inside var decl.\n```", "```js\nx++; // single-line comment\n```", "```js\n/* This is\n a multiline\n comment.\n */\n```", "```js\nvar foo;  // declare variable `foo`\n```", "```js\nvar foo = 6;\n```", "```js\nfoo = 4;  // change variable `foo`\n```", "```js\nx += 1;\nx = x + 1;\n```", "```js\narg0\n_tmp\n$elem\n\u03c0\n```", "```js\nvalue.propKey\n```", "```js\n> var str = 'abc';\n> str.length\n3\n```", "```js\n> 'abc'.length\n3\n```", "```js\n> var obj = {};  // empty object\n> obj.foo = 123; // create property `foo`, set it to 123\n123\n> obj.foo\n123\n```", "```js\n> 'hello'.toUpperCase()\n'HELLO'\n```", "```js\n> var obj1 = {};  // an empty object\n> var obj2 = {};  // another empty object\n> obj1 === obj2\nfalse\n> obj1 === obj1\ntrue\n```", "```js\n> var prim1 = 123;\n> var prim2 = 123;\n> prim1 === prim2\ntrue\n```", "```js\n> 3 === 3\ntrue\n> 'abc' === 'abc'\ntrue\n```", "```js\n> var str = 'abc';\n\n> str.length = 1; // try to change property `length`\n> str.length      // \u21d2 no effect\n3\n\n> str.foo = 3; // try to create property `foo`\n> str.foo      // \u21d2 no effect, unknown property\nundefined\n```", "```js\n    {\n        firstName: 'Jane',\n        lastName: 'Doe'\n    }\n    ```", "```js\n    [ 'apple', 'banana', 'cherry' ]\n    ```", "```js\n    /^a+b+$/\n    ```", "```js\n> {} === {}  // two different empty objects\nfalse\n\n> var obj1 = {};\n> var obj2 = obj1;\n> obj1 === obj2\ntrue\n```", "```js\n> var obj = {};\n> obj.foo = 123; // add property `foo`\n> obj.foo\n123\n```", "```js\n    > var foo;\n    > foo\n    undefined\n    ```", "```js\n    > function f(x) { return x }\n    > f()\n    undefined\n    ```", "```js\n    > var obj = {}; // empty object\n    > obj.foo\n    undefined\n    ```", "```js\nif (x === undefined || x === null) {\n    ...\n}\n```", "```js\nif (!x) {\n    ...\n}\n```", "```js\ntypeof value\n```", "```js\n> typeof true\n'boolean'\n> typeof 'abc'\n'string'\n> typeof {} // empty object literal\n'object'\n> typeof [] // empty array literal\n'object'\n```", "```js\nvalue instanceof Constr\n```", "```js\n> var b = new Bar();  // object created by constructor Bar\n> b instanceof Bar\ntrue\n\n> {} instanceof Object\ntrue\n> [] instanceof Array\ntrue\n> [] instanceof Object  // Array is a subconstructor of Object\ntrue\n\n> undefined instanceof Object\nfalse\n> null instanceof Object\nfalse\n```", "```js\n> Boolean(undefined)\nfalse\n> Boolean(0)\nfalse\n> Boolean(3)\ntrue\n> Boolean({}) // empty object\ntrue\n> Boolean([]) // empty array\ntrue\n```", "```js\nfalse && foo()\ntrue  || foo()\n```", "```js\n> NaN && 'abc'\nNaN\n> 123 && 'abc'\n'abc'\n```", "```js\n> 'abc' || 123\n'abc'\n> '' || 123\n123\n```", "```js\n> 1 === 1.0\ntrue\n```", "```js\n> Number('xyz')  // 'xyz' can\u2019t be converted to a number\nNaN\n```", "```js\n> 3 / 0\nInfinity\n> Math.pow(2, 1024)  // number too large\nInfinity\n```", "```js\n'abc'\n\"abc\"\n\n'Did she say \"Hello\"?'\n\"Did she say \\\"Hello\\\"?\"\n\n'That\\'s nice!'\n\"That's nice!\"\n\n'Line 1\\nLine 2'  // newline\n'Backlash: \\\\'\n```", "```js\n> var str = 'abc';\n> str[1]\n'b'\n```", "```js\n> 'abc'.length\n3\n```", "```js\n> var messageCount = 3;\n> 'You have ' + messageCount + ' messages'\n'You have 3 messages'\n```", "```js\n> var str = '';\n> str += 'Multiple ';\n> str += 'pieces ';\n> str += 'are concatenated.';\n> str\n'Multiple pieces are concatenated.'\n```", "```js\n> 'abc'.slice(1)  // copy a substring\n'bc'\n> 'abc'.slice(1, 2)\n'b'\n\n> '\\t xyz  '.trim()  // trim whitespace\n'xyz'\n\n> 'mj\u00f6lnir'.toUpperCase()\n'MJ\u00d6LNIR'\n\n> 'abc'.indexOf('b')  // find a string\n1\n> 'abc'.indexOf('x')\n-1\n```", "```js\nif (myvar === 0) {\n    // then\n}\n\nif (myvar === 0) {\n    // then\n} else {\n    // else\n}\n\nif (myvar === 0) {\n    // then\n} else if (myvar === 1) {\n    // else-if\n} else if (myvar === 2) {\n    // else-if\n} else {\n    // else\n}\n```", "```js\nif (x < 0) return -x;\n```", "```js\nswitch (fruit) {\n    case 'banana':\n        // ...\n        break;\n    case 'apple':\n        // ...\n        break;\n    default:  // all other cases\n        // ...\n}\n```", "```js\nfor (\u27e6\u00abinit\u00bb\u27e7; \u27e6\u00abcondition\u00bb\u27e7; \u27e6\u00abpost_iteration\u00bb\u27e7)\n    \u00abstatement\u00bb\n```", "```js\nfor (var i=0; i < arr.length; i++) {\n    console.log(arr[i]);\n}\n```", "```js\n// Same as for loop above:\nvar i = 0;\nwhile (i < arr.length) {\n    console.log(arr[i]);\n    i++;\n}\n```", "```js\ndo {\n    // ...\n} while (condition);\n```", "```js\nfunction add(param1, param2) {\n    return param1 + param2;\n}\n```", "```js\n> add(6, 1)\n7\n> add('a', 'b')\n'ab'\n```", "```js\nvar add = function (param1, param2) {\n    return param1 + param2;\n};\n```", "```js\nsomeOtherFunction(function (p1, p2) { ... });\n```", "```js\nfunction foo() {\n    bar();  // OK, bar is hoisted\n    function bar() {\n        ...\n    }\n}\n```", "```js\nfunction foo() {\n    bar();  // Not OK, bar is still undefined\n    var bar = function () {\n        // ...\n    };\n}\n```", "```js\n> function f() { return arguments }\n> var args = f('a', 'b', 'c');\n> args.length\n3\n> args[0]  // read element at index 0\n'a'\n```", "```js\nfunction f(x, y) {\n    console.log(x, y);\n    return toArray(arguments);\n}\n```", "```js\n> f('a', 'b', 'c')\na b\n[ 'a', 'b', 'c' ]\n```", "```js\n> f('a')\na undefined\n[ 'a' ]\n> f()\nundefined undefined\n[]\n```", "```js\nfunction pair(x, y) {\n    x = x || 0;  // (1)\n    y = y || 0;\n    return [ x, y ];\n}\n```", "```js\n> pair()\n[ 0, 0 ]\n> pair(3)\n[ 3, 0 ]\n> pair(3, 5)\n[ 3, 5 ]\n```", "```js\nfunction pair(x, y) {\n    if (arguments.length !== 2) {\n        throw new Error('Need exactly 2 arguments');\n    }\n    ...\n}\n```", "```js\nfunction toArray(arrayLikeObject) {\n    return Array.prototype.slice.call(arrayLikeObject);\n}\n```", "```js\nfunction getPerson(id) {\n    if (id < 0) {\n        throw new Error('ID must not be negative: '+id);\n    }\n    return { id: id }; // normally: retrieved from database\n}\n\nfunction getPersons(ids) {\n    var result = [];\n    ids.forEach(function (id) {\n        try {\n            var person = getPerson(id);\n            result.push(person);\n        } catch (exception) {\n            console.log(exception);\n        }\n    });\n    return result;\n}\n```", "```js\n> getPersons([2, -5, 137])\n[Error: ID must not be negative: -5]\n[ { id: 2 }, { id: 137 } ]\n```", "```js\n'use strict';\n```", "```js\nfunction functionInStrictMode() {\n    'use strict';\n}\n```", "```js\n> var x;\n> x = 3;\n> y = 4;\nReferenceError: y is not defined\n```", "```js\nvar x = 1, y = 2, z = 3;\n```", "```js\nvar x = 1;\nvar y = 2;\nvar z = 3;\n```", "```js\nfunction foo() {\n    var x = -512;\n    if (x < 0) {  // (1)\n        var tmp = -x;\n        ...\n    }\n    console.log(tmp);  // 512\n}\n```", "```js\nfunction foo() {\n    console.log(tmp); // undefined\n    if (false) {\n        var tmp = 3;  // (1)\n    }\n}\n```", "```js\nfunction foo() {\n    var tmp;  // hoisted declaration\n    console.log(tmp);\n    if (false) {\n        tmp = 3;  // assignment stays put\n    }\n}\n```", "```js\nfunction createIncrementor(start) {\n    return function () {  // (1)\n        start++;\n        return start;\n    }\n}\n```", "```js\n> var inc = createIncrementor(5);\n> inc()\n6\n> inc()\n7\n> inc()\n8\n```", "```js\n(function () {  // open IIFE\n    var tmp = ...;  // not a global variable\n}());  // close IIFE\n```", "```js\nvar result = [];\nfor (var i=0; i < 5; i++) {\n    result.push(function () { return i });  // (1)\n}\nconsole.log(result[1]()); // 5 (not 1)\nconsole.log(result[3]()); // 5 (not 3)\n```", "```js\nfor (var i=0; i < 5; i++) {\n    (function () {\n        var i2 = i; // copy current i\n        result.push(function () { return i2 });\n    }());\n}\n```", "```js\n'use strict';\nvar jane = {\n    name: 'Jane',\n\n    describe: function () {\n        return 'Person named '+this.name;\n    }\n};\n```", "```js\n> jane.name  // get\n'Jane'\n> jane.name = 'John';  // set\n> jane.newProperty = 'abc';  // property created automatically\n```", "```js\n> jane.describe()  // call method\n'Person named John'\n> jane.name = 'Jane';\n> jane.describe()\n'Person named Jane'\n```", "```js\n> 'newProperty' in jane\ntrue\n> 'foo' in jane\nfalse\n```", "```js\n> jane.newProperty !== undefined\ntrue\n> jane.foo !== undefined\nfalse\n```", "```js\n> delete jane.newProperty\ntrue\n> 'newProperty' in jane\nfalse\n```", "```js\n> var obj = { 'not an identifier': 123 };\n> obj['not an identifier']\n123\n> obj['not an identifier'] = 456;\n```", "```js\n> var obj = { hello: 'world' };\n> var x = 'hello';\n\n> obj[x]\n'world'\n> obj['hel'+'lo']\n'world'\n```", "```js\n'use strict';\nvar jane = {\n    name: 'Jane',\n\n    describe: function () {\n        return 'Person named '+this.name;\n    }\n};\n```", "```js\n> var func = jane.describe;\n> func()\nTypeError: Cannot read property 'name' of undefined\n```", "```js\n> var func2 = jane.describe.bind(jane);\n> func2()\n'Person named Jane'\n```", "```js\nvar jane = {\n    name: 'Jane',\n    friends: [ 'Tarzan', 'Cheeta' ],\n    logHiToFriends: function () {\n        'use strict';\n        this.friends.forEach(function (friend) {\n            // `this` is undefined here\n            console.log(this.name+' says hi to '+friend);\n        });\n    }\n}\n```", "```js\n> jane.logHiToFriends()\nTypeError: Cannot read property 'name' of undefined\n```", "```js\nlogHiToFriends: function () {\n    'use strict';\n    var that = this;\n    this.friends.forEach(function (friend) {\n        console.log(that.name+' says hi to '+friend);\n    });\n}\n```", "```js\nlogHiToFriends: function () {\n    'use strict';\n    this.friends.forEach(function (friend) {\n        console.log(this.name+' says hi to '+friend);\n    }, this);\n}\n```", "```js\n// Set up instance data\nfunction Point(x, y) {\n    this.x = x;\n    this.y = y;\n}\n// Methods\nPoint.prototype.dist = function () {\n    return Math.sqrt(this.x*this.x + this.y*this.y);\n};\n```", "```js\n> var p = new Point(3, 5);\n> p.x\n3\n> p.dist()\n5.830951894845301\n```", "```js\n> p instanceof Point\ntrue\n```", "```js\n> var arr = [ 'a', 'b', 'c' ];\n```", "```js\n> arr[0]\n'a'\n> arr[0] = 'x';\n> arr\n[ 'x', 'b', 'c' ]\n```", "```js\n> var arr = ['a', 'b'];\n> arr.length\n2\n\n> arr[arr.length] = 'c';\n> arr\n[ 'a', 'b', 'c' ]\n> arr.length\n3\n\n> arr.length = 1;\n> arr\n[ 'a' ]\n```", "```js\n> var arr = [ 'a', 'b', 'c' ];\n> 1 in arr // is there an element at index 1?\ntrue\n> 5 in arr // is there an element at index 5?\nfalse\n```", "```js\n> var arr = [];\n> arr.foo = 123;\n> arr.foo\n123\n```", "```js\n> var arr = [ 'a', 'b', 'c' ];\n\n> arr.slice(1, 2)  // copy elements\n[ 'b' ]\n> arr.slice(1)\n[ 'b', 'c' ]\n\n> arr.push('x')  // append an element\n4\n> arr\n[ 'a', 'b', 'c', 'x' ]\n\n> arr.pop()  // remove last element\n'x'\n> arr\n[ 'a', 'b', 'c' ]\n\n> arr.shift()  // remove first element\n'a'\n> arr\n[ 'b', 'c' ]\n\n> arr.unshift('x')  // prepend an element\n3\n> arr\n[ 'x', 'b', 'c' ]\n\n> arr.indexOf('b')  // find the index of an element\n1\n> arr.indexOf('y')\n-1\n\n> arr.join('-')  // all elements in a single string\n'x-b-c'\n> arr.join('')\n'xbc'\n> arr.join()\n'x,b,c'\n```", "```js\n[ 'a', 'b', 'c' ].forEach(\n    function (elem, index) {  // (1)\n        console.log(index + '. ' + elem);\n    });\n```", "```js\n0\\. a\n1\\. b\n2\\. c\n```", "```js\n> [1,2,3].map(function (x) { return x*x })\n[ 1, 4, 9 ]\n```", "```js\n/^abc$/\n/[A-Za-z0-9]+/\n```", "```js\n> /^a+b+$/.test('aaab')\ntrue\n> /^a+b+$/.test('aaa')\nfalse\n```", "```js\n> /a(b+)a/.exec('_abbba_aba_')\n[ 'abbba', 'bbb' ]\n```", "```js\n> '<a> <bbb>'.replace(/<(.*?)>/g, '[$1]')\n'[a] [bbb]'\n```", "```js\n> Math.abs(-2)\n2\n\n> Math.pow(3, 2)  // 3 to the power of 2\n9\n\n> Math.max(2, -1, 5)\n5\n\n> Math.round(1.9)\n2\n\n> Math.PI  // pre-defined constant for \u03c0\n3.141592653589793\n\n> Math.cos(Math.PI)  // compute the cosine for 180\u00b0\n-1\n```"]
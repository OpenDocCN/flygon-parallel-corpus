["```js\n    true\n    false\n    ```", "```js\n    1023\n    7.851\n    ```", "```js\n    'hello'\n    \"hello\"\n    ```", "```js\n    {\n        firstName: 'Jane',\n        lastName: 'Doe'\n    }\n    ```", "```js\n    [ 'apple', 'banana', 'cherry' ]\n    ```", "```js\n// Two slashes start single-linecomments\n\nvar x;  // declaring a variable\n\nx = 3 + y;  // assigning a value to the variable `x`\n\nfoo(x, y);  // calling function `foo` with parameters `x` and `y`\nobj.bar(3);  // calling method `bar` of object `obj`\n\n// A conditional statement\nif (x === 0) {  // Is `x` equal to zero?\n    x = 123;\n}\n\n// Defining function `baz` with parameters `a` and `b`\nfunction baz(a, b) {\n    return a + b;\n}\n```", "```js\n    var a = 0; // init\n    ```", "```js\n    /* temporarily disabled\n    processNext(queue);\n    */\n\n    function (a /* int */, b /* str */) {\n    }\n    ```", "```js\nmyvar\n3 + x\nmyfunc('a', 'b')\n```", "```js\nvar salutation;\nif (male) {\n    salutation = 'Mr.';\n} else {\n    salutation = 'Mrs.';\n}\n```", "```js\nvar salutation = (male ? 'Mr.' : 'Mrs.');\n```", "```js\n    {\n        foo: bar(3, 5)\n    }\n    ```", "```js\n    function foo() { }\n    ```", "```js\n> eval('{ foo: 123 }')\n123\n> eval('({ foo: 123 })')\n{ foo: 123 }\n```", "```js\n> (function () { return 'abc' }())\n'abc'\n```", "```js\n> function () { return 'abc' }()\nSyntaxError: function statement requires a name\n```", "```js\n> function foo() { return 'abc' }()\nSyntaxError: Unexpected token )\n```", "```js\nif (obj !== null) obj.foo();\n\nwhile (x > 0) x--;\n```", "```js\nif (obj !== null) {\n    obj.foo();\n}\n\nwhile (x > 0) {\n    x--;\n}\n```", "```js\nwhile (a > 0) {\n    a--;\n} // no semicolon\n\ndo {\n    a--;\n} while (a > 0);\n```", "```js\nfunction foo() {\n    // ...\n} // no semicolon\n\nvar foo = function () {\n    // ...\n};\n```", "```js\nwhile (processNextItem() > 0);\nwhile (processNextItem() > 0) {}\n```", "```js\n;;;\n```", "```js\nif (a < 0) a = 0\nconsole.log(a)\n```", "```js\nif (a < 0) a = 0;\nconsole.log(a);\n```", "```js\nfunction add(a,b) { return a+b }\n```", "```js\nfunction add(a,b) { return a+b; }\n```", "```js\n// Don't do this\nreturn\n{\n    name: 'John'\n};\n```", "```js\nreturn;\n{\n    name: 'John'\n};\n```", "```js\nfunc()\n[ 'ul', 'ol' ].foreach(function (t) { handleTag(t) })\n```", "```js\nfunc()['ol'].foreach(function (t) { handleTag(t) });\n```", "```js\nvar \u03b5 = 0.0001;\nvar \u0441\u0442\u0440\u043e\u043a\u0430 = '';\nvar _tmp;\nvar $foo2;\n```", "```js\n> var obj = { function: 'abc' };\n> obj.function\n'abc'\n```", "```js\n1..toString()\n1 .toString()  // space before dot\n(1).toString()\n1.0.toString()\n```", "```js\n'use strict';\n```", "```js\nfunction foo() {\n    'use strict';\n    ...\n}\n```", "```js\nfunction sloppyFunc() {\n    sloppyVar = 123;\n}\nsloppyFunc();  // creates global variable `sloppyVar`\nconsole.log(sloppyVar);  // 123\n```", "```js\nfunction strictFunc() {\n    'use strict';\n    strictVar = 123;\n}\nstrictFunc();  // ReferenceError: strictVar is not defined\n```", "```js\nfunction strictFunc() {\n    'use strict';\n    {\n        // SyntaxError:\n        function nested() {\n        }\n    }\n}\n```", "```js\nfunction strictFunc() {\n    'use strict';\n    {\n        // OK:\n        var nested = function () {\n        };\n    }\n}\n```", "```js\nfunction sloppyFunc() {\n    console.log(this === window);  // true\n}\n```", "```js\nfunction strictFunc() {\n    'use strict';\n    console.log(this === undefined);  // true\n}\n```", "```js\nfunction Point(x, y) {\n    'use strict';\n    this.x = x;\n    this.y = y;\n}\n```", "```js\n> var pt = Point(3, 1);\nTypeError: Cannot set property 'x' of undefined\n```", "```js\nvar str = 'abc';\nfunction sloppyFunc() {\n    str.length = 7;  // no effect, silent failure\n    console.log(str.length);  // 3\n}\nfunction strictFunc() {\n    'use strict';\n    str.length = 7; // TypeError: Cannot assign to\n                    // read-only property 'length'\n}\n```", "```js\ndelete foo\n```", "```js\ndelete window.foo;  // browsers\ndelete global.foo;  // Node.js\ndelete this.foo;    // everywhere (in global scope)\n```", "```js\n    > 010 === 8\n    true\n    ```", "```js\n    > function f() { 'use strict'; return 010 }\n    SyntaxError: Octal literals are not allowed in strict mode.\n    ```", "```js\n> var obj = {}; // create an empty object\n> obj.foo = 123;  // write property\n123\n> obj.foo  // read property\n123\n> 'abc'.toUpperCase()  // call method\n'ABC'\n```", "```js\nObject foo = \"abc\";\n```", "```js\n> var foo = null;\n> foo.prop\nTypeError: Cannot read property 'prop' of null\n```", "```js\n> var bar = {};\n> bar.prop\nundefined\n```", "```js\n> '3' * '4'\n12\n```", "```js\n> var obj1 = {};  // an empty object\n> var obj2 = {};  // another empty object\n> obj1 === obj2\nfalse\n\n> var obj3 = obj1;\n> obj3 === obj1\ntrue\n```", "```js\n> var prim1 = 123;\n> var prim2 = 123;\n> prim1 === prim2\ntrue\n```", "```js\n> 3 === 3\ntrue\n> 'abc' === 'abc'\ntrue\n```", "```js\n> var str = 'abc';\n\n> str.length = 1; // try to change property `length`\n> str.length      // \u21d2 no effect\n3\n\n> str.foo = 3; // try to create property `foo`\n> str.foo      // \u21d2 no effect, unknown property\nundefined\n```", "```js\n    {\n        firstName: 'Jane',\n        lastName: 'Doe'\n    }\n    ```", "```js\n    [ 'apple', 'banana', 'cherry' ]\n    ```", "```js\n    /^a+b+$/\n    ```", "```js\n> {} === {}  // two different empty objects\nfalse\n\n> var obj1 = {};\n> var obj2 = obj1;\n> obj1 === obj2\ntrue\n```", "```js\n> var obj = {};\n> obj.foo = 123; // add property `foo`\n> obj.foo\n123\n```", "```js\n> function returnFoo(x) { return x.foo }\n\n> returnFoo(true)\nundefined\n> returnFoo(0)\nundefined\n\n> returnFoo(null)\nTypeError: Cannot read property 'foo' of null\n> returnFoo(undefined)\nTypeError: Cannot read property 'foo' of undefined\n```", "```js\n> var foo;\n> foo\nundefined\n```", "```js\n> function f(x) { return x }\n> f()\nundefined\n```", "```js\n> var obj = {}; // empty object\n> obj.foo\nundefined\n```", "```js\n> function f() {}\n> f()\nundefined\n\n> function g() { return; }\n> g()\nundefined\n```", "```js\n    > Object.getPrototypeOf(Object.prototype)\n    null\n    ```", "```js\n    > /x/.exec('aaa')\n    null\n    ```", "```js\nif (x === null) ...\n```", "```js\nif (x === undefined) ...\n```", "```js\n// Does x have a value?\nif (x !== undefined && x !== null) {\n    ...\n}\n// Is x a non-value?\nif (x === undefined || x === null) {\n    ...\n}\n```", "```js\n// Does x have a value (is it truthy)?\nif (x) {\n    ...\n}\n// Is x falsy?\nif (!x) {\n    ...\n}\n```", "```js\n> Number(null)\n0\n> 5 + null\n5\n```", "```js\n> Number(undefined)\nNaN\n> 5 + undefined\nNaN\n```", "```js\n(function (undefined) {\n    if (x === undefined) ...  // safe now\n}());  // don\u2019t hand in a parameter\n```", "```js\nif (x === void 0)  // always safe\n```", "```js\n    > typeof new String('abc')\n    'object'\n    > new String('abc') === 'abc'\n    false\n    ```", "```js\n    > String(123)\n    '123'\n    ```", "```js\n> typeof 'abc'  // a primitive value\n'string'\n> typeof new String('abc')  // an object\n'object'\n> 'abc' instanceof String  // never true for primitives\nfalse\n> 'abc' === new String('abc')\nfalse\n```", "```js\n> var a = new String('abc');\n> var b = new String('abc');\n> a == b\nfalse\n```", "```js\nnew Boolean(true)\nnew Number(123)\nnew String('abc')\n```", "```js\n> new Boolean(true).valueOf()\ntrue\n> new Number(123).valueOf()\n123\n> new String('abc').valueOf()\n'abc'\n```", "```js\n> Boolean(new Boolean(false))  // does not unwrap\ntrue\n> Number(new Number(123))  // unwraps\n123\n> String(new String('abc'))  // unwraps\n'abc'\n```", "```js\n> 'abc'.charAt === String.prototype.charAt\ntrue\n```", "```js\nString.prototype.sloppyMethod = function () {\n    console.log(typeof this); // object\n    console.log(this instanceof String); // true\n};\n''.sloppyMethod(); // call the above method\n```", "```js\nString.prototype.strictMethod = function () {\n    'use strict';\n    console.log(typeof this); // string\n    console.log(this instanceof String); // false\n};\n''.strictMethod(); // call the above method\n```", "```js\n> '3' * '4'\n12\n```", "```js\n> 3 + ' times'\n'3 times'\n```", "```js\nvar formData = { width: '100' };\n\n// You think formData.width is a number\n// and get unexpected results\nvar w = formData.width;\nvar outer = w + 20;\n\n// You expect outer to be 120, but it\u2019s not\nconsole.log(outer === 120);  // false\nconsole.log(outer === '10020');  // true\n```", "```js\nvar w = Number(formData.width);\n```", "```js\n> String(null)\n'null'\n> String(123.45)\n'123.45'\n> String(false)\n'false'\n```", "```js\n> var obj = { foo: 123 };\n> Object(obj) === obj\ntrue\n\n> Object(undefined)\n{}\n> Object('abc') instanceof String\ntrue\n```", "```js\nToPrimitive(input, PreferredType?)\n```", "```js\n> var empty = {};\n> empty.valueOf() === empty\ntrue\n> empty.toString()\n'[object Object]'\n```", "```js\n> Number({})\nNaN\n```", "```js\n> var n = { valueOf: function () { return 123 } };\n> Number(n)\n123\n> String(n)\n'[object Object]'\n```", "```js\n> var s = { toString: function () { return '7'; } };\n> String(s)\n'7'\n> Number(s)\n7\n```", "```js\n> [1, 2] + [3]\n'1,23'\n> String([1, 2])\n'1,2'\n> String([3])\n'3'\n```", "```js\nx = y = 0;\n```", "```js\nmyvar op= value\nmyvar = myvar op value\n```", "```js\n> var x = 2;\n> x += 3\n5\n> x\n5\n```", "```js\n    x === x  // unless x is NaN\n    +0 === -0\n    NaN !== NaN  // read explanation that follows\n    ```", "```js\n    > var b = {}, c = {};\n    > b === c\n    false\n    > b === b\n    true\n    ```", "```js\n> NaN === NaN\nfalse\n```", "```js\nx !== y\n```", "```js\n!(x === y)\n```", "```js\n    > undefined == null\n    true\n    ```", "```js\nx != y\n```", "```js\n!(x == y)\n```", "```js\n> 2 == true  // 2 === 1\nfalse\n> 2 == false  // 2 === 0\nfalse\n\n> 1 == true  // 1 === 1\ntrue\n> 0 == false  // 0 === 0\ntrue\n```", "```js\n> '' == false   // 0 === 0\ntrue\n> '1' == true  // 1 === 1\ntrue\n> '2' == true  // 2 === 1\nfalse\n> 'abc' == true  // NaN === 1\nfalse\n```", "```js\n> 'abc' == new String('abc')  // 'abc' == 'abc'\ntrue\n> '123' == 123  // 123 === 123\ntrue\n```", "```js\n> '\\n\\t123\\r ' == 123  // usually not OK\ntrue\n> '' == 0  // 0 === 0\ntrue\n```", "```js\n> {} == '[object Object]'\ntrue\n> ['123'] == 123\ntrue\n> [] == 0\ntrue\n```", "```js\n> new Boolean(true) === new Boolean(true)\nfalse\n> new Number(123) === new Number(123)\nfalse\n> new String('abc') == new String('abc')\nfalse\n```", "```js\nif (x != null) ...\n```", "```js\nif (x) ...\n```", "```js\nif (x !== undefined && x !== null) ...\n```", "```js\nif (x == 123) ...\n```", "```js\nif (Number(x) === 123) ...\n```", "```js\n> 'abc' == new String('abc')\ntrue\n```", "```js\n> new String('abc') == new String('abc')\nfalse\n```", "```js\nif (wrapped.valueOf() === 'abc') ...\n```", "```js\n> 7 >= 5\ntrue\n> 'apple' < 'orange'\ntrue\n```", "```js\nx < y\n```", "```js\n> 'foo' + 3\n'foo3'\n> 3 + 'foo'\n'3foo'\n\n> 'Colors: ' + [ 'red', 'green', 'blue' ]\n'Colors: red,green,blue'\n```", "```js\n> 3 + 1\n4\n> 3 + true\n4\n```", "```js\n> 'foo' + (1 + 2)\n'foo3'\n> ('foo' + 1) + 2\n'foo12'\n```", "```js\nvalue1 + value2\n```", "```js\n    x && y, x || y\n    ```", "```js\n    !x\n    ```", "```js\n    x + y, x - y, x * y, x / y, x % y\n    ++x, --x, x++, x--\n    -x, +x\n    ```", "```js\n    ~x\n    x & y, x | y, x ^ y\n    x << y, x >> y, x >>> y\n    ```", "```js\n\u00abcondition\u00bb ? \u00abif_true\u00bb : \u00abif_false\u00bb\n```", "```js\nvar x = (obj ? obj.prop : null);\n```", "```js\n\u00ableft\u00bb , \u00abright\u00bb\n```", "```js\n> 123, 'abc'\n'abc'\n```", "```js\n> var x = 0;\n> var y = (x++, 10);\n\n> x\n1\n> y\n10\n```", "```js\nvoid \u00abexpr\u00bb\n```", "```js\n> void 0\nundefined\n> void (0)\nundefined\n\n> void 4+7  // same as (void 4)+7\nNaN\n> void (4+7)\nundefined\n\n> var x;\n> x = 3\n3\n> void (x = 5)\nundefined\n> x\n5\n```", "```js\nfunction myVoid(expr) {\n    return undefined;\n}\n```", "```js\njavascript:void window.open(\"http://example.com/\")\n```", "```js\ntypeof \u00abvalue\u00bb\n```", "```js\n> typeof undefined\n'undefined'\n> typeof 'abc'\n'string'\n> typeof {}\n'object'\n> typeof []\n'object'\n```", "```js\nfunction isObject(value) {\n    return (value !== null\n       && (typeof value === 'object'\n           || typeof value === 'function'));\n}\n```", "```js\n> isObject(123)\nfalse\n> isObject(null)\nfalse\n> isObject({})\ntrue\n```", "```js\ntypeof x === 'undefined'\n```", "```js\n> var foo;\n> typeof foo === 'undefined'\ntrue\n\n> typeof undeclaredVariable === 'undefined'\ntrue\n```", "```js\n> var foo;\n> foo === undefined\ntrue\n\n> undeclaredVariable === undefined\nReferenceError: undeclaredVariable is not defined\n```", "```js\n\u00abvalue\u00bb instanceof \u00abConstr\u00bb\n```", "```js\n> {} instanceof Object\ntrue\n> [] instanceof Array  // constructor of []\ntrue\n> [] instanceof Object  // super-constructor of []\ntrue\n```", "```js\n> undefined instanceof Object\nfalse\n> null instanceof Object\nfalse\n```", "```js\n> 'abc' instanceof Object\nfalse\n> 123 instanceof Object\nfalse\n```", "```js\n> typeof false\n'boolean'\n> typeof true\n'boolean'\n```", "```js\n> Boolean(undefined)\nfalse\n> Boolean(null)\nfalse\n\n> Boolean(0)\nfalse\n> Boolean(1)\ntrue\n> Boolean(2)\ntrue\n\n> Boolean('')\nfalse\n> Boolean('abc')\ntrue\n> Boolean('false')\ntrue\n```", "```js\nif (x) {\n    // x has a value\n}\n```", "```js\n> Boolean(new Boolean(false))\ntrue\n> Boolean([])\ntrue\n> Boolean({})\ntrue\n```", "```js\n> Number({ valueOf: function () { return 123 } })\n123\n> String({ toString: function () { return 'abc' } })\n'abc'\n```", "```js\n> 'abc' || 123\n'abc'\n> false || 123\n123\n```", "```js\n> true || console.log('Hello')\ntrue\n> false || console.log('Hello')\nHello\nundefined\n```", "```js\n> true && false\nfalse\n> false && 'def'\nfalse\n> '' && 'def'\n''\n> 'abc' && 'def'\n'def'\n```", "```js\n> true || false\ntrue\n> true || 'def'\ntrue\n> 'abc' || 'def'\n'abc'\n> '' || 'def'\n'def'\n```", "```js\ntheValue || defaultValue\n```", "```js\nfunction saveText(text) {\n    text = text || '';\n    ...\n}\n```", "```js\nsetTitle(options.title || 'Untitled');\n```", "```js\nfunction countOccurrences(regex, str) {\n    // Omitted: check that /g is set for `regex`\n    return (str.match(regex) || []).length;\n}\n```", "```js\n> !true\nfalse\n> !43\nfalse\n> !''\ntrue\n> !{}\nfalse\n```", "```js\n> Boolean(0)\nfalse\n> typeof Boolean(false)  // no change\n'boolean'\n```", "```js\n> typeof new Boolean(false)\n'object'\n```", "```js\n> 5.000\n5\n```", "```js\n> 35  // integer\n35\n> 3.141  // floating point\n3.141\n> 0xFF  // hexadecimal\n255\n```", "```js\n> 5e2\n500\n> 5e-2\n0.05\n> 0.5e2\n50\n```", "```js\n123..toString()\n123 .toString()  // space before the dot\n123.0.toString()\n(123).toString()\n```", "```js\n> Number('')\n0\n> Number('123')\n123\n> Number('\\t\\v\\r12.34\\n ')  // ignores leading and trailing whitespace\n12.34\n\n> Number(false)\n0\n> Number(true)\n1\n```", "```js\nparseFloat(str)\n```", "```js\n    > parseFloat(true)  // same as parseFloat('true')\n    NaN\n    > Number(true)\n    1\n\n    > parseFloat(null)  // same as parseFloat('null')\n    NaN\n    > Number(null)\n    0\n    ```", "```js\n    > parseFloat('')\n    NaN\n    > Number('')\n    0\n    ```", "```js\n    > parseFloat('123.45#')\n    123.45\n    > Number('123.45#')\n    NaN\n    ```", "```js\n    > parseFloat('\\t\\v\\r12.34\\n ')\n    12.34\n    ```", "```js\n> typeof NaN\n'number'\n```", "```js\n    > Number('xyz')\n    NaN\n    > Number(undefined)\n    NaN\n    ```", "```js\n    > Math.acos(2)\n    NaN\n    > Math.log(-1)\n    NaN\n    > Math.sqrt(-1)\n    NaN\n    ```", "```js\n    > NaN + 3\n    NaN\n    > 25 / NaN\n    NaN\n    ```", "```js\n> NaN === NaN\nfalse\n```", "```js\n> [ NaN ].indexOf(NaN)\n-1\n```", "```js\n> isNaN(NaN)\ntrue\n> isNaN(33)\nfalse\n```", "```js\n> isNaN('xyz')\ntrue\n```", "```js\nfunction myIsNaN(value) {\n    return typeof value === 'number' && isNaN(value);\n}\n```", "```js\nfunction myIsNaN(value) {\n    return value !== value;\n}\n```", "```js\n> Math.pow(2, 1023)\n8.98846567431158e+307\n> Math.pow(2, 1024)\nInfinity\n```", "```js\n> 3 / 0\nInfinity\n> 3 / -0\n-Infinity\n```", "```js\n> Infinity - Infinity\nNaN\n> Infinity / Infinity\nNaN\n```", "```js\n> Infinity + Infinity\nInfinity\n> Infinity * Infinity\nInfinity\n```", "```js\n> var x = Infinity;\n> x === Infinity\ntrue\n```", "```js\n> isFinite(5)\ntrue\n> isFinite(Infinity)\nfalse\n> isFinite(NaN)\nfalse\n```", "```js\n> -0\n0\n```", "```js\n> (-0).toString()\n'0'\n> (+0).toString()\n'0'\n```", "```js\n> +0 === -0\ntrue\n```", "```js\n> [ -0, +0 ].indexOf(+0)\n0\n> [ +0, -0 ].indexOf(-0)\n0\n```", "```js\n> -0 < +0\nfalse\n> +0 < -0\nfalse\n```", "```js\n> 3 / -0\n-Infinity\n> 3 / +0\nInfinity\n```", "```js\n> Math.pow(-0, -1)\n-Infinity\n> Math.pow(+0, -1)\nInfinity\n```", "```js\n> Math.atan2(-0, -1)\n-3.141592653589793\n> Math.atan2(+0, -1)\n3.141592653589793\n```", "```js\nfunction isNegativeZero(x) {\n    return x === 0 && (1/x < 0);\n}\n```", "```js\n> isNegativeZero(0)\nfalse\n> isNegativeZero(-0)\ntrue\n> isNegativeZero(33)\nfalse\n```", "```js\n> 0.1 * Math.pow(10, 24)\n1.0000000000000001e+23\n```", "```js\n> 0.1 + 0.2\n0.30000000000000004\n```", "```js\n> 0.1 + 1 - 1\n0.10000000000000009\n```", "```js\nvar EPSILON = Math.pow(2, -53);\nfunction epsEqu(x, y) {\n    return Math.abs(x - y) < EPSILON;\n}\n```", "```js\n> 0.1 + 0.2 === 0.3\nfalse\n> epsEqu(0.1+0.2, 0.3)\ntrue\n```", "```js\n> Math.pow(2, 53) - 1  // OK\n9007199254740991\n> Math.pow(2, 53)  // OK\n9007199254740992\n> Math.pow(2, 53) + 1  // can't be represented\n9007199254740992\n> Math.pow(2, 53) + 2  // OK\n9007199254740994\n```", "```js\nNumber.MAX_SAFE_INTEGER = Math.pow(2, 53)-1;\nNumber.MIN_SAFE_INTEGER = -Number.MAX_SAFE_INTEGER;\n```", "```js\nNumber.isSafeInteger = function (n) {\n    return (typeof n === 'number' &&\n        Math.round(n) === n &&\n        Number.MIN_SAFE_INTEGER <= n &&\n        n <= Number.MAX_SAFE_INTEGER);\n}\n```", "```js\n> 9007199254740990 + 3\n9007199254740992\n```", "```js\n> Number.isSafeInteger(9007199254740990)\ntrue\n> Number.isSafeInteger(3)\ntrue\n> Number.isSafeInteger(9007199254740992)\nfalse\n```", "```js\n> 9007199254740995 - 10\n9007199254740986\n```", "```js\n> Number.isSafeInteger(9007199254740995)\nfalse\n> Number.isSafeInteger(10)\ntrue\n> Number.isSafeInteger(9007199254740986)\ntrue\n```", "```js\nisSafeInteger(a) && isSafeInteger(b) && isSafeInteger(a op b)\n```", "```js\n    > Math.floor(3.8)\n    3\n    > Math.floor(-3.8)\n    -4\n    ```", "```js\n    > Math.ceil(3.2)\n    4\n    > Math.ceil(-3.2)\n    -3\n    ```", "```js\n    > Math.round(3.2)\n    3\n    > Math.round(3.5)\n    4\n    > Math.round(3.8)\n    4\n    ```", "```js\n    > Math.round(-3.2)\n    -3\n    > Math.round(-3.5)\n    -3\n    > Math.round(-3.8)\n    -4\n    ```", "```js\n    Math.ceil(x + 0.5)\n    ```", "```js\n> ToInteger(3.2)\n3\n> ToInteger(3.5)\n3\n> ToInteger(3.8)\n3\n> ToInteger(-3.2)\n-3\n> ToInteger(-3.5)\n-3\n> ToInteger(-3.8)\n-3\n```", "```js\nfunction ToInteger(x) {\n    x = Number(x);\n    return x < 0 ? Math.ceil(x) : Math.floor(x);\n}\n```", "```js\n// Convert x to a signed 32-bit integer\nfunction ToInt32(x) {\n    return x | 0;\n}\n```", "```js\n> ToInt32(1.001)\n1\n> ToInt32(1.999)\n1\n> ToInt32(1)\n1\n> ToInt32(-1)\n-1\n> ToInt32(Math.pow(2, 32)+1)\n1\n> ToInt32(Math.pow(2, 32)-1)\n-1\n```", "```js\n// Convert x to a signed 32-bit integer\nfunction ToInt32(x) {\n    return x << 0;\n}\n\n// Convert x to a signed 32-bit integer\nfunction ToInt32(x) {\n    return x >> 0;\n}\n\n// Convert x to an unsigned 32-bit integer\nfunction ToUint32(x) {\n    return x >>> 0;\n}\n```", "```js\n> ToUint32(-1)\n4294967295\n> ToUint32(Math.pow(2, 32)-1)\n4294967295\n> ToUint32(Math.pow(2, 32))\n0\n```", "```js\nparseInt(str, radix?)\n```", "```js\n> parseInt('0xA')\n10\n```", "```js\n> parseInt('0xA', 16)\n10\n> parseInt('A', 16)\n10\n```", "```js\n> parseInt('010')\n8\n> parseInt('0109')  // ignores digits \u2265 8\n8\n```", "```js\n> parseInt('')\nNaN\n> parseInt('zz', 36)\n1295\n> parseInt('   81', 10)\n81\n\n> parseInt('12**', 10)\n12\n> parseInt('12.34', 10)\n12\n> parseInt(12.34, 10)\n12\n```", "```js\n> parseInt(1000000000000000000000.5, 10)\n1\n```", "```js\n> String(1000000000000000000000.5)\n'1e+21'\n```", "```js\n> parseInt(0.0000008, 10)\n8\n> String(0.0000008)\n'8e-7'\n```", "```js\n> 3.1 + 4.3\n7.4\n> 4 + ' messages'\n'4 messages'\n```", "```js\n> 9 % 7\n2\n> -9 % 7\n-2\n```", "```js\n> var x = 3;\n> ++x\n4\n> x\n4\n```", "```js\n> var x = 3;\n> x++\n3\n> x\n4\n```", "```js\n> -5 % 2\n-1\n```", "```js\n// Wrong!\nfunction isOdd(n) {\n    return n % 2 === 1;\n}\nconsole.log(isOdd(-5)); // false\nconsole.log(isOdd(-4)); // false\n```", "```js\nfunction isOdd(n) {\n    return Math.abs(n % 2) === 1;\n}\nconsole.log(isOdd(-5)); // true\nconsole.log(isOdd(-4)); // false\n```", "```js\n1 + ~1 = 0001 + 1110 = 1111\n```", "```js\n1 + -1 = 0001 + 1111 = 0000\n```", "```js\n> ToInt32(4294967295)\n-1\n```", "```js\n    > parseInt('110', 2)\n    6\n    ```", "```js\n    > 6..toString(2)\n    '110'\n    ```", "```js\n> (~parseInt('11111111111111111111111111111111', 2)).toString(2)\n'0'\n```", "```js\n    > (parseInt('11001010', 2) & parseInt('1111', 2)).toString(2)\n    '1010'\n    ```", "```js\n    > (parseInt('11001010', 2) | parseInt('1111', 2)).toString(2)\n    '11001111'\n    ```", "```js\n    > (parseInt('11001010', 2) ^ parseInt('1111', 2)).toString(2)\n    '11000101'\n    ```", "```js\n    x ^^ y === (x && !y) ||(!x && y)\n    ```", "```js\n    > (parseInt('1', 2) << 1).toString(2)\n    '10'\n    ```", "```js\n    > (parseInt('11111111111111111111111111111110', 2) >> 1).toString(2)\n    '-1'\n    ```", "```js\n    > (parseInt('11100', 2) >>> 1).toString(2)\n    '1110'\n    ```", "```js\n> Number('123')\n123\n> typeof Number(3)  // no change\n'number'\n```", "```js\n> typeof new Number(3)\n'object'\n```", "```js\n> Number.MAX_VALUE\n1.7976931348623157e+308\n> Number.MAX_VALUE * 2\nInfinity\n```", "```js\n> Number.MIN_VALUE\n5e-324\n```", "```js\n> Number.NEGATIVE_INFINITY === -Infinity\ntrue\n```", "```js\n> Number.POSITIVE_INFINITY === Infinity\ntrue\n```", "```js\n> 0.0000003.toFixed(10)\n'0.0000003000'\n> 0.0000003.toString()\n'3e-7'\n```", "```js\n> 1234567890123456789012..toFixed()\n'1.2345678901234568e+21'\n> 1234567890123456789012..toString()\n'1.2345678901234568e+21'\n```", "```js\n> 1234..toPrecision(3)\n'1.23e+3'\n\n> 1234..toPrecision(4)\n'1234'\n\n> 1234..toPrecision(5)\n'1234.0'\n\n> 1.234.toPrecision(3)\n'1.23'\n```", "```js\n> 15..toString(2)\n'1111'\n> 65535..toString(16)\n'ffff'\n```", "```js\n> 1234567890..toString(36)\n'kf12oi'\n```", "```js\n> parseInt('kf12oi', 36)\n1234567890\n```", "```js\n> 1234567890123456789012\n1.2345678901234568e+21\n> 123456789012345678901\n123456789012345680000\n```", "```js\n> 0.0000003\n3e-7\n> 0.000003\n0.000003\n```", "```js\n> 1234567890123456789012..toString()\n'1.2345678901234568e+21'\n\n> 1234567890123456789012..toExponential(20)\n'1.23456789012345677414e+21'\n```", "```js\n> 1234..toString()\n'1234'\n\n> 1234..toExponential(5)\n'1.23400e+3'\n\n> 1234..toExponential()\n'1.234e+3'\n```", "```js\n> 0.003.toString()\n'0.003'\n\n> 0.003.toExponential(4)\n'3.0000e-3'\n\n> 0.003.toExponential()\n'3e-3'\n```", "```js\n'He said: \"Hello\"'\n\"He said: \\\"Hello\\\"\"\n\n'Everyone\\'s a winner'\n\"Everyone's a winner\"\n```", "```js\nvar str = 'written \\\nover \\\nmultiple \\\nlines';\nconsole.log(str === 'written over multiple lines'); // true\n```", "```js\nvar str = 'written ' +\n          'over ' +\n          'multiple ' +\n          'lines';\n```", "```js\n    > '\\\"'\n    '\"'\n    > '\\q'\n    'q'\n    ```", "```js\n> '\\x4D'\n'M'\n```", "```js\n> '\\u004D'\n'M'\n> '\\u03C0'\n'\u03c0'\n```", "```js\n> 'abc'.charAt(1)\n'b'\n> 'abc'[1]\n'b'\n```", "```js\n> String(false)\n'false'\n> String(7.35)\n'7.35'\n> String({ first: 'John', last: 'Doe' })\n'[object Object]'\n> String([ 'a', 'b', 'c' ])\n'a,b,c'\n```", "```js\n> console.log(JSON.stringify({ first: 'John', last: 'Doe' }))\n{\"first\":\"John\",\"last\":\"Doe\"}\n> console.log(JSON.stringify([ 'a', 'b', 'c' ]))\n[\"a\",\"b\",\"c\"]\n```", "```js\n> String(false)\n'false'\n> Boolean('false')\ntrue\n```", "```js\n    > 'B' > 'A'  // ok\n    true\n    > 'B' > 'a'  // should be true\n    false\n    ```", "```js\n    > '\u00e4' < 'b'  // should be true\n    false\n    > '\u00e9' < 'f'  // should be true\n    false\n    ```", "```js\n> 'B'.localeCompare('A')\n2\n> 'B'.localeCompare('a')\n2\n\n> '\u00e4'.localeCompare('b')\n-2\n> '\u00e9'.localeCompare('f')\n-2\n```", "```js\n> var str = '';\n> str += 'Say hello ';\n> str += 7;\n> str += ' times fast!';\n> str\n'Say hello 7 times fast!'\n```", "```js\n> var arr = [];\n\n> arr.push('Say hello ');\n> arr.push(7);\n> arr.push(' times fast');\n\n> arr.join('')\n'Say hello 7 times fast'\n```", "```js\n> String(123)\n'123'\n> typeof String('abc')  // no change\n'string'\n```", "```js\n> typeof new String('abc')\n'object'\n```", "```js\n> String.fromCharCode(97, 98, 99)\n'abc'\n```", "```js\n> String.fromCharCode.apply(null, [97, 98, 99])\n'abc'\n```", "```js\n> 'abc'.length\n3\n```", "```js\n> 'abc'.charAt(1)\n'b'\n```", "```js\nstr.charAt(n)\nstr[n]\n```", "```js\n> 'abc'.split('').map(function (x) { return x.charCodeAt(0) })\n[ 97, 98, 99 ]\n```", "```js\n> 'abc'.slice(2)\n'c'\n> 'abc'.slice(1, 2)\n'b'\n> 'abc'.slice(-2)\n'bc'\n```", "```js\n> 'a,  b,c, d'.split(',')  // string\n[ 'a', '  b', 'c', ' d' ]\n> 'a,  b,c, d'.split(/,/)  // simple regular expression\n[ 'a', '  b', 'c', ' d' ]\n> 'a,  b,c, d'.split(/, */)   // more complex regular expression\n[ 'a', 'b', 'c', 'd' ]\n> 'a,  b,c, d'.split(/, */, 2)  // setting a limit\n[ 'a', 'b' ]\n> 'test'.split()  // no separator provided\n[ 'test' ]\n```", "```js\n> 'a,  b  ,  '.split(/(,)/)\n[ 'a', ',', '  b  ', ',', '  ' ]\n> 'a,  b  ,  '.split(/ *(,) */)\n[ 'a', ',', 'b', ',', '' ]\n```", "```js\n> 'abc'.split('')\n[ 'a', 'b', 'c' ]\n```", "```js\nvar str = str.trim();\n```", "```js\n> '\\r\\nabc \\t'.trim()\n'abc'\n```", "```js\n> 'hello'.concat(' ', 'world', '!')\n'hello world!'\n```", "```js\n> 'MJ\u00d6LNIR'.toLowerCase()\n'mj\u00f6lnir'\n```", "```js\n> 'mj\u00f6lnir'.toUpperCase()\n'MJ\u00d6LNIR'\n```", "```js\n> 'aXaX'.indexOf('X')\n1\n> 'aXaX'.indexOf('X', 2)\n3\n```", "```js\nstr.indexOf('abc') >= 0\n/abc/.test(str)\n```", "```js\n> 'aXaX'.lastIndexOf('X')\n3\n> 'aXaX'.lastIndexOf('X', 2)\n1\n```", "```js\n> 'apple'.localeCompare('banana')\n-2\n> 'apple'.localeCompare('apple')\n0\n```", "```js\n> '-yy-xxx-y-'.search(/x+/)\n4\n```", "```js\n> '-abb--aaab-'.match(/(a+)b/)\n[ 'ab',\n  'a',\n  index: 1,\n  input: '-abb--aaab-' ]\n```", "```js\n> '-abb--aaab-'.match(/(a+)b/g)\n[ 'ab', 'aaab' ]\n```", "```js\n> 'iixxxixx'.replace('i', 'o')\n'oixxxixx'\n> 'iixxxixx'.replace(/i/, 'o')\n'oixxxixx'\n> 'iixxxixx'.replace(/i/g, 'o')\n'ooxxxoxx'\n```", "```js\n> 'iixxxixx'.replace(/i+/g, '($&)') // complete match\n'(ii)xxx(i)xx'\n> 'iixxxixx'.replace(/(i+)/g, '($1)') // group 1\n'(ii)xxx(i)xx'\n```", "```js\n> function repl(all) { return '('+all.toUpperCase()+')' }\n> 'axbbyyxaa'.repl(/a+|b+/g, replacement)\n'(A)x(BB)yyx(AA)'\n```", "```js\nvar foo;\nfoo = 'abc';\n```", "```js\nvar foo = 'abc';\n```", "```js\nvar x, y=123, z;\n```", "```js\nwhile (\u00abcondition\u00bb)\n    \u00abstatement\u00bb\n```", "```js\nwhile (x >= 0) x--;\n```", "```js\nwhile (x > 0) {\n    x--;\n}\n```", "```js\nfunction findEvenNumber(arr) {\n    loop: { // label\n        for (var i=0; i<arr.length; i++) {\n            var elem = arr[i];\n            if ((elem % 2) === 0) {\n                console.log('Found: ' + elem);\n                break loop;\n            }\n        }\n        console.log('No even number found.');\n    }\n    console.log('DONE');\n}\n```", "```js\nwhile (\u00abcondition\u00bb)\n    \u00abstatement\u00bb\n```", "```js\nwhile (true) { ... }\n```", "```js\nvar arr = [ 'a', 'b', 'c' ];\nwhile (arr.length > 0) {\n    console.log(arr.shift());\n}\n```", "```js\na\nb\nc\n```", "```js\ndo \u00abstatement\u00bb\nwhile (\u00abcondition\u00bb);\n```", "```js\nvar line;\ndo {\n    line = prompt('Enter a number:');\n} while (!/^[0-9]+$/.test(line));\n```", "```js\nfor (\u27e6\u00abinit\u00bb\u27e7; \u27e6\u00abcondition\u00bb\u27e7; \u27e6\u00abpost_iteration\u00bb\u27e7)\n    \u00abstatement\u00bb\n```", "```js\n\u00abinit\u00bb;\nwhile (\u00abcondition\u00bb) {\n    \u00abstatement\u00bb\n    \u00abpost_iteration\u00bb;\n}\n```", "```js\nvar arr = [ 'a', 'b', 'c' ];\nfor (var i=0; i<arr.length; i++) {\n    console.log(arr[i]);\n}\n```", "```js\nfor (;;) {\n    ...\n}\n```", "```js\nfor (\u00abvariable\u00bb in \u00abobject\u00bb)\n    \u00abstatement\u00bb\n```", "```js\n> var arr = [ 'a', 'b', 'c' ];\n> for (var key in arr) { console.log(key); }\n0\n1\n2\n```", "```js\n> var arr = [ 'a', 'b', 'c' ];\n> arr.foo = true;\n> for (var key in arr) { console.log(key); }\n0\n1\n2\nfoo\n```", "```js\nfunction Person(name) {\n    this.name = name;\n}\nPerson.prototype.describe = function () {\n    return 'Name: '+this.name;\n};\n```", "```js\nvar person = new Person('Jane');\nfor (var key in person) {\n    console.log(key);\n}\n```", "```js\nname\ndescribe\n```", "```js\nfor (var key in person) {\n    if (person.hasOwnProperty(key)) {\n        console.log(key);\n    }\n}\n```", "```js\nname\n```", "```js\nfor (var key in person) {\n    if (Object.prototype.hasOwnProperty.call(person, key)) {\n        console.log(key);\n    }\n}\n```", "```js\nif (\u00abcondition\u00bb)\n    \u00abthen_branch\u00bb\n\u27e6else\n    \u00abelse_branch\u00bb\u27e7\n```", "```js\nif (s1 > s2) {\n    return 1;\n} else if (s1 < s2) {\n    return -1;\n} else {\n    return 0;\n}\n```", "```js\nif (\u00abcond1\u00bb) if (\u00abcond2\u00bb) \u00abstmt1\u00bb else \u00abstmt2\u00bb\n```", "```js\nif (\u00abcond1\u00bb) {\n    if (\u00abcond2\u00bb) {\n        \u00abstmt1\u00bb\n    } else {\n        \u00abstmt2\u00bb\n    }\n}\n```", "```js\nswitch (\u00abexpression\u00bb) {\n    case \u00ablabel1_1\u00bb:\n    case \u00ablabel1_2\u00bb:\n        ...\n        \u00abstatements1\u00bb\n        \u27e6break;\u27e7\n    case \u00ablabel2_1\u00bb:\n    case \u00ablabel2_2\u00bb:\n        ...\n        \u00abstatements2\u00bb\n        \u27e6break;\u27e7\n    ...\n    \u27e6default:\n        \u00abstatements_default\u00bb\n        \u27e6break;\u27e7\u27e7\n}\n```", "```js\nfunction divide(dividend, divisor) {\n    switch (divisor) {\n        case 0:\n            throw 'Division by zero';\n        default:\n            return dividend / divisor;\n    }\n}\n```", "```js\nfunction useFruit(fruit) {\n    switch (fruit) {\n        case 'apple':\n            makeCider();\n            break;\n        case 'grape':\n            makeWine();\n            break;\n        // neither apple nor grape: do nothing\n    }\n}\n```", "```js\nfunction categorizeColor(color) {\n    var result;\n    switch (color) {\n        case 'red':\n        case 'yellow':\n        case 'blue':\n            result = 'Primary color: '+color;\n            break;\n        case 'or':\n        case 'green':\n        case 'violet':\n            result = 'Secondary color: '+color;\n            break;\n        case 'black':\n        case 'white':\n            result = 'Not a color';\n            break;\n        default:\n            throw 'Illegal argument: '+color;\n    }\n    console.log(result);\n}\n```", "```js\nfunction compare(x, y) {\n    switch (true) {\n        case x < y:\n            return -1;\n        case x === y:\n            return 0;\n        default:\n            return 1;\n    }\n}\n```", "```js\nfunction compare(x, y) {\n    if (x < y) {\n        return -1;\n    } else if (x === y) {\n        return 0;\n    } else {\n        return 1;\n    }\n}\n```", "```js\nwith (\u00abobject\u00bb)\n    \u00abstatement\u00bb\n```", "```js\nvar obj = { first: 'John' };\nwith (obj) {\n    console.log('Hello '+first); // Hello John\n}\n```", "```js\nfoo.bar.baz.bla   = 123;\nfoo.bar.baz.yadda = 'abc';\n```", "```js\nwith (foo.bar.baz) {\n    bla   = 123;\n    yadda = 'abc';\n}\n```", "```js\n> function foo() { 'use strict'; with ({}); }\nSyntaxError: strict mode code may not contain 'with' statements\n```", "```js\n// Don't do this:\nwith (foo.bar.baz) {\n    console.log('Hello '+first+' '+last);\n}\n```", "```js\nvar b = foo.bar.baz;\nconsole.log('Hello '+b.first+' '+b.last);\n```", "```js\n(function () {\n    var b = foo.bar.baz;\n    console.log('Hello '+b.first+' '+b.last);\n}());\n```", "```js\n(function (b) {\n    console.log('Hello '+b.first+' '+b.last);\n}(foo.bar.baz));\n```", "```js\nfunction logit(msg, opts) {\n    with (opts) {\n        console.log('msg: '+msg); // (1)\n    }\n}\n```", "```js\n> logit('hello', {})  // parameter msg\nmsg: hello\n> logit('hello', { msg: 'world' })  // property opts.msg\nmsg: world\n```", "```js\nfunction foo(someArray) {\n    var values = ...;  // (1)\n    with (someArray) {\n        values.someMethod(...);  // (2)\n        ...\n    }\n}\nfoo(myData);  // (3)\n```", "```js\nArray.prototype.values = function () {\n    ...\n};\n```", "```js\ndebugger;\n```", "```js\nfunction processFiles() {\n    var fileNames = collectFileNames();\n    var entries = extractAllEntries(fileNames);\n    processEntries(entries);\n}\nfunction extractAllEntries(fileNames) {\n    var allEntries = new Entries();\n    fileNames.forEach(function (fileName) {\n        var entry = extractOneEntry(fileName);\n        allEntries.add(entry);  // (1)\n    });\n}\nfunction extractOneEntry(fileName) {\n    var file = openFile(fileName);  // (2)\n    ...\n}\n...\n```", "```js\nfunction extractAllEntries(fileNames) {\n    var allEntries = new Entries();\n    fileNames.forEach(function (fileName) {\n        try {\n            var entry = extractOneEntry(fileName);\n            allEntries.add(entry);\n        } catch (exception) {  // (2)\n            errorLog.log('Error in '+fileName, exception);\n        }\n    });\n}\nfunction extractOneEntry(fileName) {\n    var file = openFile(fileName);\n    ...\n}\nfunction openFile(fileName) {\n    if (!exists(fileName)) {\n        throw new Error('Could not find file '+fileName); // (1)\n    }\n    ...\n}\n```", "```js\n    processFile()\n        extractAllEntries(...)\n            fileNames.forEach(...)\n                function (fileName) { ... }\n                    try { ... } catch (exception) { ... }\n                        extractOneEntry(...)\n                            openFile(...)\n```", "```js\nthrow \u00abvalue\u00bb;\n```", "```js\n// Don't do this\nif (somethingBadHappened) {\n    throw 'Something bad happened';\n}\n```", "```js\nif (somethingBadHappened) {\n    throw new Error('Something bad happened');\n}\n```", "```js\ntry {\n    \u00abtry_statements\u00bb\n}\n\u27e6catch (\u00abexceptionVar\u00bb) {\n   \u00abcatch_statements\u00bb\n}\u27e7\n\u27e6finally {\n   \u00abfinally_statements\u00bb\n}\u27e7\n```", "```js\n    var resource = allocateResource();\n    try {\n        ...\n    } finally {\n        resource.deallocate();\n    }\n    ```", "```js\nfunction throwIt(exception) {\n    try {\n        throw exception;\n    } catch (e) {\n        console.log('Caught: '+e);\n    }\n}\n```", "```js\n> throwIt(3);\nCaught: 3\n> throwIt('hello');\nCaught: hello\n> throwIt(new Error('An error happened'));\nCaught: Error: An error happened\n```", "```js\nfunction throwsError() {\n    throw new Error('Sorry...');\n}\nfunction cleansUp() {\n    try {\n        throwsError();\n    } finally {\n        console.log('Performing clean-up');\n    }\n}\n```", "```js\n> cleansUp();\nPerforming clean-up\nError: Sorry...\n```", "```js\nfunction idLog(x) {\n    try {\n        console.log(x);\n        return 'result';\n    } finally {\n        console.log(\"FINALLY\");\n    }\n}\n```", "```js\n> idLog('arg')\narg\nFINALLY\n'result'\n```", "```js\nvar count = 0;\nfunction countUp() {\n    try {\n        return count;\n    } finally {\n        count++;  // (1)\n    }\n}\n```", "```js\n> countUp()\n0\n> count\n1\n```", "```js\n    > new Array(-1)\n    RangeError: Invalid array length\n    ```", "```js\n    > unknownVariable\n    ReferenceError: unknownVariable is not defined\n    ```", "```js\n    > eval('3 +')\n    SyntaxError: Unexpected end of file\n    ```", "```js\n    > undefined.foo\n    TypeError: Cannot read property 'foo' of undefined\n    ```", "```js\n    > decodeURI('%2')\n    URIError: URI malformed\n    ```", "```js\nfunction catchit() {\n    try {\n        throwit();\n    } catch(e) {\n        console.log(e.stack); // print stack trace\n    }\n}\nfunction throwit() {\n    throw new Error('');\n}\n```", "```js\n> catchit()\nError\n    at throwit (~/examples/throwcatch.js:9:11)\n    at catchit (~/examples/throwcatch.js:3:9)\n    at repl:1:5\n```", "```js\nfunction id(x) {\n    return x;\n}\n```", "```js\n> id('hello')\n'hello'\n```", "```js\n> function f() { }\n> f()\nundefined\n```", "```js\nid('hello')\n```", "```js\nnew Date()\n```", "```js\nobj.method()\n```", "```js\n    function foo(param1, param2) {\n        ...\n    }\n    ```", "```js\n    foo(3, 7);\n    ```", "```js\nfunction id(x) {\n    return x;\n}\nconsole.log(id instanceof Function); // true\n```", "```js\nvar add = function (x, y) { return x + y };\nconsole.log(add(2, 3)); // 5\n```", "```js\nvar fac = function me(n) {\n    if (n > 0) {\n        return n * me(n-1);\n    } else {\n        return 1;\n    }\n};\nconsole.log(fac(3)); // 6\n```", "```js\nvar repeat = function me(n, str) {\n    return n > 0 ? str + me(n-1, str) : '';\n};\nconsole.log(repeat(3, 'Yeah')); // YeahYeahYeah\nconsole.log(me); // ReferenceError: me is not defined\n```", "```js\nfunction add(x, y) {\n    return x + y;\n}\n```", "```js\nvar add = function (x, y) {\n    return x + y;\n};\n```", "```js\nvar add = new Function('x', 'y', 'return x + y');\n```", "```js\nfoo();\nfunction foo() {  // this function is hoisted\n    ...\n}\n```", "```js\nfunction foo() {\n    ...\n}\nfoo();\n```", "```js\nfoo();  // TypeError: undefined is not a function\nvar foo = function foo() {\n    ...\n};\n```", "```js\nvar foo;\nfoo();  // TypeError: undefined is not a function\nfoo = function foo() {\n    ...\n};\n```", "```js\n> function f1() {}\n> f1.name\n'f1'\n```", "```js\n> var f2 = function () {};\n> f2.name\n''\n```", "```js\n> var f3 = function myName() {};\n> f3.name\n'myName'\n```", "```js\nfunction id(x) {\n    return x;\n}\n```", "```js\nvar id = function (x) {\n    return x;\n};\n```", "```js\nfunc(arg1, arg2, arg3)\nfunc.apply(null, [arg1, arg2, arg3])\n```", "```js\n> Math.max(17, 33, 2)\n33\n> Math.max.apply(null, [17, 33, 2])\n33\n```", "```js\nfunction add(x, y) {\n    return x + y;\n}\nvar plus1 = add.bind(null, 1);\nconsole.log(plus1(5));  // 6\n```", "```js\nfunction plus1(y) {\n    return add(1, y);\n}\n```", "```js\nfunction logArgs() {\n    for (var i=0; i<arguments.length; i++) {\n        console.log(i+'. '+arguments[i]);\n    }\n}\n```", "```js\n> logArgs('hello', 'world')\n0\\. hello\n1\\. world\n```", "```js\n    > function f() { return 1 in arguments }\n    > f('a')\n    false\n    > f('a', 'b')\n    true\n    ```", "```js\n    > function g() { return arguments.hasOwnProperty(1) }\n    > g('a', 'b')\n    true\n    ```", "```js\n    function sloppyFunc(param) {\n        param = 'changed';\n        return arguments[0];\n    }\n    console.log(sloppyFunc('value'));  // changed\n    ```", "```js\n    function strictFunc(param) {\n        'use strict';\n        param = 'changed';\n        return arguments[0];\n    }\n    console.log(strictFunc('value'));  // value\n    ```", "```js\nfunction foo(mandatory, optional) {\n    if (mandatory === undefined) {\n        throw new Error('Missing parameter: mandatory');\n    }\n}\n```", "```js\nif (!mandatory) {\n    throw new Error('Missing parameter: mandatory');\n}\n```", "```js\nif (arguments.length < 1) {\n    throw new Error('You need to provide at least 1 argument');\n}\n```", "```js\nfunction bar(arg1, arg2, optional) {\n    if (optional === undefined) {\n        optional = 'default value';\n    }\n}\n```", "```js\nif (!optional) {\n    optional = 'default value';\n}\n```", "```js\n// Or operator: use left operand if it isn't falsy\noptional = optional || 'default value';\n```", "```js\nif (arguments.length < 3) {\n    optional = 'default value';\n}\n```", "```js\nfunction incRef(numberRef) {\n    numberRef[0]++;\n}\nvar n = [7];\nincRef(n);\nconsole.log(n[0]);  // 8\n```", "```js\n> [ 1, 2, 3 ].map(function (x) { return x * x })\n[ 1, 4, 9 ]\n```", "```js\n> parseInt('1024')\n1024\n```", "```js\n> [ '1', '2', '3' ].map(parseInt)\n[ 1, NaN, NaN ]\n```", "```js\nfunction (element, index, array)\n```", "```js\nparseInt(string, radix?)\n```", "```js\n> parseInt('1', 0)\n1\n> parseInt('2', 1)\nNaN\n> parseInt('3', 2)\nNaN\n```", "```js\n> ['1', '2', '3'].map(function (x)\u00a0{ return parseInt(x, 10) })\n[ 1, 2, 3 ]\n```", "```js\nselectEntries(3, 20, 2);\n```", "```js\nselectEntries(start=3, end=20, step=2)  # Python syntax\n```", "```js\n# Python syntax\nselectEntries(step=2)\nselectEntries(end=20, start=3)\nselectEntries()\n```", "```js\nselectEntries({ start: 3, end: 20, step: 2 });\n```", "```js\nselectEntries({ step: 2 });\nselectEntries({ end: 20, start: 3 });\nselectEntries();\n```", "```js\nfunction selectEntries(options) {\n    options = options || {};\n    var start = options.start || 0;\n    var end = options.end || getDbLength();\n    var step = options.step || 1;\n    ...\n}\n```", "```js\nselectEntries(posArg1, posArg2, { namedArg1: 7, namedArg2: true });\n```", "```js\nvar foo;\nfoo = 3; // OK, has been declared\nbar = 5; // not OK, an undeclared variable\n```", "```js\nvar foo = 3;\n```", "```js\n> var x;\n> x\nundefined\n```", "```js\nfunction f() {\n    function g() {\n    }\n}\n```", "```js\nfunction g() {\n}\nfunction f() {\n    g();\n}\n```", "```js\nfunction foo() {\n    var x;\n}\n```", "```js\nfunction foo(arg) {\n    function bar() {\n        console.log('arg: '+arg);\n    }\n    bar();\n}\nconsole.log(foo('hello')); // arg: hello\n```", "```js\nvar x = \"global\";\nfunction f() {\n    var x = \"local\";\n    console.log(x); // local\n}\nf();\nconsole.log(x); // global\n```", "```js\npublic static void main(String[] args) {\n    { // block starts\n        int foo = 4;\n    } // block ends\n    System.out.println(foo); // Error: cannot find symbol\n}\n```", "```js\nfunction main() {\n    { // block starts\n        var foo = 4;\n    } // block ends\n    console.log(foo); // 4\n}\n```", "```js\nfunction f() {\n    console.log(bar);  // undefined\n    var bar = 'abc';\n    console.log(bar);  // abc\n}\n```", "```js\nfunction f() {\n    var bar;\n    console.log(bar);  // undefined\n    bar = 'abc';\n    console.log(bar);  // abc\n}\n```", "```js\n> var x = 123;\n> var x;\n> x\n123\n```", "```js\n> function sloppyFunc() { x = 123 }\n> sloppyFunc()\n> x\n123\n```", "```js\n> function strictFunc() { 'use strict'; x = 123 }\n> strictFunc()\nReferenceError: x is not defined\n```", "```js\nfunction f() {\n    if (condition) {\n        var tmp = ...;\n        ...\n    }\n    // tmp still exists here\n    // => not what we want\n}\n```", "```js\nfunction f() {\n    if (condition) {\n        (function () {  // open block\n            var tmp = ...;\n            ...\n        }());  // close block\n    }\n}\n```", "```js\n(function () { // open IIFE\n    // inside IIFE\n}()); // close IIFE\n```", "```js\n(function () {\n    ...\n}()) // no semicolon\n(function () {\n    ...\n}());\n```", "```js\n!function () { // open IIFE\n    // inside IIFE\n}(); // close IIFE\n```", "```js\nvoid function () { // open IIFE\n    // inside IIFE\n}(); // close IIFE\n```", "```js\nvar File = function () { // open IIFE\n    var UNTITLED = 'Untitled';\n    function File(name) {\n        this.name = name || UNTITLED;\n    }\n    return File;\n}(); // close IIFE\n```", "```js\nvar x = 23;\n(function (twice) {\n    console.log(twice);\n}(x * 2));\n```", "```js\nvar x = 23;\n(function () {\n    var twice = x * 2;\n    console.log(twice);\n}());\n```", "```js\nvar setValue = function () {\n    var prevValue;\n    return function (value) { // define setValue\n        if (value !== prevValue) {\n            console.log('Changed: ' + value);\n            prevValue = value;\n        }\n    };\n}();\n```", "```js\n// here we are in global scope\nvar globalVariable = 'xyz';\nfunction f() {\n    var localVariable = true;\n    function g() {\n        var anotherLocalVariable = 123;\n\n        // All variables of surround scopes are accessible\n        localVariable = false;\n        globalVariable = 'abc';\n    }\n}\n// here we are again in global scope\n```", "```js\n<!-- Don\u2019t do this -->\n<script>\n    // Global scope\n    var tmp = generateData();\n    processData(tmp);\n    persistData(tmp);\n</script>\n```", "```js\n<script>\n    (function () {  // open IIFE\n        // Local scope\n        var tmp = generateData();\n        processData(tmp);\n        persistData(tmp);\n    }());  // close IIFE\n</script>\n```", "```js\n> var foo = 'hello';\n> this.foo  // read global variable\n'hello'\n\n> this.bar = 'world';  // create global variable\n> bar\n'world'\n```", "```js\n> getAllPropertyNames(window).sort().slice(0, 5)\n[ 'AnalyserNode', 'Array', 'ArrayBuffer', 'Attr', 'Audio' ]\n```", "```js\n(function (glob) {\n    // glob points to global object\n}(typeof window !== 'undefined' ? window : global));\n```", "```js\nvar foo = 123;\n(function () {\n    console.log(window.foo);  // 123\n}());\n```", "```js\n(function () {\n    var foo = 123;\n    console.log(window.foo);  // undefined\n}());\n```", "```js\nvar g_foo = 123;\n(function () {\n    console.log(g_foo);\n}());\n```", "```js\nwindow.isNaN(...)  // no\nisNaN(...)  // yes\n```", "```js\nif (window.someVariable) { ... }\n```", "```js\n// Don\u2019t do this\nif (someVariable) { ... }\n```", "```js\nif (window.someVariable !== undefined) { ... }\nif ('someVariable' in window) { ... }\n```", "```js\nif (typeof someVariable !== 'undefined') { ... }\n```", "```js\nif (!window.someApiFunction) {\n    window.someApiFunction = ...;\n}\n```", "```js\nfunction fac(n) {\n    if (n <= 1) {\n        return 1;\n    }\n    return n * fac(n - 1);\n}\n```", "```js\nfunction doNTimes(n, action) {\n    function doNTimesRec(x) {\n        if (x >= 1) {\n            action();  // (1)\n            doNTimesRec(x-1);\n        }\n    }\n    doNTimesRec(n);\n}\n```", "```js\nfunction myFunction(myParam) {\n    var myVar = 123;\n    return myFloat;\n}\nvar myFloat = 1.3;\n// Step 1\nmyFunction('abc');  // Step 2\n```", "```js\nfunction createInc(startValue) {\n    return function (step) {\n        startValue += step;\n        return startValue;\n    };\n}\n```", "```js\n> var inc = createInc(5);\n> inc(1)\n6\n> inc(2)\n8\n```", "```js\nfunction f() {\n    var result = [];\n    for (var i=0; i<3; i++) {\n        var func = function () {\n            return i;\n        };\n        result.push(func);\n    }\n    return result;\n}\nconsole.log(f()[1]());  // 3\n```", "```js\nfunction f() {\n    var result = [];\n    for (var i=0; i<3; i++) {\n        (function () { // step 1: IIFE\n            var pos = i; // step 2: copy\n            var func = function () {\n                return pos;\n            };\n            result.push(func);\n        }());\n    }\n    return result;\n}\nconsole.log(f()[1]());  // 1\n```", "```js\nvar jane = {\n    name: 'Jane',\n\n    describe: function () {\n        return 'Person named '+this.name;  // (1)\n    },  // (2)\n};\n```", "```js\nvar jane = {\n    name: 'Jane',\n\n    describe: function () {\n        return 'Person named '+this.name;\n    }\n};\n```", "```js\n> jane.name  // get property `name`\n'Jane'\n> jane.describe  // get property `describe`\n[Function]\n```", "```js\n> jane.unknownProperty\nundefined\n```", "```js\n> jane.describe()  // call method `describe`\n'Person named Jane'\n```", "```js\n> jane.name = 'John';  // set property `name`\n> jane.describe()\n'Person named John'\n```", "```js\n> var obj = { hello: 'world' };\n> delete obj.hello\ntrue\n> obj.hello\nundefined\n```", "```js\n> var obj = { foo: 'a', bar: 'b' };\n\n> obj.foo = undefined;\n> Object.keys(obj)\n[ 'foo', 'bar' ]\n```", "```js\n> delete obj.foo\ntrue\n> Object.keys(obj)\n[ 'bar' ]\n```", "```js\nvar obj = {};\nObject.defineProperty(obj, 'canBeDeleted', {\n    value: 123,\n    configurable: true\n});\nObject.defineProperty(obj, 'cannotBeDeleted', {\n    value: 456,\n    configurable: false\n});\n```", "```js\n> delete obj.cannotBeDeleted\nfalse\n```", "```js\n> delete obj.doesNotExist\ntrue\n> delete obj.canBeDeleted\ntrue\n```", "```js\n> delete obj.toString\ntrue\n> obj.toString // still there\n[Function: toString]\n```", "```js\n> var obj = { var: 'a', function: 'b' };\n> obj.var\n'a'\n> obj.function\n'b'\n```", "```js\n> var obj = { 0.7: 'abc' };\n> Object.keys(obj)\n[ '0.7' ]\n> obj['0.7']\n'abc'\n```", "```js\n> var obj = { 'not an identifier': 123 };\n> Object.keys(obj)\n[ 'not an identifier' ]\n> obj['not an identifier']\n123\n```", "```js\n> var obj = { someProperty: 'abc' };\n\n> obj['some' + 'Property']\n'abc'\n\n> var propKey = 'someProperty';\n> obj[propKey]\n'abc'\n```", "```js\n> var obj = { 'not an identifier': 123 };\n> obj['not an identifier']\n123\n```", "```js\n> var obj = { '6': 'bar' };\n> obj[3+3]  // key: the string '6'\n'bar'\n```", "```js\n> var obj = { myMethod: function () { return true } };\n> obj['myMethod']()\ntrue\n```", "```js\n> var obj = {};\n> obj['anotherProperty'] = 'def';\n> obj.anotherProperty\n'def'\n```", "```js\n> var obj = { 'not an identifier': 1, prop: 2 };\n> Object.keys(obj)\n[ 'not an identifier', 'prop' ]\n> delete obj['not an identifier']\ntrue\n> Object.keys(obj)\n[ 'prop' ]\n```", "```js\n> Object(null) instanceof Object\ntrue\n\n> Object(false) instanceof Boolean\ntrue\n\n> var obj = {};\n> Object(obj) === obj\ntrue\n```", "```js\nfunction isObject(value) {\n    return value === Object(value);\n}\n```", "```js\n> var obj = {};\n> new Object(obj) === obj\ntrue\n\n> new Object(123) instanceof Number\ntrue\n```", "```js\nvar obj = new Object(); // avoid\nvar obj = {}; // prefer\n```", "```js\n> function returnThisSloppy() { return this }\n> returnThisSloppy() === window\ntrue\n```", "```js\n> function returnThisStrict() { 'use strict'; return this }\n> returnThisStrict() === undefined\ntrue\n```", "```js\n> var obj = { method: returnThisStrict };\n> obj.method() === obj\ntrue\n```", "```js\nvar jane = {\n    name: 'Jane',\n    sayHelloTo: function (otherName) {\n        'use strict';\n        console.log(this.name+' says hello to '+otherName);\n    }\n};\n```", "```js\njane.sayHelloTo('Tarzan');\n\njane.sayHelloTo.call(jane, 'Tarzan');\n\nvar func = jane.sayHelloTo;\nfunc.call(jane, 'Tarzan');\n```", "```js\njane.sayHelloTo('Tarzan');\n\njane.sayHelloTo.apply(jane, ['Tarzan']);\n\nvar func = jane.sayHelloTo;\nfunc.apply(jane, ['Tarzan']);\n```", "```js\nfunction func() {\n    console.log('this: '+this);\n    console.log('arguments: '+Array.prototype.slice.call(arguments));\n}\nvar bound = func.bind('abc', 1, 2);\n```", "```js\n> bound(3)\nthis: abc\narguments: 1,2,3\n```", "```js\njane.sayHelloTo('Tarzan');\n\nvar func1 = jane.sayHelloTo.bind(jane);\nfunc1('Tarzan');\n\nvar func2 = jane.sayHelloTo.bind(jane, 'Tarzan');\nfunc2();\n```", "```js\nMath.max(...[13, 7, 30])\nMath.max(13, 7, 30)\n```", "```js\n> Math.max.apply(null, [13, 7, 30])\n30\n```", "```js\nnew Date(...[2011, 11, 24]) // Christmas Eve 2011\n```", "```js\nnew (Date.bind(null, 2011, 11, 24))\n```", "```js\nnew (Function.prototype.bind.apply(\n         Date, [null, 2011, 11, 24]))\n```", "```js\nvar arr = [2011, 11, 24];\nnew (Function.prototype.bind.apply(\n         Date, [null].concat(arr)))\n```", "```js\nif (!Function.prototype.construct) {\n    Function.prototype.construct = function(argArray) {\n        if (! Array.isArray(argArray)) {\n            throw new TypeError(\"Argument must be an array\");\n        }\n        var constr = this;\n        var nullaryFunc = Function.prototype.bind.apply(\n            constr, [null].concat(argArray));\n        return new nullaryFunc();\n    };\n}\n```", "```js\n> Date.construct([2011, 11, 24])\nSat Dec 24 2011 00:00:00 GMT+0100 (CET)\n```", "```js\nFunction.prototype.construct = function(argArray) {\n    var constr = this;\n    var inst = Object.create(constr.prototype);\n    var result = constr.apply(inst, argArray); // (1)\n\n    // Check: did the constructor return an object\n    // and prevent `this` from being the result?\n    return result ? result : inst;\n};\n```", "```js\nvar counter = {\n    count: 0,\n    inc: function () {\n        this.count++;\n    }\n}\n```", "```js\n> var func = counter.inc;\n> func()\n> counter.count  // didn\u2019t work\n0\n```", "```js\n> count  // global variable\nNaN\n```", "```js\n> counter.inc = function () { 'use strict'; this.count++ };\n> var func2 = counter.inc;\n> func2()\nTypeError: Cannot read property 'count' of undefined\n```", "```js\n> var func3 = counter.inc.bind(counter);\n> func3()\n> counter.count  // it worked!\n1\n```", "```js\nfunction callIt(callback) {\n    callback();\n}\n```", "```js\n> callIt(counter.inc)\nTypeError: Cannot read property 'count' of undefined\n```", "```js\n> callIt(counter.inc.bind(counter))\n> counter.count  // one more than before\n2\n```", "```js\nvar obj = {\n    name: 'Jane',\n    friends: [ 'Tarzan', 'Cheeta' ],\n    loop: function () {\n        'use strict';\n        this.friends.forEach(\n            function (friend) {  // (1)\n                console.log(this.name+' knows '+friend);  // (2)\n            }\n        );\n    }\n};\n```", "```js\n> obj.loop();\nTypeError: Cannot read property 'name' of undefined\n```", "```js\nloop: function () {\n    'use strict';\n    var that = this;\n    this.friends.forEach(function (friend) {\n        console.log(that.name+' knows '+friend);\n    });\n}\n```", "```js\n> obj.loop();\nJane knows Tarzan\nJane knows Cheeta\n```", "```js\nloop: function () {\n    'use strict';\n    this.friends.forEach(function (friend) {\n        console.log(this.name+' knows '+friend);\n    }.bind(this));  // (1)\n}\n```", "```js\nloop: function () {\n    'use strict';\n    this.friends.forEach(function (friend) {\n        console.log(this.name+' knows '+friend);\n    }, this);\n}\n```", "```js\nvar proto = {\n    describe: function () {\n        return 'name: '+this.name;\n    }\n};\nvar obj = {\n    [[Prototype]]: proto,\n    name: 'obj'\n};\n```", "```js\n> obj.describe\n[Function]\n```", "```js\n> obj.describe()\n'name: obj'\n```", "```js\n> obj.describe = function () { return 'overridden' };\n> obj.describe()\n'overridden'\n```", "```js\nvar jane = {\n    name: 'Jane',\n    describe: function () {\n        return 'Person named '+this.name;\n    }\n};\nvar tarzan = {\n    name: 'Tarzan',\n    describe: function () {\n        return 'Person named '+this.name;\n    }\n};\n```", "```js\nvar PersonProto = {\n    describe: function () {\n        return 'Person named '+this.name;\n    }\n};\nvar jane = {\n    [[Prototype]]: PersonProto,\n    name: 'Jane'\n};\nvar tarzan = {\n    [[Prototype]]: PersonProto,\n    name: 'Tarzan'\n};\n```", "```js\n> jane.describe()\nPerson named Jane\n> tarzan.describe()\nPerson named Tarzan\n```", "```js\nObject.create(proto, propDescObj?)\n```", "```js\nvar PersonProto = {\n    describe: function () {\n        return 'Person named '+this.name;\n    }\n};\nvar jane = Object.create(PersonProto, {\n    name: { value: 'Jane', writable: true }\n});\n```", "```js\n> jane.describe()\n'Person named Jane'\n```", "```js\nvar jane = Object.create(PersonProto);\njane.value = 'Jane';\n```", "```js\nObject.getPrototypeOf(obj)\n```", "```js\n> Object.getPrototypeOf(jane) === PersonProto\ntrue\n```", "```js\nObject.prototype.isPrototypeOf(obj)\n```", "```js\n> var A = {};\n> var B = Object.create(A);\n> var C = Object.create(B);\n> A.isPrototypeOf(C)\ntrue\n> C.isPrototypeOf(A)\nfalse\n```", "```js\nfunction getDefiningObject(obj, propKey) {\n    obj = Object(obj); // make sure it\u2019s an object\n    while (obj && !{}.hasOwnProperty.call(obj, propKey)) {\n        obj = Object.getPrototypeOf(obj);\n        // obj is null if we have reached the end\n    }\n    return obj;\n}\n```", "```js\n> var obj = {};\n\n> obj.__proto__ === Object.prototype\ntrue\n\n> obj.__proto__ = Array.prototype\n> Object.getPrototypeOf(obj) === Array.prototype\ntrue\n```", "```js\n    Object.getPrototypeOf({ __proto__: null }) === null\n    ```", "```js\nvar proto = { foo: 'a' };\nvar obj = Object.create(proto);\n```", "```js\n> obj.foo\n'a'\n> obj.hasOwnProperty('foo')\nfalse\n```", "```js\n> obj.foo = 'b';\n> obj.foo\n'b'\n```", "```js\n> obj.hasOwnProperty('foo')\ntrue\n> proto.foo\n'a'\n```", "```js\nvar proto = { foo: 'a' };\nvar obj = Object.create(proto);\n```", "```js\n> delete obj.foo\ntrue\n> obj.foo\n'a'\n```", "```js\n> delete getDefiningObject(obj, 'foo').foo;\ntrue\n> obj.foo\nundefined\n```", "```js\nfor (\u00abvariable\u00bb in \u00abobject\u00bb)\n    \u00abstatement\u00bb\n```", "```js\nfunction getAllPropertyNames(obj) {\n    var result = [];\n    while (obj) {\n        // Add the own property names of `obj` to `result`\n        Array.prototype.push.apply(result, Object.getOwnPropertyNames(obj));\n        obj = Object.getPrototypeOf(obj);\n    }\n    return result;\n}\n```", "```js\n> var obj = { hasOwnProperty: 1, foo: 2 };\n> obj.hasOwnProperty('foo')  // unsafe\nTypeError: Property 'hasOwnProperty' is not a function\n```", "```js\n> Object.prototype.hasOwnProperty.call(obj, 'foo')  // safe\ntrue\n> {}.hasOwnProperty.call(obj, 'foo')  // shorter\ntrue\n```", "```js\nvar proto = Object.defineProperties({}, {\n    protoEnumTrue: { value: 1, enumerable: true },\n    protoEnumFalse: { value: 2, enumerable: false }\n});\nvar obj = Object.create(proto, {\n    objEnumTrue: { value: 1, enumerable: true },\n    objEnumFalse: { value: 2, enumerable: false }\n});\n```", "```js\n> Object.getPrototypeOf({}) === Object.prototype\ntrue\n```", "```js\n> for (var x in obj) console.log(x);\nobjEnumTrue\nprotoEnumTrue\n```", "```js\n> Object.keys(obj)\n[ 'objEnumTrue' ]\n```", "```js\n> Object.getOwnPropertyNames(obj)\n[ 'objEnumTrue', 'objEnumFalse' ]\n```", "```js\n> 'toString' in obj\ntrue\n> obj.hasOwnProperty('toString')\nfalse\n> obj.hasOwnProperty('objEnumFalse')\ntrue\n```", "```js\nObject.keys(obj).length\n```", "```js\n    for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            console.log(key);\n        }\n    }\n    ```", "```js\n    var obj = { first: 'John', last: 'Doe' };\n    // Visit non-inherited enumerable keys\n    Object.keys(obj).forEach(function (key) {\n        console.log(key);\n    });\n    ```", "```js\nvar obj = {\n    get foo() {\n        return 'getter';\n    },\n    set foo(value) {\n        console.log('setter: '+value);\n    }\n};\n```", "```js\n> obj.foo = 'bla';\nsetter: bla\n> obj.foo\n'getter'\n```", "```js\nvar obj = Object.create(\n    Object.prototype, {  // object with property descriptors\n        foo: {  // property descriptor\n            get: function () {\n                return 'getter';\n            },\n            set: function (value) {\n                console.log('setter: '+value);\n            }\n        }\n    }\n);\n```", "```js\n> var proto = { get foo() { return 'hello' } };\n> var obj = Object.create(proto);\n\n> obj.foo\n'hello'\n```", "```js\n{\n    value: 123,\n    writable: false,\n    enumerable: true,\n    configurable: false\n}\n```", "```js\n{\n    get: function () { return 123 },\n    enumerable: true,\n    configurable: false\n}\n```", "```js\n    > var obj = {};\n    > Object.defineProperty(obj, 'foo', { configurable: true });\n    > Object.getOwnPropertyDescriptor(obj, 'foo')\n    { value: undefined,\n      writable: false,\n      enumerable: false,\n      configurable: true }\n    ```", "```js\n    > Object.defineProperty(obj, 'foo', { writable: true });\n    > Object.getOwnPropertyDescriptor(obj, 'foo')\n    { value: undefined,\n      writable: true,\n      enumerable: false,\n      configurable: true }\n    ```", "```js\n> Object.getOwnPropertyDescriptor(Object.prototype, 'toString')\n{ value: [Function: toString],\n  writable: true,\n  enumerable: false,\n  configurable: true }\n\n> Object.getOwnPropertyDescriptor({}, 'toString')\nundefined\n```", "```js\nvar obj = Object.defineProperty({}, 'foo', {\n    value: 123,\n    enumerable: true\n    // writable: false (default value)\n    // configurable: false (default value)\n});\n```", "```js\nvar obj = Object.defineProperties({}, {\n    foo: { value: 123, enumerable: true },\n    bar: { value: 'abc', enumerable: true }\n});\n```", "```js\nvar obj = Object.create(Object.prototype, {\n    foo: { value: 123, enumerable: true },\n    bar: { value: 'abc', enumerable: true }\n});\n```", "```js\nfunction copyObject(orig) {\n    // 1\\. copy has same prototype as orig\n    var copy = Object.create(Object.getPrototypeOf(orig));\n\n    // 2\\. copy has all of orig\u2019s properties\n    copyOwnPropertiesFrom(copy, orig);\n\n    return copy;\n}\n```", "```js\nfunction copyOwnPropertiesFrom(target, source) {\n    Object.getOwnPropertyNames(source)  // (1)\n    .forEach(function(propKey) {  // (2)\n        var desc = Object.getOwnPropertyDescriptor(source, propKey); // (3)\n        Object.defineProperty(target, propKey, desc);  // (4)\n    });\n    return target;\n};\n```", "```js\nvar proto = Object.defineProperty({}, 'foo', {\n    value: 'a',\n    writable: false\n});\nvar obj = Object.create(proto);\n```", "```js\n> obj.foo = 'b';\n> obj.foo\n'a'\n```", "```js\n> (function () { 'use strict'; obj.foo = 'b' }());\nTypeError: Cannot assign to read-only property 'foo'\n```", "```js\n> Object.defineProperty(obj, 'foo', { value: 'b' });\n> obj.foo\n'b'\n```", "```js\n> Object.keys([])\n[]\n> Object.getOwnPropertyNames([])\n[ 'length' ]\n\n> Object.keys(['a'])\n[ '0' ]\n```", "```js\n> Object.keys(Object.prototype)\n[]\n> Object.getOwnPropertyNames(Object.prototype)\n[ hasOwnProperty',\n  'valueOf',\n  'constructor',\n  'toLocaleString',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toString' ]\n```", "```js\nObject.preventExtensions(obj)\n```", "```js\nvar obj = { foo: 'a' };\nObject.preventExtensions(obj);\n```", "```js\n> obj.bar = 'b';\n> obj.bar\nundefined\n```", "```js\n> (function () { 'use strict'; obj.bar = 'b' }());\nTypeError: Can't add property bar, object is not extensible\n```", "```js\n> delete obj.foo\ntrue\n> obj.foo\nundefined\n```", "```js\nObject.isExtensible(obj)\n```", "```js\nObject.seal(obj)\n```", "```js\n> var obj = { foo: 'a' };\n\n> Object.getOwnPropertyDescriptor(obj, 'foo')  // before sealing\n{ value: 'a',\n  writable: true,\n  enumerable: true,\n  configurable: true }\n\n> Object.seal(obj)\n\n> Object.getOwnPropertyDescriptor(obj, 'foo')  // after sealing\n{ value: 'a',\n  writable: true,\n  enumerable: true,\n  configurable: false }\n```", "```js\n> obj.foo = 'b';\n'b'\n> obj.foo\n'b'\n```", "```js\n> Object.defineProperty(obj, 'foo', { enumerable: false });\nTypeError: Cannot redefine property: foo\n```", "```js\nObject.isSealed(obj)\n```", "```js\nObject.freeze(obj)\n```", "```js\nvar point = { x: 17, y: -5 };\nObject.freeze(point);\n```", "```js\n> point.x = 2;  // no effect, point.x is read-only\n> point.x\n17\n\n> point.z = 123;  // no effect, point is not extensible\n> point\n{ x: 17, y: -5 }\n```", "```js\n> (function () { 'use strict'; point.x = 2 }());\nTypeError: Cannot assign to read-only property 'x'\n\n> (function () { 'use strict'; point.z = 123 }());\nTypeError: Can't add property z, object is not extensible\n```", "```js\nObject.isFrozen(obj)\n```", "```js\nvar obj = {\n    foo: 1,\n    bar: ['a', 'b']\n};\nObject.freeze(obj);\n```", "```js\n> obj.foo = 2; // no effect\n> obj.bar.push('c'); // changes obj.bar\n\n> obj\n{ foo: 1, bar: [ 'a', 'b', 'c' ] }\n```", "```js\nvar PersonProto = {\n    describe: function () {\n        return 'Person named '+this.name;\n    }\n};\nvar jane = {\n    [[Prototype]]: PersonProto,\n    name: 'Jane'\n};\nvar tarzan = {\n    [[Prototype]]: PersonProto,\n    name: 'Tarzan'\n};\n```", "```js\nfunction Person(name) {\n    this.name = name;\n}\n```", "```js\nPerson.prototype.describe = function () {\n    return 'Person named '+this.name;\n};\n```", "```js\n> var jane = new Person('Jane');\n> jane.describe()\n'Person named Jane'\n```", "```js\n> jane instanceof Person\ntrue\n> jane instanceof Date\nfalse\n```", "```js\nfunction newOperator(Constr, args) {\n    var thisValue = Object.create(Constr.prototype); // (1)\n    var result = Constr.apply(thisValue, args);\n    if (typeof result === 'object' && result !== null) {\n        return result; // (2)\n    }\n    return thisValue;\n}\n```", "```js\n> var proto = {};\n> var obj = Object.create(proto);\n> Object.getPrototypeOf(obj) === proto\ntrue\n```", "```js\n> function C() {}\n> Object.getPrototypeOf(new C()) === C.prototype\ntrue\n```", "```js\n> function Foo() {}\n> Object.getPrototypeOf(Foo) === Function.prototype\ntrue\n```", "```js\n> function C() {}\n> C.prototype.constructor === C\ntrue\n```", "```js\n> var o = new C();\n> o.constructor\n[Function: C]\n```", "```js\ntry {\n    ...\n} catch (e) {\n    switch (e.constructor) {\n        case SyntaxError:\n            ...\n            break;\n        case CustomError:\n            ...\n            break;\n        ...\n    }\n}\n```", "```js\n> function Foo() {}\n> var f = new Foo();\n> f.constructor.name\n'Foo'\n```", "```js\nfunction Constr() {}\nvar x = new Constr();\n\nvar y = new x.constructor();\nconsole.log(y instanceof Constr); // true\n```", "```js\nSuperConstr.prototype.createCopy = function () {\n    return new this.constructor(...);\n};\n```", "```js\nfunction Super() {\n}\nfunction Sub() {\n    Sub.superclass.constructor.call(this); // (1)\n}\nY.extend(Sub, Super);\n```", "```js\nC.prototype.constructor === C\n```", "```js\n> function f() {}\n> f.prototype.constructor === f\ntrue\n```", "```js\n// Avoid:\nC.prototype = {\n    method1: function (...) { ... },\n    ...\n};\n\n// Prefer:\nC.prototype.method1 = function (...) { ... };\n...\n```", "```js\nC.prototype = {\n    constructor: C,\n    method1: function (...) { ... },\n    ...\n};\n```", "```js\nvalue instanceof Constr\n```", "```js\nvalue instanceof Constr\nConstr.prototype.isPrototypeOf(value)\n```", "```js\n> {} instanceof Object\ntrue\n\n> [] instanceof Array  // constructor of []\ntrue\n> [] instanceof Object  // super-constructor of []\ntrue\n\n> new Date() instanceof Date\ntrue\n> new Date() instanceof Object\ntrue\n```", "```js\n> 'abc' instanceof Object\nfalse\n> 123 instanceof Number\nfalse\n```", "```js\n> [] instanceof 123\nTypeError: Expecting a function in instanceof check\n```", "```js\n> Object.create(null) instanceof Object\nfalse\n> Object.prototype instanceof Object\nfalse\n```", "```js\n> Object.getPrototypeOf(Object.create(null))\nnull\n> Object.getPrototypeOf(Object.prototype)\nnull\n```", "```js\n> typeof Object.create(null)\n'object'\n> typeof Object.prototype\n'object'\n```", "```js\nif (myvar instanceof Array) ...  // Doesn\u2019t always work\n```", "```js\n<head>\n    <script>\n        function test(arr) {\n            var iframe = frames[0];\n\n            console.log(arr instanceof Array); // false\n            console.log(arr instanceof iframe.Array); // true\n            console.log(Array.isArray(arr)); // true\n        }\n    </script>\n</head>\n<body>\n    <iframe srcdoc=\"<script>window.parent.test([])</script>\">\n    </iframe>\n</body>\n```", "```js\n    someValue.constructor.name === 'NameOfExpectedConstructor'\n    ```", "```js\nfunction SloppyColor(name) {\n    this.name = name;\n}\nvar c = SloppyColor('green'); // no warning!\n\n// No instance is created:\nconsole.log(c); // undefined\n// A global variable is created:\nconsole.log(name); // green\n```", "```js\nfunction StrictColor(name) {\n    'use strict';\n    this.name = name;\n}\nvar c = StrictColor('green');\n// TypeError: Cannot set property 'name' of undefined\n```", "```js\nclass Expression {\n    // Static factory method:\n    public static Expression parse(String str) {\n        if (...) {\n            return new Addition(...);\n        } else if (...) {\n            return new Multiplication(...);\n        } else {\n            throw new ExpressionException(...);\n        }\n    }\n}\n...\nExpression expr = Expression.parse(someStr);\n```", "```js\nfunction Expression(str) {\n    if (...) {\n        return new Addition(..);\n    } else if (...) {\n        return new Multiplication(...);\n    } else {\n        throw new ExpressionException(...);\n    }\n}\n...\nvar expr = new Expression(someStr);\n```", "```js\n/**\n * Anti-pattern: don\u2019t do this\n *\n * @param data an array with names\n */\nfunction Names(data) {\n    if (data) {\n        // There is a parameter\n        // => create instance property\n        this.data = data;\n    }\n}\nNames.prototype.data = [];\n```", "```js\n> var n1 = new Names();\n> var n2 = new Names();\n\n> n1.data.push('jane'); // changes default value\n> n1.data\n[ 'jane' ]\n\n> n2.data\n[ 'jane' ]\n```", "```js\nfunction Names(data) {\n    this.data = data || [];\n}\n```", "```js\nfunction Names(data) {\n    if (data) this.data = data;\n}\nNames.prototype = {\n    constructor: Names, // (1)\n    get data() {\n        // Define, don\u2019t assign\n        // => avoid calling the (nonexistent) setter\n        Object.defineProperty(this, 'data', {\n            value: [],\n            enumerable: true,\n            configurable: false,\n            writable: false\n        });\n        return this.data;\n    }\n};\n```", "```js\nfunction Foo() {}\nFoo.prototype.FACTOR = 42;\nFoo.prototype.compute = function (x) {\n    return x * this.FACTOR;\n};\n```", "```js\n// This code should be inside an IIFE or a module\nfunction Foo() {}\nvar FACTOR = 42;\nFoo.prototype.compute = function (x) {\n    return x * FACTOR;\n};\n```", "```js\nfunction ConstrA() { }\nConstrA.prototype.TYPE_NAME = 'ConstrA';\n\nfunction ConstrB() { }\nConstrB.prototype.TYPE_NAME = 'ConstrB';\n```", "```js\nConstr.prototype.publicMethod = ...;\n```", "```js\nfunction Constr(...) {\n    this.publicData = ...;\n    ...\n}\n```", "```js\nfunction Constr(...) {\n    ...\n    var that = this; // make accessible to private functions\n\n    var privateData = ...;\n\n    function privateFunction(...) {\n        // Access everything\n        privateData = ...;\n\n        that.publicData = ...;\n        that.publicMethod(...);\n    }\n    ...\n}\n```", "```js\nfunction Constr(...) {\n    ...\n    this.privilegedMethod = function (...) {\n        // Access everything\n        privateData = ...;\n        privateFunction(...);\n\n        this.publicData = ...;\n        this.publicMethod(...);\n    };\n}\n```", "```js\nfunction StringBuilder() {\n    var buffer = [];\n    this.add = function (str) {\n        buffer.push(str);\n    };\n    this.toString = function () {\n        return buffer.join('');\n    };\n}\n// Can\u2019t put methods in the prototype!\n```", "```js\n> var sb = new StringBuilder();\n> sb.add('Hello');\n> sb.add(' world!');\n> sb.toString()\n\u2019Hello world!\u2019\n```", "```js\nfunction StringBuilder() {\n    this._buffer = [];\n}\nStringBuilder.prototype = {\n    constructor: StringBuilder,\n    add: function (str) {\n        this._buffer.push(str);\n    },\n    toString: function () {\n        return this._buffer.join('');\n    }\n};\n```", "```js\nvar KEY_BUFFER = '_StringBuilder_buffer';\n```", "```js\nvar StringBuilder = function () {\n    var KEY_BUFFER = '_StringBuilder_buffer';\n\n    function StringBuilder() {\n        this[KEY_BUFFER] = [];\n    }\n    StringBuilder.prototype = {\n        constructor: StringBuilder,\n        add: function (str) {\n            this[KEY_BUFFER].push(str);\n        },\n        toString: function () {\n            return this[KEY_BUFFER].join('');\n        }\n    };\n    return StringBuilder;\n}();\n```", "```js\nvar KEY_BUFFER = '_StringBuilder_buffer_' + uuid.v4();\n```", "```js\n_StringBuilder_buffer_110ec58a-a0f2-4ac4-8393-c866d813b8d1\n```", "```js\nvar obj = function () {  // open IIFE\n\n    // public\n    var self = {\n        publicMethod: function (...) {\n            privateData = ...;\n            privateFunction(...);\n        },\n        publicData: ...\n    };\n\n    // private\n    var privateData = ...;\n    function privateFunction(...) {\n        privateData = ...;\n        self.publicData = ...;\n        self.publicMethod(...);\n    }\n\n    return self;\n}(); // close IIFE\n```", "```js\nvar StringBuilder = function () { // open IIFE\n    var KEY_BUFFER = '_StringBuilder_buffer_' + uuid.v4();\n\n    function StringBuilder() {\n        this[KEY_BUFFER] = [];\n    }\n    StringBuilder.prototype = {\n        // Omitted: methods accessing this[KEY_BUFFER]\n    };\n    return StringBuilder;\n}(); // close IIFE\n```", "```js\nvar obj = {\n    method: function () {  // open IIFE\n\n        // method-private data\n        var invocCount = 0;\n\n        return function () {\n            invocCount++;\n            console.log('Invocation #'+invocCount);\n            return 'result';\n        };\n    }()  // close IIFE\n};\n```", "```js\n> obj.method()\nInvocation #1\n'result'\n> obj.method()\nInvocation #2\n'result'\n```", "```js\nfunction Sub(prop1, prop2, prop3, prop4) {\n    Super.call(this, prop1, prop2);  // (1)\n    this.prop3 = prop3;  // (2)\n    this.prop4 = prop4;  // (3)\n}\n```", "```js\nSub.prototype = Object.create(Super.prototype);\nSub.prototype.constructor = Sub;\nSub.prototype.methodB = ...;\nSub.prototype.methodC = ...;\n```", "```js\nsubInstance instanceof Sub\nSub.prototype.isPrototypeOf(subInstance)\n```", "```js\nsubInstance instanceof Super\nSuper.prototype.isPrototypeOf(subInstance)\n```", "```js\nSub.prototype.methodB = function (x, y) {\n    var superResult = Super.prototype.methodB.call(this, x, y); // (1)\n    return this.prop3 + ' ' + superResult;\n}\n```", "```js\nSub._super = Super.prototype;\n```", "```js\nfunction Sub(prop1, prop2, prop3, prop4) {\n    Sub._super.constructor.call(this, prop1, prop2);\n    this.prop3 = prop3;\n    this.prop4 = prop4;\n}\nSub.prototype.methodB = function (x, y) {\n    var superResult = Sub._super.methodB.call(this, x, y);\n    return this.prop3 + ' ' + superResult;\n}\n```", "```js\nfunction subclasses(SubC, SuperC) {\n    var subProto = Object.create(SuperC.prototype);\n    // Save `constructor` and, possibly, other methods\n    copyOwnPropertiesFrom(subProto, SubC.prototype);\n    SubC.prototype = subProto;\n    SubC._super = SuperC.prototype;\n};\n```", "```js\nfunction Person(name) {\n    this.name = name;\n}\nPerson.prototype.describe = function () {\n    return 'Person called '+this.name;\n};\n```", "```js\nfunction Employee(name, title) {\n    Person.call(this, name);\n    this.title = title;\n}\nEmployee.prototype = Object.create(Person.prototype);\nEmployee.prototype.constructor = Employee;\nEmployee.prototype.describe = function () {\n    return Person.prototype.describe.call(this)+' ('+this.title+')';\n};\n```", "```js\n> var jane = new Employee('Jane', 'CTO');\n> jane.describe()\nPerson called Jane (CTO)\n> jane instanceof Employee\ntrue\n> jane instanceof Person\ntrue\n```", "```js\nfunction Employee(name, title) {\n    Employee._super.constructor.call(this, name);\n    this.title = title;\n}\nEmployee.prototype.describe = function () {\n    return Employee._super.describe.call(this)+' ('+this.title+')';\n};\nsubclasses(Employee, Person);\n```", "```js\n> var p = Object.getPrototypeOf\n\n> p([]) === Array.prototype\ntrue\n> p(p([])) === Object.prototype\ntrue\n> p(p(p([]))) === null\ntrue\n```", "```js\nSub.prototype = new Super();  // Don\u2019t do this\n```", "```js\n> Object.prototype.isPrototypeOf({})\ntrue\n> Object.prototype.isPrototypeOf([])\ntrue\n> Object.prototype.isPrototypeOf(/xyz/)\ntrue\n```", "```js\n> ({ first: 'John', last: 'Doe' }.toString())\n'[object Object]'\n> [ 'a', 'b', 'c' ].toString()\n'a,b,c'\n```", "```js\n> var obj = {};\n> obj.valueOf() === obj\ntrue\n```", "```js\n> new Number(7).valueOf()\n7\n```", "```js\n> 3 * { valueOf: function () { return 5 } }\n15\n```", "```js\n> String({ toString: function () { return 'ME' } })\n'Result: ME'\n```", "```js\n> var proto = { };\n> var obj = Object.create(proto);\n> proto.isPrototypeOf(obj)\ntrue\n> obj.isPrototypeOf(obj)\nfalse\n```", "```js\n> var proto = { foo: 'abc' };\n> var obj = Object.create(proto);\n> obj.bar = 'def';\n\n> Object.prototype.hasOwnProperty.call(obj, 'foo')\nfalse\n> Object.prototype.hasOwnProperty.call(obj, 'bar')\ntrue\n```", "```js\n> var obj = { foo: 'abc' };\n> obj.propertyIsEnumerable('foo')\ntrue\n> obj.propertyIsEnumerable('toString')\nfalse\n> obj.propertyIsEnumerable('unknown')\nfalse\n```", "```js\nfunction Wine(age) {\n    this.age = age;\n}\nWine.prototype.incAge = function (years) {\n    this.age += years;\n}\n```", "```js\n> var chablis = new Wine(3);\n> chablis.incAge(1);\n> chablis.age\n4\n```", "```js\nchablis.incAge(1)\n```", "```js\nWine.prototype.incAge.call(chablis, 1)\n```", "```js\n> var john = { age: 51 };\n> Wine.prototype.incAge.call(john, 3)\n> john.age\n54\n```", "```js\nObject.prototype.hasOwnProperty.call(obj, 'propKey')\n```", "```js\n{}.hasOwnProperty.call(obj, 'propKey')\n```", "```js\nArray.prototype.join.call(str, '-')\n[].join.call(str, '-')\n```", "```js\n    > var arr1 = [ 'a', 'b' ];\n    > var arr2 = [ 'c', 'd' ];\n\n    > [].push.apply(arr1, arr2)\n    4\n    > arr1\n    [ 'a', 'b', 'c', 'd' ]\n    ```", "```js\n    > Array.prototype.join.call('abc', '-')\n    'a-b-c'\n    ```", "```js\n    > [].map.call('abc', function (x) { return x.toUpperCase() })\n    [ 'A', 'B', 'C' ]\n    ```", "```js\n    > 'abc'.split('').map(function (x) { return x.toUpperCase() })\n    [ 'A', 'B', 'C' ]\n    ```", "```js\n    > String.prototype.toUpperCase.call(true)\n    'TRUE'\n    > String.prototype.toUpperCase.call(['a','b','c'])\n    'A,B,C'\n    ```", "```js\n    > var fakeArray = { 0: 'a', 1: 'b', length: 2 };\n    > Array.prototype.join.call(fakeArray, '-')\n    'a-b'\n    ```", "```js\n    > var obj = {};\n    > Array.prototype.push.call(obj, 'hello');\n    1\n    > obj\n    { '0': 'hello', length: 1 }\n    ```", "```js\n    > function args() { return arguments }\n    > var arrayLike = args('a', 'b');\n\n    > arrayLike[0]\n    'a'\n    > arrayLike.length\n    2\n    ```", "```js\n    > arrayLike.join('-')\n    TypeError: object has no method 'join'\n    ```", "```js\n    > arrayLike instanceof Array\n    false\n    ```", "```js\n    > var elts = document.getElementsByTagName('h3');\n    > elts.length\n    3\n    > elts instanceof Array\n    false\n    ```", "```js\n    > 'abc'[1]\n    'b'\n    > 'abc'.length\n    3\n    ```", "```js\n    > var obj = { '0': 'abc' };\n    > obj[0]\n    'abc'\n    ```", "```js\n    var arr = Array.prototype.slice.call(arguments);\n    ```", "```js\n    var copy = [ 'a', 'b' ].slice();\n    ```", "```js\n    function logArgs() {\n        for (var i=0; i<arguments.length; i++) {\n            console.log(i+'. '+arguments[i]);\n        }\n    }\n    ```", "```js\n    function logArgs() {\n        Array.prototype.forEach.call(arguments, function (elem, i) {\n            console.log(i+'. '+elem);\n        });\n    }\n    ```", "```js\n    > logArgs('hello', 'world');\n    0\\. hello\n    1\\. world\n    ```", "```js\nvar proto = { protoProp: 'a' };\nvar obj = Object.create(proto);\nobj.ownProp = 'b';\n```", "```js\nownProp: 'b'\n```", "```js\n> 'ownProp' in obj  // ok\ntrue\n> 'unknown' in obj  // ok\nfalse\n> 'toString' in obj  // wrong, inherited from Object.prototype\ntrue\n> 'protoProp' in obj  // wrong, inherited from proto\ntrue\n```", "```js\n> obj.hasOwnProperty('ownProp')  // ok\ntrue\n> obj.hasOwnProperty('unknown')  // ok\nfalse\n> obj.hasOwnProperty('toString')  // ok\nfalse\n> obj.hasOwnProperty('protoProp')  // ok\nfalse\n```", "```js\n> for (propKey in obj) console.log(propKey)\nownProp\nprotoProp\n```", "```js\n> Object.keys(obj)\n[ 'ownProp' ]\n```", "```js\n> obj['toString']\n[Function: toString]\n```", "```js\nfunction getOwnProperty(obj, propKey) {\n    // Using hasOwnProperty() in this manner is problematic\n    // (explained and fixed later)\n    return (obj.hasOwnProperty(propKey)\n            ? obj[propKey] : undefined);\n}\n```", "```js\n> getOwnProperty(obj, 'toString')\nundefined\n```", "```js\n> getOwnProperty({ foo: 123 }, 'foo')\n123\n```", "```js\n> getOwnProperty({ hasOwnProperty: 123 }, 'foo')\nTypeError: Property 'hasOwnProperty' is not a function\n```", "```js\nfunction getOwnProperty(obj, propKey) {\n    return (Object.prototype.hasOwnProperty.call(obj, propKey)\n            ? obj[propKey] : undefined);\n}\n```", "```js\nfunction get(obj, key) {\n    return obj[escapeKey(key)];\n}\nfunction set(obj, key, value) {\n    obj[escapeKey(key)] = value;\n}\n// Similar: checking if key exists, deleting an entry\n\nfunction escapeKey(key) {\n    if (key.indexOf('__proto__') === 0) {  // (1)\n        return key+'%';\n    } else {\n        return key;\n    }\n}\n```", "```js\nvar dict = Object.create(null);\n```", "```js\n> Object.getPrototypeOf({}) === Object.prototype\ntrue\n> Object.getPrototypeOf(Object.prototype)\nnull\n```", "```js\n> console.log('Result: '+obj)\nTypeError: Cannot convert object to primitive value\n```", "```js\n    var jane = {\n        name: 'Jane',\n\n        'not an identifier': 123,\n\n        describe: function () { // method\n            return 'Person named '+this.name;\n        },\n    };\n    // Call a method:\n    console.log(jane.describe()); // Person named Jane\n    ```", "```js\n    obj.propKey\n    obj.propKey = value\n    delete obj.propKey\n    ```", "```js\n    obj['propKey']\n    obj['propKey'] = value\n    delete obj['propKey']\n    ```", "```js\n    Object.create(proto, propDescObj?)\n    Object.getPrototypeOf(obj)\n    ```", "```js\n    Object.keys(obj)\n    Object.getOwnPropertyNames(obj)\n\n    Object.prototype.hasOwnProperty.call(obj, propKey)\n    propKey in obj\n    ```", "```js\n    Object.defineProperty(obj, propKey, propDesc)\n    Object.defineProperties(obj, propDescObj)\n    Object.getOwnPropertyDescriptor(obj, propKey)\n    Object.create(proto, propDescObj?)\n    ```", "```js\n    Object.preventExtensions(obj)\n    Object.isExtensible(obj)\n\n    Object.seal(obj)\n    Object.isSealed(obj)\n\n    Object.freeze(obj)\n    Object.isFrozen(obj)\n    ```", "```js\n    Object.prototype.toString()\n    Object.prototype.valueOf()\n\n    Object.prototype.toLocaleString()\n\n    Object.prototype.isPrototypeOf(obj)\n    Object.prototype.hasOwnProperty(key)\n    Object.prototype.propertyIsEnumerable(propKey)\n    ```", "```js\n> var arr = [ 'a', 'b', 'c' ]; // array literal\n> arr[0]  // get element 0\n'a'\n> arr[0] = 'x';  // set element 0\n> arr\n[ 'x', 'b', 'c' ]\n```", "```js\n> var arr = [ 'a', 'b', 'c' ];\n> arr.length\n3\n> arr.length = 2;  // remove an element\n> arr\n[ 'a', 'b' ]\n> arr[arr.length] = 'd';  // append an element\n> arr\n[ 'a', 'b', 'd' ]\n```", "```js\n> var arr = [ 'a', 'b' ];\n> arr.push('d')\n3\n> arr\n[ 'a', 'b', 'd' ]\n```", "```js\n> var arr = [];\n> arr[0] = 'a';\n'a'\n> arr[2] = 'b';\n'b'\n> arr\n[ 'a', , 'b' ]\n```", "```js\n> var arr = [ 'a', 'b' ];\n> arr.foo = 123;\n> arr\n[ 'a', 'b' ]\n> arr.foo\n123\n```", "```js\nvar myArray = [ 'a', 'b', 'c' ];\n```", "```js\n> [ 'a', 'b' ].length\n2\n> [ 'a', 'b', ].length\n2\n> [ 'a', 'b', ,].length  // hole + trailing comma\n3\n```", "```js\n> var arr = new Array(2);\n> arr.length\n2\n> arr  // two holes plus trailing comma (ignored!)\n[ , ,]\n```", "```js\n// The same as ['a', 'b', 'c']:\nvar arr1 = new Array('a', 'b', 'c');\n```", "```js\n> new Array(2)  // alas, not [ 2 ]\n[ , ,]\n\n> new Array(5.7)  // alas, not [ 5.7 ]\nRangeError: Invalid array length\n\n> new Array('abc')  // ok\n[ 'abc' ]\n```", "```js\n// Create the Tic-tac-toe board\nvar rows = [];\nfor (var rowCount=0; rowCount < 3; rowCount++) {\n    rows[rowCount] = [];\n    for (var colCount=0; colCount < 3; colCount++) {\n        rows[rowCount][colCount] = '.';\n    }\n}\n\n// Set an X in the upper right corner\nrows[0][2] = 'X';  // [row][column]\n\n// Print the board\nrows.forEach(function (row) {\n    console.log(row.join(' '));\n});\n```", "```js\n. . X\n. . .\n. . .\n```", "```js\nvar rows = [ ['.','.','.'], ['.','.','.'], ['.','.','.'] ];\n```", "```js\n> var arr = [];\n\n> arr[-1] = 'a';\n> arr\n[]\n> arr['-1']\n'a'\n\n> arr[4294967296] = 'b';\n> arr\n[]\n> arr['4294967296']\n'b'\n```", "```js\n> var arr = [ 'a', , 'b' ];\n> 0 in arr\ntrue\n> 1 in arr\nfalse\n> 10 in arr\nfalse\n```", "```js\n> var arr = [ 'a', 'b' ];\n> arr.length\n2\n> delete arr[1]  // does not update length\ntrue\n> arr\n[ 'a',  ]\n> arr.length\n2\n```", "```js\n> var arr = ['a', 'b', 'c', 'd'];\n> arr.splice(1, 2) // returns what has been removed\n[ 'b', 'c' ]\n> arr\n[ 'a', 'd' ]\n```", "```js\n> var arr = ['a', 'b'];\n> arr['0']\n'a'\n> arr[0]\n'a'\n```", "```js\n> ToUint32('xyz')\n0\n> ToUint32('?@#!')\n0\n```", "```js\n> ToUint32('-1')\n4294967295\n> Math.pow(2, 32)\n4294967296\n> ToUint32('4294967296')\n0\n```", "```js\n> ToUint32('1.371')\n1\n```", "```js\n> ToUint32('1e3')\n1000\n```", "```js\n> var arr = ['a', 'b'];\n> arr['0']  // array index\n'a'\n> arr['00'] // normal property\nundefined\n```", "```js\n> [ 'a', 'b' ].length\n2\n> [ 'a', , 'b' ].length\n3\n```", "```js\nfunction countElements(arr) {\n    var elemCount = 0;\n    arr.forEach(function () {\n        elemCount++;\n    });\n    return elemCount;\n}\n```", "```js\n> countElements([ 'a', 'b' ])\n2\n> countElements([ 'a', , 'b' ])\n2\n```", "```js\n> var arr = [ 'a', 'b' ];\n> arr.length = 3;\n> arr  // one hole at the end\n[ 'a', 'b', ,]\n```", "```js\n> countElements(arr)\n2\n```", "```js\n> arr.push('c')\n4\n> arr\n[ 'a', 'b', , 'c' ]\n```", "```js\n> var arr = new Array(2);\n> arr.length\n2\n> countElements(arr)\n0\n```", "```js\n> var arr = [ 'a', 'b', 'c' ];\n> 1 in arr\ntrue\n> arr[1]\n'b'\n\n> arr.length = 1;\n> arr\n[ 'a' ]\n> 1 in arr\nfalse\n> arr[1]\nundefined\n```", "```js\nfunction clearArray(arr) {\n    arr.length = 0;\n}\n```", "```js\n> var arr = [ 'a', 'b', 'c' ];\n> clearArray(arr)\n> arr\n[]\n```", "```js\narr = [];\n```", "```js\n> var a1 = [1, 2, 3];\n> var a2 = a1;\n> a1.length = 0;\n\n> a1\n[]\n> a2\n[]\n```", "```js\n> var a1 = [1, 2, 3];\n> var a2 = a1;\n> a1 = [];\n\n> a1\n[]\n> a2\n[ 1, 2, 3 ]\n```", "```js\n> var arr1 = new Array(Math.pow(2, 32));  // not ok\nRangeError: Invalid array length\n\n> var arr2 = new Array(Math.pow(2, 32)-1);  // ok\n> arr2.push('x');\nRangeError: Invalid array length\n```", "```js\n> var arr = [];\n> arr[0] = 'a';\n> arr[2] = 'c';\n> 1 in arr  // hole at index 1\nfalse\n```", "```js\n> var arr = ['a',,'c'];\n> 1 in arr  // hole at index 1\nfalse\n```", "```js\n> [ 'a', ].length\n1\n> [ 'a', ,].length\n2\n```", "```js\nvar sparse = [ , , 'c' ];\nvar dense  = [ undefined, undefined, 'c' ];\n```", "```js\n> sparse.length\n3\n> dense.length\n3\n```", "```js\n> 0 in sparse\nfalse\n> 0 in dense\ntrue\n```", "```js\n> for (var i=0; i<sparse.length; i++) console.log(sparse[i]);\nundefined\nundefined\nc\n> for (var i=0; i<dense.length; i++) console.log(dense[i]);\nundefined\nundefined\nc\n```", "```js\n> sparse.forEach(function (x) { console.log(x) });\nc\n> dense.forEach(function (x) { console.log(x) });\nundefined\nundefined\nc\n```", "```js\n> ['a',, 'b'].forEach(function (x,i) { console.log(i+'.'+x) })\n0.a\n2.b\n```", "```js\n> ['a',, 'b'].every(function (x) { return typeof x === 'string' })\ntrue\n```", "```js\n> ['a',, 'b'].map(function (x,i) { return i+'.'+x })\n[ '0.a', , '2.b' ]\n```", "```js\n> ['a',, 'b'].filter(function (x) { return true })\n[ 'a', 'b' ]\n```", "```js\n> ['a',, 'b'].join('-')\n'a--b'\n> [ 'a', undefined, 'b' ].join('-')\n'a--b'\n```", "```js\n> ['a',, 'b'].sort()  // length of result is 3\n[ 'a', 'b', ,  ]\n```", "```js\n> for (var key in ['a',, 'b']) { console.log(key) }\n0\n2\n```", "```js\n> function f() { return [].slice.call(arguments) }\n> f.apply(null, [ , , ,])\n[ undefined, undefined, undefined ]\n```", "```js\n> Array.apply(null, Array(3))\n[ undefined, undefined, undefined ]\n```", "```js\n> Array.apply(null, [2])\n[ , ,]\n```", "```js\n> ['a',, 'b'].filter(function (x) { return true })\n[ 'a', 'b' ]\n```", "```js\nfunction convertHolesToUndefineds(arr) {\n    var result = [];\n    for (var i=0; i < arr.length; i++) {\n        result[i] = arr[i];\n    }\n    return result;\n}\n```", "```js\n> convertHolesToUndefineds(['a',, 'b'])\n[ 'a', undefined, 'b' ]\n```", "```js\n> var arr = [ 'a', 'b' ];\n> arr.shift()\n'a'\n> arr\n[ 'b' ]\n```", "```js\n> var arr = [ 'c', 'd' ];\n> arr.unshift('a', 'b')\n4\n> arr\n[ 'a', 'b', 'c', 'd' ]\n```", "```js\n> var arr = [ 'a', 'b' ];\n> arr.pop()\n'b'\n> arr\n[ 'a' ]\n```", "```js\n> var arr = [ 'a', 'b' ];\n> arr.push('c', 'd')\n4\n> arr\n[ 'a', 'b', 'c', 'd' ]\n```", "```js\n> var arr1 = [ 'a', 'b' ];\n> var arr2 = [ 'c', 'd' ];\n\n> Array.prototype.push.apply(arr1, arr2)\n4\n> arr1\n[ 'a', 'b', 'c', 'd' ]\n```", "```js\n> var arr = [ 'a', 'b', 'c', 'd' ];\n> arr.splice(1, 2, 'X');\n[ 'b', 'c' ]\n> arr\n[ 'a', 'X', 'd' ]\n```", "```js\n> var arr = [ 'a', 'b', 'c', 'd' ];\n> arr.splice(-2)\n[ 'c', 'd' ]\n> arr\n[ 'a', 'b' ]\n```", "```js\n> var arr = [ 'a', 'b', 'c' ];\n> arr.reverse()\n[ 'c', 'b', 'a' ]\n> arr // reversing happened in place\n[ 'c', 'b', 'a' ]\n```", "```js\n> var arr = ['banana', 'apple', 'pear', 'orange'];\n> arr.sort()\n[ 'apple', 'banana', 'orange', 'pear' ]\n> arr  // sorting happened in place\n[ 'apple', 'banana', 'orange', 'pear' ]\n```", "```js\n> [-1, -20, 7, 50].sort()\n[ -1, -20, 50, 7 ]\n```", "```js\nfunction compareFunction(a, b)\n```", "```js\nfunction compareCanonically(a, b) {\n    if (a < b) {\n        return -1;\n    } else if (a > b) {\n        return 1;\n    } else {\n        return 0;\n    }\n}\n```", "```js\nfunction compareCanonically(a, b) {\n    return return a < b ? -1 (a > b ? 1 : 0);\n}\n```", "```js\n> [-1, -20, 7, 50].sort(compareCanonically)\n[ -20, -1, 7, 50 ]\n```", "```js\n> ['c', 'a', 'b'].sort(function (a,b) { return a.localeCompare(b) })\n[ 'a', 'b', 'c' ]\n```", "```js\nvar arr = [\n    { name: 'Tarzan' },\n    { name: 'Cheeta' },\n    { name: 'Jane' } ];\n\nfunction compareNames(a,b) {\n    return a.name.localeCompare(b.name);\n}\n```", "```js\n> arr.sort(compareNames)\n[ { name: 'Cheeta' },\n  { name: 'Jane' },\n  { name: 'Tarzan' } ]\n```", "```js\n> var arr = [ 'a', 'b' ];\n> arr.concat('c', ['d', 'e'])\n[ 'a', 'b', 'c', 'd', 'e' ]\n```", "```js\n> arr\n[ 'a', 'b' ]\n```", "```js\n> [ 'a', 'b', 'c', 'd' ].slice(1, 3)\n[ 'b', 'c' ]\n```", "```js\n> [ 'a', 'b', 'c', 'd' ].slice(1)\n[ 'b', 'c', 'd' ]\n```", "```js\n> [ 'a', 'b', 'c', 'd' ].slice()\n[ 'a', 'b', 'c', 'd' ]\n```", "```js\n> [ 'a', 'b', 'c', 'd' ].slice(1, -1)\n[ 'b', 'c' ]\n> [ 'a', 'b', 'c', 'd' ].slice(-2)\n[ 'c', 'd' ]\n```", "```js\n> [3, 4, 5].join('-')\n'3-4-5'\n> [3, 4, 5].join()\n'3,4,5'\n> [3, 4, 5].join('')\n'345'\n```", "```js\n> [undefined, null].join('#')\n'#'\n```", "```js\n> ['a',, 'b'].join('-')\n'a--b'\n```", "```js\n> [ 3, 1, 17, 1, 4 ].indexOf(1)\n1\n> [ 3, 1, 17, 1, 4 ].indexOf(1, 2)\n3\n```", "```js\n> [NaN].indexOf(NaN)\n-1\n```", "```js\n> [ 3, 1, 17, 1, 4 ].lastIndexOf(1)\n3\n> [ 3, 1, 17, 1, 4 ].lastIndexOf(1, -3)\n1\n```", "```js\narr.examinationMethod(callback, thisValue?)\n```", "```js\n    function callback(element, index, array)\n    ```", "```js\nvar arr = [ 'apple', 'pear', 'orange' ];\narr.forEach(function (elem) {\n    console.log(elem);\n});\n```", "```js\n> function isEven(x) { return x % 2 === 0 }\n> [ 2, 4, 6 ].every(isEven)\ntrue\n> [ 2, 3, 4 ].every(isEven)\nfalse\n```", "```js\n> [].every(function () { throw new Error() })\ntrue\n```", "```js\n> function isEven(x) { return x % 2 === 0 }\n> [ 1, 3, 5 ].some(isEven)\nfalse\n> [ 1, 2, 3 ].some(isEven)\ntrue\n```", "```js\n> [].some(function () { throw new Error() })\nfalse\n```", "```js\nfunction breakAtEmptyString(strArr) {\n    strArr.some(function (elem) {\n        if (elem.length === 0) {\n            return true; // break\n        }\n        console.log(elem);\n        // implicit: return undefined (interpreted as false)\n    });\n}\n```", "```js\nfunction callback(element, index, array)\n```", "```js\n> [ 1, 2, 3 ].map(function (x) { return 2 * x })\n[ 2, 4, 6 ]\n```", "```js\n> [ 1, 0, 3, 0 ].filter(function (x) { return x !== 0 })\n[ 1, 3 ]\n```", "```js\nfunction callback(previousValue, currentElement, currentIndex, array)\n```", "```js\nfunction add(prev, cur) {\n    return prev + cur;\n}\nconsole.log([10, 3, -1].reduce(add)); // 12\n```", "```js\n> [7].reduce(add)\n7\n```", "```js\n> [].reduce(add)\nTypeError: Reduce of empty array with no initial value\n> [].reduce(add, 123)\n123\n```", "```js\nfunction printArgs(prev, cur, i) {\n    console.log('prev:'+prev+', cur:'+cur+', i:'+i);\n    return prev + cur;\n}\n```", "```js\n> ['a', 'b', 'c'].reduce(printArgs)\nprev:a, cur:b, i:1\nprev:ab, cur:c, i:2\n'abc'\n> ['a', 'b', 'c'].reduce(printArgs, 'x')\nprev:x, cur:a, i:0\nprev:xa, cur:b, i:1\nprev:xab, cur:c, i:2\n'xabc'\n```", "```js\n> ['a', 'b', 'c'].reduceRight(printArgs)\nprev:c, cur:b, i:1\nprev:cb, cur:a, i:0\n'cba'\n> ['a', 'b', 'c'].reduceRight(printArgs, 'x')\nprev:x, cur:c, i:2\nprev:xc, cur:b, i:1\nprev:xcb, cur:a, i:0\n'xcba'\n```", "```js\n    for (var i=0; i<arr.length; i++) {\n        console.log(arr[i]);\n    }\n    ```", "```js\n    arr.forEach(function (elem) {\n        console.log(elem);\n    });\n    ```", "```js\n\\ ^ $ . * + ? ( ) [ ] { } |\n```", "```js\n> /^(ab)$/.test('(ab)')\nfalse\n> /^\\(ab\\)$/.test('(ab)')\ntrue\n```", "```js\n    -\n    ```", "```js\n    : = ! < >\n    ```", "```js\n> /./.test('\\n')\nfalse\n> /[\\s\\S]/.test('\\n')\ntrue\n```", "```js\n        \\ ] -\n    ```", "```js\nfunction parseIsoDate(str) {\n    var match = /^([0-9]{4})-([0-9]{2})-([0-9]{2})$/.exec(str);\n\n    // Other ways of writing the regular expression:\n    // /^([0-9][0-9][0-9][0-9])-([0-9][0-9])-([0-9][0-9])$/\n    // /^(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)$/\n\n    if (!match) {\n        throw new Error('Not an ISO date: '+str);\n    }\n    console.log('Year: '  + match[1]);\n    console.log('Month: ' + match[2]);\n    console.log('Day: '   + match[3]);\n}\n```", "```js\n> parseIsoDate('2001-12-24')\nYear: 2001\nMonth: 12\nDay: 24\n```", "```js\n> /^(a+)-\\1$/.test('a-a')\ntrue\n> /^(a+)-\\1$/.test('aaa-aaa')\ntrue\n> /^(a+)-\\1$/.test('aa-a')\nfalse\n```", "```js\n> var tagName = /<([^>]+)>[^<]*<\\/\\1>/;\n> tagName.exec('<b>bold</b>')[1]\n'b'\n> tagName.exec('<strong>text</strong>')[1]\n'strong'\n> tagName.exec('<strong>text</stron>')\nnull\n```", "```js\n> '<a> <strong>'.match(/^<(.*)>/)[1]  // greedy\n'a> <strong'\n> '<a> <strong>'.match(/^<(.*?)>/)[1]  // reluctant\n'a'\n```", "```js\n/<(.+?)>.*?<\\/\\1>/\n```", "```js\n> /\\bell\\b/.test('hello')\nfalse\n> /\\bell\\b/.test('ello')\nfalse\n> /\\bell\\b/.test('ell')\ntrue\n```", "```js\n> /\\Bell\\B/.test('ell')\nfalse\n> /\\Bell\\B/.test('hell')\nfalse\n> /\\Bell\\B/.test('hello')\ntrue\n```", "```js\n> /^aa|bb$/.test('aaxx')\ntrue\n> /^aa|bb$/.test('xxbb')\ntrue\n```", "```js\n/^(aa|bb)$/\n```", "```js\n/^a(a|b)b$/\n```", "```js\n    function foo() {\n        /[/;\n    }\n    ```", "```js\n    function foo() {\n        new RegExp('[');\n    }\n    ```", "```js\n> var regex = /abc/i;\n> regex.ignoreCase\ntrue\n> regex.multiline\nfalse\n```", "```js\n> /abc/.test('ABC')\nfalse\n> new RegExp('abc').test('ABC')\nfalse\n```", "```js\n> /abc/i.test('ABC')\ntrue\n> new RegExp('abc', 'i').test('ABC')\ntrue\n```", "```js\nregex.test(str)\n```", "```js\n> var str = '_x_x';\n\n> /x/.test(str)\ntrue\n> /a/.test(str)\nfalse\n```", "```js\n> var regex = /x/g;\n> regex.lastIndex\n0\n\n> regex.test(str)\ntrue\n> regex.lastIndex\n2\n\n> regex.test(str)\ntrue\n> regex.lastIndex\n4\n\n> regex.test(str)\nfalse\n```", "```js\nstr.search(regex)\n```", "```js\n> 'abba'.search(/b/)\n1\n> 'abba'.search(/x/)\n-1\n```", "```js\n> 'aaab'.search('^a+b+$')\n0\n```", "```js\nvar matchData = regex.exec(str);\n```", "```js\n> var regex = /a(b+)/;\n> regex.exec('_abbb_ab_')\n[ 'abbb',\n  'bbb',\n  index: 1,\n  input: '_abbb_ab_' ]\n> regex.lastIndex\n0\n```", "```js\n> var regex = /a(b+)/g;\n> var str = '_abbb_ab_';\n\n> regex.exec(str)\n[ 'abbb',\n  'bbb',\n  index: 1,\n  input: '_abbb_ab_' ]\n> regex.lastIndex\n6\n\n> regex.exec(str)\n[ 'ab',\n  'b',\n  index: 7,\n  input: '_abbb_ab_' ]\n> regex.lastIndex\n10\n\n> regex.exec(str)\nnull\n```", "```js\nvar regex = /a(b+)/g;\nvar str = '_abbb_ab_';\nvar match;\nwhile (match = regex.exec(str)) {\n    console.log(match[1]);\n}\n```", "```js\nbbb\nb\n```", "```js\nvar matchData = str.match(regex);\n```", "```js\n> 'abba'.match(/a/)\n[ 'a', index: 0, input: 'abba' ]\n```", "```js\n> 'abba'.match(/a/g)\n[ 'a', 'a' ]\n> 'abba'.match(/x/g)\nnull\n```", "```js\nstr.replace(search, replacement)\n```", "```js\n> 'axb cxd'.replace(/x/g, \"[$`,$&,$']\")\n'a[a,x,b cxd]b c[axb c,x,d]d'\n```", "```js\n> '\"foo\" and \"bar\"'.replace(/\"(.*?)\"/g, '#$1#')\n'#foo# and #bar#'\n```", "```js\nfunction (completeMatch, group_1, ..., group_n, offset, inputStr)\n```", "```js\n> function replaceFunc(match) { return 2 * match }\n> '3 apples and 5 oranges'.replace(/[0-9]+/g, replaceFunc)\n'6 apples and 10 oranges'\n```", "```js\n// Don\u2019t do that:\nvar count = 0;\nwhile (/a/g.test('babaa')) count++;\n```", "```js\nvar count = 0;\nvar regex = /a/g;\nwhile (regex.test('babaa')) count++;\n```", "```js\n// Don\u2019t do that:\nfunction extractQuoted(str) {\n    var match;\n    var result = [];\n    while ((match = /\"(.*?)\"/g.exec(str)) != null) {\n        result.push(match[1]);\n    }\n    return result;\n}\n```", "```js\nvar QUOTE_REGEX = /\"(.*?)\"/g;\nfunction extractQuoted(str) {\n    QUOTE_REGEX.lastIndex = 0;\n    var match;\n    var result = [];\n    while ((match = QUOTE_REGEX.exec(str)) != null) {\n        result.push(match[1]);\n    }\n    return result;\n}\n```", "```js\n> extractQuoted('\"hello\", \"world\"')\n[ 'hello', 'world' ]\n```", "```js\n// Naive implementation\nfunction countOccurrences(regex, str) {\n    var count = 0;\n    while (regex.test(str)) count++;\n    return count;\n}\n```", "```js\n> countOccurrences(/x/g, '_x_x')\n2\n```", "```js\ncountOccurrences(/x/, '_x_x') // never terminates\n```", "```js\n> var regex = /x/g;\n> regex.lastIndex = 2;\n> countOccurrences(regex, '_x_x')\n1\n```", "```js\nfunction countOccurrences(regex, str) {\n    if (! regex.global) {\n        throw new Error('Please set flag /g of regex');\n    }\n    var origLastIndex = regex.lastIndex;  // store\n    regex.lastIndex = 0;\n\n    var count = 0;\n    while (regex.test(str)) count++;\n\n    regex.lastIndex = origLastIndex;  // restore\n    return count;\n}\n```", "```js\nfunction countOccurrences(regex, str) {\n    if (! regex.global) {\n        throw new Error('Please set flag /g of regex');\n    }\n    return (str.match(regex) || []).length;\n}\n```", "```js\n> console.log(quoteText('*All* (most?) aspects.'))\n\\*All\\* \\(most\\?\\) aspects\\.\n```", "```js\nfunction quoteText(text) {\n    return text.replace(/[\\\\^$.*+?()[\\]{}|=!<>:-]/g, '\\\\$&');\n}\n```", "```js\n> /aa/.test('xaay')\ntrue\n> /^aa$/.test('xaay')\nfalse\n```", "```js\n> new RegExp('').test('dfadsfdsa')\ntrue\n> new RegExp('').test('')\ntrue\n```", "```js\n> new RegExp('')\n/(?:)/\n```", "```js\n> var never = /.^/;\n> never.test('abc')\nfalse\n> never.test('')\nfalse\n```", "```js\nfunction insertName(str, name) {\n    return str.replace(\n        /NAME/g,\n        function (completeMatch, offset) {\n            if (offset === 0 ||\n                (offset > 0 && str[offset-1] !== '\"')) {\n                return name;\n            } else {\n                return completeMatch;\n            }\n        }\n    );\n}\n```", "```js\n> insertName('NAME \"NAME\"', 'Jane')\n'Jane \"NAME\"'\n> insertName('\"NAME\" NAME', 'Jane')\n'\"NAME\" Jane'\n```", "```js\nfunction insertName(str, name) {\n    var tmpPrefix = ' ';\n    str = tmpPrefix + str;\n    str = str.replace(\n        /([^\"])NAME/g,\n        function (completeMatch, prefix) {\n            return prefix + name;\n        }\n    );\n    return str.slice(tmpPrefix.length); // remove tmpPrefix\n}\n```", "```js\n> new Date(2001, 1, 27, 14, 55)\nDate {Tue Feb 27 2001 14:55:00 GMT+0100 (CET)}\n> new Date(01, 1, 27, 14, 55)\nDate {Wed Feb 27 1901 14:55:00 GMT+0100 (CET)}\n```", "```js\n> new Date('2004-08-29')\nDate {Sun Aug 29 2004 02:00:00 GMT+0200 (CEST)}\n```", "```js\n> new Date(0)\nDate {Thu Jan 01 1970 01:00:00 GMT+0100 (CET)}\n```", "```js\n> new Date(123).getTime()\n123\n```", "```js\n> var d = new Date(NaN);\n> d.toString()\n'Invalid Date'\n> d.toJSON()\nnull\n> d.getTime()\nNaN\n> d.getYear()\nNaN\n```", "```js\n> Date.parse('1970-01-01')\n0\n> Date.parse('1970-01-02')\n86400000\n```", "```js\n> Date.parse('abc')\nNaN\n```", "```js\n> var d = new Date('1968-11-25');\nDate {Mon Nov 25 1968 01:00:00 GMT+0100 (CET)}\n> d.getDate()\n25\n> d.getDay()\n1\n```", "```js\nnew Date(2001,9,30, 17,43,7, 856);\n```", "```js\n    17:43:07 GMT+0100 (CET)\n    ```", "```js\n    17:43:07\n    ```", "```js\n    Tue Oct 30 2001\n    ```", "```js\n    10/30/2001\n    ```", "```js\n    Tue Oct 30 2001 17:43:07 GMT+0100 (CET)\n    ```", "```js\n    Date.parse(d.toString()) === d.valueOf()\n    ```", "```js\n    Tue Oct 30 17:43:07 2001\n    ```", "```js\n    Tue, 30 Oct 2001 16:43:07 GMT\n    ```", "```js\n    2001-10-30T16:43:07.856Z\n    ```", "```js\nYYYY-MM-DDTHH:mm:ss.sssZ\n```", "```js\n    > new Date().toISOString()\n    '2014-09-12T23:05:07.414Z'\n    ```", "```js\nYYYY-MM-DD\nYYYY-MM\nYYYY\n```", "```js\n> new Date('2001-02-22')\nDate {Thu Feb 22 2001 01:00:00 GMT+0100 (CET)}\n```", "```js\nTHH:mm:ss.sss\nTHH:mm:ss.sssZ\n\nTHH:mm:ss\nTHH:mm:ssZ\n\nTHH:mm\nTHH:mmZ\n```", "```js\n> new Date('T13:17')\nDate {Thu Jan 01 1970 13:17:00 GMT+0100 (CET)}\n```", "```js\n> new Date('2001-02-22T13:17')\nDate {Thu Feb 22 2001 13:17:00 GMT+0100 (CET)}\n```", "```js\n> new Date('1970-01-01').getTime()\n0\n> new Date('1970-01-02').getTime()\n86400000\n> new Date('1960-01-02').getTime()\n-315532800000\n```", "```js\n> new Date(0)\nDate {Thu Jan 01 1970 01:00:00 GMT+0100 (CET)}\n> new Date(24 * 60 * 60 * 1000)  // 1 day in ms\nDate {Fri Jan 02 1970 01:00:00 GMT+0100 (CET)}\n> new Date(-315532800000)\nDate {Sat Jan 02 1960 01:00:00 GMT+0100 (CET)}\n```", "```js\n> new Date('1980-05-21') > new Date('1980-05-20')\ntrue\n```", "```js\n> new Date('1980-05-21') - new Date('1980-05-20')\n86400000\n```", "```js\n> new Date('2024-10-03') + 86400000\n'Thu Oct 03 2024 02:00:00 GMT+0200 (CEST)86400000'\n> new Date(Number(new Date('2024-10-03')) + 86400000)\nFri Oct 04 2024 02:00:00 GMT+0200 (CEST)\n```", "```js\n> Math.ceil(3.999)\n4\n> Math.ceil(3.001)\n4\n> Math.ceil(-3.001)\n-3\n> Math.ceil(3.000)\n3\n```", "```js\n> Math.floor(3.999)\n3\n> Math.floor(3.001)\n3\n> Math.floor(-3.001)\n-4\n> Math.floor(3.000)\n3\n```", "```js\n> Math.pow(9, 2)\n81\n> Math.pow(36, 0.5)\n6\n```", "```js\n> Math.round(3.999)\n4\n> Math.round(3.001)\n3\n> Math.round(3.5)\n4\n> Math.round(-3.5)\n-3\n```", "```js\n> Math.sqrt(256)\n16\n```", "```js\n    function toRadians(degrees) {\n        return degrees / 180 * Math.PI;\n    }\n    ```", "```js\n    > toRadians(180)\n    3.141592653589793\n    > toRadians(90)\n    1.5707963267948966\n    ```", "```js\n    function toDegrees(radians) {\n        return radians / Math.PI * 180;\n    }\n    ```", "```js\n    > toDegrees(Math.PI * 2)\n    360\n    > toDegrees(Math.PI)\n    180\n    ```", "```js\n> Math.min()\nInfinity\n> Math.min(27)\n27\n> Math.min(27, -38)\n-38\n> Math.min(27, -38, -43)\n-43\n```", "```js\n> Math.min.apply(null, [27, -38, -43])\n-43\n```", "```js\n> Math.max()\n-Infinity\n> Math.max(7)\n7\n> Math.max(7, 10)\n10\n> Math.max(7, 10, -333)\n10\n```", "```js\n> Math.max.apply(null, [7, 10, -333])\n10\n```", "```js\n/**\n * Compute a random integer within the given range.\n *\n * @param [lower] Optional lower bound. Default: zero.\n * @returns A random integer i, lower \u2264 i < upper\n */\nfunction getRandomInteger(lower, upper) {\n    if (arguments.length === 1) {\n        upper = lower;\n        lower = 0;\n    }\n    return Math.floor(Math.random() * (upper - lower)) + lower;\n}\n```", "```js\n{\n    \"first\": \"Jane\",\n    \"last\": \"Porter\",\n    \"married\": true,\n    \"born\": 1890,\n    \"friends\": [ \"Tarzan\", \"Cheeta\" ]\n}\n```", "```js\n    function replacer(key, value) {\n        if (typeof value === 'number') {\n            value = 2 * value;\n        }\n        return value;\n    }\n    ```", "```js\n    > JSON.stringify({ a: 5, b: [ 2, 8 ] }, replacer)\n    '{\"a\":10,\"b\":[4,16]}'\n    ```", "```js\n    > JSON.stringify({foo: 1, bar: {foo: 1, bar: 1}}, ['bar'])\n    '{\"bar\":{\"bar\":1}}'\n    ```", "```js\n    > JSON.stringify(['a', 'b'], ['0'])\n    '[\"a\",\"b\"]'\n    ```", "```js\n> console.log(JSON.stringify({a: 0, b: ['\\n']}))\n{\"a\":0,\"b\":[\"\\n\"]}\n```", "```js\n> console.log(JSON.stringify({a: 0, b: ['\\n']}, null, 2))\n{\n  \"a\": 0,\n  \"b\": [\n    \"\\n\"\n  ]\n}\n```", "```js\n> console.log(JSON.stringify({a: 0, b: ['\\n']}, null, '|--'))\n{\n|--\"a\": 0,\n|--\"b\": [\n|--|--\"\\n\"\n|--]\n}\n```", "```js\nJSON.stringify(data, null, 4)\n```", "```js\n> var obj = Object.defineProperty({}, 'foo', { enumerable: false, value: 7 });\n> Object.getOwnPropertyNames(obj)\n[ 'foo' ]\n> obj.foo\n7\n> JSON.stringify(obj)\n'{}'\n```", "```js\n> JSON.stringify(function () {})\nundefined\n```", "```js\n> JSON.stringify({ foo: function () {} })\n'{}'\n```", "```js\n> JSON.stringify([ function () {} ])\n'[null]'\n```", "```js\n> JSON.stringify({ toJSON: function () { return 'Cool' } })\n'\"Cool\"'\n```", "```js\n> JSON.stringify(new Date('2011-07-29'))\n'\"2011-07-28T22:00:00.000Z\"'\n```", "```js\nfunction (key)\n```", "```js\nvar obj = {\n    toJSON: function (key) {\n        // Use JSON.stringify for nicer-looking output\n        console.log(JSON.stringify(key));\n        return 0;\n    }\n};\n```", "```js\n> JSON.stringify({ foo: obj, bar: [ obj ]})\n\"foo\"\n\"0\"\n'{\"foo\":0,\"bar\":[0]}'\n```", "```js\n> JSON.parse(\"'String'\") // illegal quotes\nSyntaxError: Unexpected token ILLEGAL\n> JSON.parse('\"String\"')\n'String'\n> JSON.parse('123')\n123\n> JSON.parse('[1, 2, 3]')\n[ 1, 2, 3 ]\n> JSON.parse('{ \"hello\": 123, \"world\": 456 }')\n{ hello: 123, world: 456 }\n```", "```js\nfunction dateReviver(key, value) {\n    if (typeof value === 'string') {\n        var x = Date.parse(value);\n        if (!isNaN(x)) { // valid date string?\n            return new Date(x);\n        }\n    }\n    return value;\n}\n```", "```js\n> var str = '{ \"name\": \"John\", \"birth\": \"2011-07-28T22:00:00.000Z\" }';\n> JSON.parse(str, dateReviver)\n{ name: 'John', birth: Thu, 28 Jul 2011 22:00:00 GMT }\n```", "```js\nfunction nodeVisitor(key, value)\n```", "```js\nfunction nodeVisitor(key, value) {\n    console.log([\n        // Use JSON.stringify for nicer-looking output\n        JSON.stringify(this), // parent\n        JSON.stringify(key),\n        JSON.stringify(value)\n    ].join(' # '));\n    return value; // don't change node\n}\n```", "```js\n> JSON.stringify(['a','b'], nodeVisitor)\n{\"\":[\"a\",\"b\"]} # \"\" # [\"a\",\"b\"]\n[\"a\",\"b\"] # \"0\" # \"a\"\n[\"a\",\"b\"] # \"1\" # \"b\"\n'[\"a\",\"b\"]'\n\n> JSON.stringify({a:1, b:2}, nodeVisitor)\n{\"\":{\"a\":1,\"b\":2}} # \"\" # {\"a\":1,\"b\":2}\n{\"a\":1,\"b\":2} # \"a\" # 1\n{\"a\":1,\"b\":2} # \"b\" # 2\n'{\"a\":1,\"b\":2}'\n\n> JSON.stringify('abc', nodeVisitor)\n{\"\":\"abc\"} # \"\" # \"abc\"\n'\"abc\"'\n```", "```js\n> JSON.parse('[\"a\",\"b\"]', nodeVisitor)\n[\"a\",\"b\"] # \"0\" # \"a\"\n[\"a\",\"b\"] # \"1\" # \"b\"\n{\"\":[\"a\",\"b\"]} # \"\" # [\"a\",\"b\"]\n[ 'a', 'b' ]\n\n> JSON.parse('{\"a\":1, \"b\":2}', nodeVisitor)\n{\"a\":1,\"b\":2} # \"a\" # 1\n{\"a\":1,\"b\":2} # \"b\" # 2\n{\"\":{\"a\":1,\"b\":2}} # \"\" # {\"a\":1,\"b\":2}\n{ a: 1, b: 2 }\n\n> JSON.parse('\"hello\"', nodeVisitor)\n{\"\":\"hello\"} # \"\" # \"hello\"\n'hello'\n```", "```js\n> encodeURI('http://example.com/F\u00fcr Elise/')\n'http://example.com/F%C3%BCr%20Elise/'\n```", "```js\n> encodeURIComponent('http://example.com/F\u00fcr Elise/')\n'http%3A%2F%2Fexample.com%2FF%C3%BCr%20Elise%2F'\n```", "```js\n> decodeURI('http://example.com/F%C3%BCr%20Elise/')\n'http://example.com/F\u00fcr Elise/'\n```", "```js\n> decodeURI('%2F')\n'%2F'\n> decodeURIComponent('%2F')\n'/'\n```", "```js\n> decodeURIComponent('http%3A%2F%2Fexample.com%2FF%C3%BCr%20Elise%2F')\n'http://example.com/F\u00fcr Elise/'\n```", "```js\neval(str)\n```", "```js\n> var a = 12;\n> eval('a + 5')\n17\n```", "```js\n> eval('{ foo: 123 }')  // code block\n123\n> eval('({ foo: 123 })')  // object literal\n{ foo: 123 }\n```", "```js\nfunction sloppyFunc() {\n    eval('var foo = 123');  // added to the scope of sloppyFunc\n    console.log(foo);  // 123\n}\n```", "```js\nfunction strictFunc() {\n    'use strict';\n    eval('var foo = 123');\n    console.log(foo);  // ReferenceError: foo is not defined\n}\n```", "```js\nvar x = 'global';\n\nfunction directEval() {\n    'use strict';\n    var x = 'local';\n\n    console.log(eval('x')); // local\n}\n```", "```js\nvar x = 'global';\n\nfunction indirectEval() {\n    'use strict';\n    var x = 'local';\n\n    // Don\u2019t call eval directly\n    console.log(eval.call(null, 'x')); // global\n    console.log(window.eval('x')); // global\n    console.log((1, eval)('x')); // global (1)\n\n    // Change the name of eval\n    var xeval = eval;\n    console.log(xeval('x')); // global\n\n    // Turn eval into a method\n    var obj = { eval: eval };\n    console.log(obj.eval('x')); // global\n}\n```", "```js\nfunction strictFunc() {\n    'use strict';\n\n    var code = '(function () { return this }())';\n    var result = eval.call(null, code);\n    console.log(result !== undefined); // true, sloppy mode\n}\n```", "```js\nnew Function(param1, ..., paramN, funcBody)\n```", "```js\nfunction (\u00abparam1\u00bb, ..., \u00abparamN\u00bb) {\n    \u00abfuncBody\u00bb\n}\n```", "```js\n> var f = new Function('x', 'y', 'return x+y');\n> f(3, 4)\n7\n```", "```js\nvar x = 'global';\n\nfunction strictFunc() {\n    'use strict';\n    var x = 'local';\n\n    var f = new Function('return x');\n    console.log(f()); // global\n}\n```", "```js\nfunction strictFunc() {\n    'use strict';\n\n    var sl = new Function('return this');\n    console.log(sl() !== undefined); // true, sloppy mode\n\n    var st = new Function('\"use strict\"; return this');\n    console.log(st() === undefined); // true, strict mode\n}\n```", "```js\nvar value = eval('obj.'+propName);\n```", "```js\nvar value = obj[propName];\n```", "```js\n> console.log('%s', { foo: 'bar' })\n[object Object]\n> console.log('%j', { foo: 'bar' })\n{\"foo\":\"bar\"}\n```", "```js\nvar persons = [\n    { firstName: 'Jane', lastName: 'Bond' },\n    { firstName: 'Lars', lastName: 'Croft', age: 72 }\n];\n// Equivalent:\nconsole.table(persons);\nconsole.table(persons, ['firstName', 'lastName', 'age']);\n```", "```js\n> ({}.foo) === undefined\ntrue\n```", "```js\n> 1 / 'abc'\nNaN\n```", "```js\n> 1 / 0\nInfinity\n```", "```js\nfunction toUTF16(codePoint) {\n    var TEN_BITS = parseInt('1111111111', 2);\n    function u(codeUnit) {\n        return '\\\\u'+codeUnit.toString(16).toUpperCase();\n    }\n\n    if (codePoint <= 0xFFFF) {\n        return u(codePoint);\n    }\n    codePoint -= 0x10000;\n\n    // Shift right to get to most significant 10 bits\n    var leadingSurrogate = 0xD800 | (codePoint >> 10);\n\n    // Mask to get least significant 10 bits\n    var trailingSurrogate = 0xDC00 | (codePoint & TEN_BITS);\n\n    return u(leadingSurrogate) + u(trailingSurrogate);\n}\n```", "```js\n> var f\\u006F\\u006F = 'abc';\n> foo\n'abc'\n\n> var \u03bb = 123;\n> \\u03BB\n123\n```", "```js\n> '\\xF6' === '\u00f6'\ntrue\n> '\\xF6' === '\\u00F6'\ntrue\n```", "```js\n    Content-Type: application/javascript; charset=utf-8\n    ```", "```js\n    <!doctype html>\n    <html>\n    <head>\n        <meta charset=\"UTF-8\">\n    ...\n    ```", "```js\nuglifyjs -b beautify=false,ascii-only=true test.js\n```", "```js\nvar \u03c3 = 'K\u00f6ln';\n```", "```js\nvar \\u03c3=\"K\\xf6ln\";\n```", "```js\nvar \u03c0 = Math.PI, \u03b5 = 1e-6;\n```", "```js\n<script charset=\"utf-8\" src=\"d3.js\"></script>\n```", "```js\n> console.log('o\\u0308')\n\u00f6\n```", "```js\n> toUTF16(0x1F404)\n'\\\\uD83D\\\\uDC04'\n```", "```js\n> var puny = require('punycode');\n> puny.ucs2.decode(str).length\n1\n```", "```js\n    > /^\\s$/.test('\\uFEFF')\n    true\n    ```", "```js\n    > /\\bb/.test('\u00fcber')\n    true\n    ```", "```js\n([\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF])\n```", "```js\n([BMP code point]|[leading surrogate][trailing surrogate])\n```", "```js\n    \\p{...} \\p{^...} \\P{...}\n    ```", "```js\n'use strict';\n```", "```js\n> var obj = { get foo() { return 'abc' } };\n> obj.foo\n'abc'\n```", "```js\n> var obj = { new: 'abc' };\n> obj.new\n'abc'\n```"]